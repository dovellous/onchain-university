<!DOCTYPE html>
<html dir="ltr" class="docs-wrapper docs-doc-page docs-version-current plugin-docs plugin-id-default docs-doc-id-tutorials/essentials/part-6-performance-normalization" data-theme="light" data-rh="lang,dir,class" lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta charset="UTF-8">
<meta name="generator" content="Docusaurus v2.2.0">
<title>Redux Essentials, Part 6: Performance and Normalizing Data | Redux</title><meta data-rh="true" property="og:image" content="https://redux.js.org/img/redux-logo-landscape.png"><meta data-rh="true" name="twitter:image" content="https://redux.js.org/img/redux-logo-landscape.png"><meta data-rh="true" name="docusaurus_locale" content="en"><meta data-rh="true" name="docsearch:language" content="en"><meta data-rh="true" name="twitter:card" content="summary"><meta data-rh="true" name="docusaurus_version" content="current"><meta data-rh="true" name="docusaurus_tag" content="docs-default-current"><meta data-rh="true" name="docsearch:version" content="current"><meta data-rh="true" name="docsearch:docusaurus_tag" content="docs-default-current"><link data-rh="true" rel="icon" href="https://redux.js.org/img/favicon/favicon.ico"><link data-rh="true" rel="preconnect" href="https://yuqhc5ocw0-dsn.algolia.net/" crossorigin="anonymous"><link rel="preconnect" href="https://www.google-analytics.com/">
<script>window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)},ga.l=+new Date,ga("create","UA-130598673-1","auto"),ga("send","pageview")</script>
<script async="" src="Redux%20Essentials,%20Part%206%20Performance%20and%20Normalizing%20Data%20Redux_files/analytics.js"></script>


<link rel="search" type="application/opensearchdescription+xml" title="Redux" href="https://redux.js.org/opensearch.xml"><link rel="stylesheet" href="Redux%20Essentials,%20Part%206%20Performance%20and%20Normalizing%20Data%20Redux_files/styles.68aab04a.css">
<link rel="preload" href="Redux%20Essentials,%20Part%206%20Performance%20and%20Normalizing%20Data%20Redux_files/runtime~main.c942408f.js" as="script">
<link rel="preload" href="Redux%20Essentials,%20Part%206%20Performance%20and%20Normalizing%20Data%20Redux_files/main.aecab9b3.js" as="script">
<meta name="viewport" content="width=device-width, initial-scale=1.0" data-rh="true"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/5d5abd3d.d7668199.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/6cf0a46d.945b4e52.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/cc5eedff.76fb09ca.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/83a94416.645b5912.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/8281e42f.706502fd.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b01a8152.a9793f7f.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/f14fd549.88b64dda.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/7005c2b0.f5e47935.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b67e346f.2f0703c9.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/0df8a05e.dfd17607.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1a9771aa.5f6e8f6a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/41f6d251.3efee4af.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/5ab55e80.52304307.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/11938ad8.569e3126.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/fa5fc421.0c27899b.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/f81b1e43.90be1e54.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/052f08fe.c4dedf93.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/93a592e4.3dc3a860.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/385bf224.f7e7ff01.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/3fb85e0e.66347311.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1f172ca5.5bcbf8de.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/3573ab49.821b5b73.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/eec52e28.fe7ad114.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/4244f4d4.9c7dab28.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/0ee6ee39.7cba0cd1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/664b7567.0f0176c9.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="canonical" href="https://redux.js.org/tutorials/essentials/part-6-performance-normalization" data-rh="true"><link rel="alternate" href="https://redux.js.org/tutorials/essentials/part-6-performance-normalization" hreflang="en" data-rh="true"><link rel="alternate" href="https://redux.js.org/tutorials/essentials/part-6-performance-normalization" hreflang="x-default" data-rh="true"><meta property="og:url" content="https://redux.js.org/tutorials/essentials/part-6-performance-normalization" data-rh="true"><meta property="og:title" content="Redux Essentials, Part 6: Performance and Normalizing Data | Redux" data-rh="true"><meta name="description" content="The official Redux Essentials tutorial: learn how to improve app performance and structure data correctly" data-rh="true"><meta property="og:description" content="The official Redux Essentials tutorial: learn how to improve app performance and structure data correctly" data-rh="true"></head>
<body class="" data-rh="class" style="overflow: visible;">
<script>!function(){function t(t){document.documentElement.setAttribute("data-theme",t)}var e=function(){var t=null;try{t=localStorage.getItem("theme")}catch(t){}return t}();t(null!==e?e:"light")}()</script><div id="__docusaurus"><div role="region" aria-label="Skip to main content"><a class="skipToContent_fXgn" href="#docusaurus_skipToContent_fallback">Skip to main content</a></div><nav class="navbar navbar--fixed-top"><div class="navbar__inner"><div class="navbar__items"><button aria-label="Toggle navigation bar" aria-expanded="false" class="navbar__toggle clean-btn" type="button"><svg width="30" height="30" viewBox="0 0 30 30" aria-hidden="true"><path stroke="currentColor" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" d="M4 7h22M4 15h22M4 23h22"></path></svg></button><a class="navbar__brand" href="https://redux.js.org/"><div class="navbar__logo"><img src="Redux%20Essentials,%20Part%206%20Performance%20and%20Normalizing%20Data%20Redux_files/redux.svg" alt="Redux Logo" class="themedImage_ToTc themedImage--light_HNdA"></div><b class="navbar__title text--truncate">Redux</b></a></div><div class="navbar__items navbar__items--right"><a class="navbar__item navbar__link" href="https://redux.js.org/introduction/getting-started">Getting Started</a><a class="navbar__item navbar__link" href="https://redux.js.org/tutorials/essentials/part-1-overview-concepts">Tutorial</a><a aria-current="page" class="navbar__item navbar__link navbar__link--active" href="https://redux.js.org/usage/">Usage Guide</a><a aria-current="page" class="navbar__item navbar__link navbar__link--active" href="https://redux.js.org/api/api-reference">API</a><a class="navbar__item navbar__link" href="https://redux.js.org/faq">FAQ</a><a aria-current="page" class="navbar__item navbar__link navbar__link--active" href="https://redux.js.org/style-guide/">Best Practices</a><a href="https://www.github.com/reduxjs/redux" target="_blank" rel="noopener noreferrer" class="navbar__item navbar__link">GitHub<svg width="13.5" height="13.5" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_nPIU"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a><a class="navbar__item navbar__link" href="https://redux.js.org/introduction/getting-started#help-and-discussion">Need help?</a><div class="toggle_vylO colorModeToggle_DEke"><button class="clean-btn toggleButton_gllP" type="button" title="Switch between dark and light mode (currently light mode)" aria-label="Switch between dark and light mode (currently light mode)" aria-live="polite"><svg viewBox="0 0 24 24" width="24" height="24" class="lightToggleIcon_pyhR"><path fill="currentColor" d="M12,9c1.65,0,3,1.35,3,3s-1.35,3-3,3s-3-1.35-3-3S10.35,9,12,9 M12,7c-2.76,0-5,2.24-5,5s2.24,5,5,5s5-2.24,5-5 S14.76,7,12,7L12,7z M2,13l2,0c0.55,0,1-0.45,1-1s-0.45-1-1-1l-2,0c-0.55,0-1,0.45-1,1S1.45,13,2,13z M20,13l2,0c0.55,0,1-0.45,1-1 s-0.45-1-1-1l-2,0c-0.55,0-1,0.45-1,1S19.45,13,20,13z M11,2v2c0,0.55,0.45,1,1,1s1-0.45,1-1V2c0-0.55-0.45-1-1-1S11,1.45,11,2z M11,20v2c0,0.55,0.45,1,1,1s1-0.45,1-1v-2c0-0.55-0.45-1-1-1C11.45,19,11,19.45,11,20z M5.99,4.58c-0.39-0.39-1.03-0.39-1.41,0 c-0.39,0.39-0.39,1.03,0,1.41l1.06,1.06c0.39,0.39,1.03,0.39,1.41,0s0.39-1.03,0-1.41L5.99,4.58z M18.36,16.95 c-0.39-0.39-1.03-0.39-1.41,0c-0.39,0.39-0.39,1.03,0,1.41l1.06,1.06c0.39,0.39,1.03,0.39,1.41,0c0.39-0.39,0.39-1.03,0-1.41 L18.36,16.95z M19.42,5.99c0.39-0.39,0.39-1.03,0-1.41c-0.39-0.39-1.03-0.39-1.41,0l-1.06,1.06c-0.39,0.39-0.39,1.03,0,1.41 s1.03,0.39,1.41,0L19.42,5.99z M7.05,18.36c0.39-0.39,0.39-1.03,0-1.41c-0.39-0.39-1.03-0.39-1.41,0l-1.06,1.06 c-0.39,0.39-0.39,1.03,0,1.41s1.03,0.39,1.41,0L7.05,18.36z"></path></svg><svg viewBox="0 0 24 24" width="24" height="24" class="darkToggleIcon_wfgR"><path fill="currentColor" d="M9.37,5.51C9.19,6.15,9.1,6.82,9.1,7.5c0,4.08,3.32,7.4,7.4,7.4c0.68,0,1.35-0.09,1.99-0.27C17.45,17.19,14.93,19,12,19 c-3.86,0-7-3.14-7-7C5,9.07,6.81,6.55,9.37,5.51z M12,3c-4.97,0-9,4.03-9,9s4.03,9,9,9s9-4.03,9-9c0-0.46-0.04-0.92-0.1-1.36 c-0.98,1.37-2.58,2.26-4.4,2.26c-2.98,0-5.4-2.42-5.4-5.4c0-1.81,0.89-3.42,2.26-4.4C12.92,3.04,12.46,3,12,3L12,3z"></path></svg></button></div><div class="searchBox_ZlJk"><button type="button" class="DocSearch DocSearch-Button" aria-label="Search"><span class="DocSearch-Button-Container"><svg width="20" height="20" class="DocSearch-Search-Icon" viewBox="0 0 20 20"><path d="M14.386 14.386l4.0877 4.0877-4.0877-4.0877c-2.9418 2.9419-7.7115 2.9419-10.6533 0-2.9419-2.9418-2.9419-7.7115 0-10.6533 2.9418-2.9419 7.7115-2.9419 10.6533 0 2.9419 2.9418 2.9419 7.7115 0 10.6533z" stroke="currentColor" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"></path></svg><span class="DocSearch-Button-Placeholder">Search</span></span><span class="DocSearch-Button-Keys"><kbd class="DocSearch-Button-Key"><svg width="15" height="15" class="DocSearch-Control-Key-Icon"><path d="M4.505 4.496h2M5.505 5.496v5M8.216 4.496l.055 5.993M10 7.5c.333.333.5.667.5 1v2M12.326 4.5v5.996M8.384 4.496c1.674 0 2.116 0 2.116 1.5s-.442 1.5-2.116 1.5M3.205 9.303c-.09.448-.277 1.21-1.241 1.203C1 10.5.5 9.513.5 8V7c0-1.57.5-2.5 1.464-2.494.964.006 1.134.598 1.24 1.342M12.553 10.5h1.953" stroke-width="1.2" stroke="currentColor" fill="none" stroke-linecap="square"></path></svg></kbd><kbd class="DocSearch-Button-Key">K</kbd></span></button></div></div></div><div role="presentation" class="navbar-sidebar__backdrop"></div></nav><div id="docusaurus_skipToContent_fallback" class="main-wrapper mainWrapper_z2l0 docsWrapper_BCFX"><button aria-label="Scroll back to top" class="clean-btn theme-back-to-top-button backToTopButton_sjWU" type="button"></button><div class="docPage__5DB"><aside class="theme-doc-sidebar-container docSidebarContainer_b6E3"><div class="sidebar_njMd"><nav class="menu thin-scrollbar menu_SIkG"><ul class="theme-doc-sidebar-menu menu__list"><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a href="#" class="menu__link menu__link--sublist menu__link--sublist-caret" aria-expanded="false">Introduction</a></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item"><div class="menu__list-item-collapsible"><a href="#" class="menu__link menu__link--sublist menu__link--sublist-caret menu__link--active" aria-expanded="true">Tutorials</a></div><ul style="display:block;overflow:visible;height:auto" class="menu__list"><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/index">Tutorials Index</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/quick-start">Quick Start</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/typescript-quick-start">TypeScript Quick Start</a></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-2 menu__list-item"><div class="menu__list-item-collapsible"><a href="#" class="menu__link menu__link--sublist menu__link--sublist-caret menu__link--active" aria-expanded="true" tabindex="0">Redux Essentials</a></div><ul class="menu__list" style="display: block; overflow: visible; height: auto; will-change: height; transition: height 318ms ease-in-out 0s;"><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/essentials/part-1-overview-concepts">Redux Overview and Concepts</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/essentials/part-2-app-structure">Redux Toolkit App Structure</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/essentials/part-3-data-flow">Basic Redux Data Flow</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/essentials/part-4-using-data">Using Redux Data</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/essentials/part-5-async-logic">Async Logic and Data Fetching</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link menu__link--active" tabindex="0" href="https://redux.js.org/tutorials/essentials/part-6-performance-normalization" aria-current="page">Performance and Normalizing Data</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/essentials/part-7-rtk-query-basics">RTK Query Basics</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/essentials/part-8-rtk-query-advanced">RTK Query Advanced Patterns</a></li></ul></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-2 menu__list-item"><div class="menu__list-item-collapsible"><a href="#" class="menu__link menu__link--sublist menu__link--sublist-caret" aria-expanded="true" tabindex="0">Redux Fundamentals</a></div><ul class="menu__list" style="display: block; overflow: visible; height: auto; will-change: height; transition: height 318ms ease-in-out 0s;"><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/fundamentals/part-1-overview">Redux Overview</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/fundamentals/part-2-concepts-data-flow">Redux Concepts and Data Flow</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/fundamentals/part-3-state-actions-reducers">State, Actions, and Reducers</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/fundamentals/part-4-store">Store</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/fundamentals/part-5-ui-react">UI and React</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/fundamentals/part-6-async-logic">Async Logic and Data Fetching</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/fundamentals/part-7-standard-patterns">Standard Redux Patterns</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/fundamentals/part-8-modern-redux">Modern Redux with Redux Toolkit</a></li></ul></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/videos">Videos</a></li></ul></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a href="#" class="menu__link menu__link--sublist menu__link--sublist-caret" aria-expanded="false">Using Redux</a></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a href="#" class="menu__link menu__link--sublist menu__link--sublist-caret" aria-expanded="false">Understanding Redux</a></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a href="#" class="menu__link menu__link--sublist menu__link--sublist-caret" aria-expanded="false">FAQ</a></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a href="#" class="menu__link menu__link--sublist menu__link--sublist-caret" aria-expanded="false">Style Guide</a></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a href="#" class="menu__link menu__link--sublist menu__link--sublist-caret" aria-expanded="false">API Reference</a></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item"><div class="menu__list-item-collapsible"><a href="#" class="menu__link menu__link--sublist menu__link--sublist-caret" aria-expanded="true">Redux Toolkit</a></div><ul class="menu__list" style="display: block; overflow: visible; height: auto; will-change: height; transition: height 190ms ease-in-out 0s;"><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/redux-toolkit/overview">Redux Toolkit: Overview</a></li></ul></li></ul></nav></div></aside><main class="docMainContainer_gTbr"><div class="container padding-top--md padding-bottom--lg"><div class="row"><div class="col docItemCol_VOVn"><div class="docItemContainer_Djhp"><article><nav class="theme-doc-breadcrumbs breadcrumbsContainer_Z_bl" aria-label="Breadcrumbs"><ul class="breadcrumbs" itemscope="" itemtype="https://schema.org/BreadcrumbList"><li class="breadcrumbs__item"><a aria-label="Home page" class="breadcrumbs__link" href="https://redux.js.org/"><svg viewBox="0 0 24 24" class="breadcrumbHomeIcon_OVgt"><path d="M10 19v-5h4v5c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-7h1.7c.46 0 .68-.57.33-.87L12.67 3.6c-.38-.34-.96-.34-1.34 0l-8.36 7.53c-.34.3-.13.87.33.87H5v7c0 .55.45 1 1 1h3c.55 0 1-.45 1-1z" fill="currentColor"></path></svg></a></li><li class="breadcrumbs__item"><span class="breadcrumbs__link">Tutorials</span><meta itemprop="position" content="1"></li><li class="breadcrumbs__item"><span class="breadcrumbs__link">Redux Essentials</span><meta itemprop="position" content="2"></li><li itemscope="" itemprop="itemListElement" itemtype="https://schema.org/ListItem" class="breadcrumbs__item breadcrumbs__item--active"><span class="breadcrumbs__link" itemprop="name">Performance and Normalizing Data</span><meta itemprop="position" content="3"></li></ul></nav><div class="tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo"><button type="button" class="clean-btn tocCollapsibleButton_TO0P">On this page</button></div><div class="theme-doc-markdown markdown"><header><h1>Redux Essentials, Part 6: Performance and Normalizing Data</h1></header><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>What You'll Learn</div><div class="admonitionContent_S0QG"><ul class=""><li>How to create memoized selector functions with <code>createSelector</code></li><li>Patterns for optimizing component rendering performance</li><li>How to use <code>createEntityAdapter</code> to store and update normalized data</li></ul></div></div><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>Prerequisites</div><div class="admonitionContent_S0QG"><ul class=""><li>Completion of <a href="https://redux.js.org/tutorials/essentials/part-5-async-logic">Part 5</a> to understand data fetching flow</li></ul></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a class="hash-link" href="#introduction" title="Direct link to heading">​</a></h2><p>In <a href="https://redux.js.org/tutorials/essentials/part-5-async-logic">Part 5: Async Logic and Data Fetching</a>,
 we saw how to write async thunks to fetch data from a server API, 
patterns for handling async request loading state, and use of selector 
functions for encapsulating lookups of data from the Redux state.</p><p>In
 this section, we'll look at optimized patterns for ensuring good 
performance in our application, and techniques for automatically 
handling common updates of data in the store.</p><p>So far, most of our functionality has been centered around the <code>posts</code>
 feature. We're going to add a couple new sections of the app. After 
those are added, we'll look at some specific details of how we've built 
things, and talk about some weaknesses with what we've built so far and 
how we can improve the implementation.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="adding-user-pages">Adding User Pages<a class="hash-link" href="#adding-user-pages" title="Direct link to heading">​</a></h2><p>We're
 fetching a list of users from our fake API, and we can choose a user as
 the author when we add a new post. But, a social media app needs the 
ability to look at the page for a specific user and see all the posts 
they've made. Let's add a page to show the list of all users, and 
another to show all posts by a specific user.</p><p>We'll start by adding a new <code>&lt;UsersList&gt;</code> component. It follows the usual pattern of reading some data from the store with <code>useSelector</code>, and mapping over the array to show a list of users with links to their individual pages:</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockTitle_Ktv7">features/users/UsersList.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'react'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"> useSelector </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'react-redux'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">Link</span><span class="token imports"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'react-router-dom'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"> selectAllUsers </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'./usersSlice'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color: rgb(230, 216, 116);">UsersList</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> users </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">useSelector</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">selectAllUsers</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> renderedUsers </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> users</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">map</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">user</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">li</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">key</span><span class="token tag script language-javascript script-punctuation punctuation" style="color: rgb(248, 248, 242);">=</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token tag script language-javascript" style="color: rgb(249, 38, 114);">user</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token tag script language-javascript property-access" style="color: rgb(249, 38, 114);">id</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">      </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">Link</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">to</span><span class="token tag script language-javascript script-punctuation punctuation" style="color: rgb(248, 248, 242);">=</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token tag script language-javascript template-string template-punctuation string" style="color: rgb(166, 226, 46);">`</span><span class="token tag script language-javascript template-string string" style="color: rgb(166, 226, 46);">/users/</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color: rgb(248, 248, 242);">${</span><span class="token tag script language-javascript template-string interpolation" style="color: rgb(249, 38, 114);">user</span><span class="token tag script language-javascript template-string interpolation punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token tag script language-javascript template-string interpolation property-access" style="color: rgb(249, 38, 114);">id</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag script language-javascript template-string template-punctuation string" style="color: rgb(166, 226, 46);">`</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain">user</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">name</span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">Link</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">    </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">li</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">return</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">section</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">      </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">h2</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text">Users</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">h2</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">      </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">ul</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain">renderedUsers</span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">ul</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">    </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">section</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We don't yet have a <code>selectAllUsers</code> selector, so we'll need to add that to <code>usersSlice.js</code> along with a <code>selectUserById</code> selector:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockTitle_Ktv7">features/users/usersSlice.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">default</span><span class="token plain"> usersSlice</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">reducer</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token function-variable function" style="color: rgb(230, 216, 116);">selectAllUsers</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token parameter">state</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">users</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token function-variable function" style="color: rgb(230, 216, 116);">selectUserById</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">state</span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token parameter"> userId</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">users</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">find</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">user</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> user</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">id</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">===</span><span class="token plain"> userId</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>And we'll add a <code>&lt;UserPage&gt;</code>, which is similar to our <code>&lt;SinglePostPage&gt;</code> in taking a <code>userId</code> parameter from the router:</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockTitle_Ktv7">features/users/UserPage.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'react'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"> useSelector </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'react-redux'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">Link</span><span class="token imports"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'react-router-dom'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"> selectUserById </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'../users/usersSlice'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"> selectAllPosts </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'../posts/postsSlice'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color: rgb(230, 216, 116);">UserPage</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token parameter"> match </span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"> userId </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> match</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">params</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> user </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">useSelector</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">state</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">selectUserById</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> userId</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> postsForUser </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">useSelector</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">state</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> allPosts </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">selectAllPosts</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">return</span><span class="token plain"> allPosts</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">filter</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">post</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> post</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">user</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">===</span><span class="token plain"> userId</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> postTitles </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> postsForUser</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">map</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">post</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">li</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">key</span><span class="token tag script language-javascript script-punctuation punctuation" style="color: rgb(248, 248, 242);">=</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token tag script language-javascript" style="color: rgb(249, 38, 114);">post</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token tag script language-javascript property-access" style="color: rgb(249, 38, 114);">id</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">      </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">Link</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">to</span><span class="token tag script language-javascript script-punctuation punctuation" style="color: rgb(248, 248, 242);">=</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token tag script language-javascript template-string template-punctuation string" style="color: rgb(166, 226, 46);">`</span><span class="token tag script language-javascript template-string string" style="color: rgb(166, 226, 46);">/posts/</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color: rgb(248, 248, 242);">${</span><span class="token tag script language-javascript template-string interpolation" style="color: rgb(249, 38, 114);">post</span><span class="token tag script language-javascript template-string interpolation punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token tag script language-javascript template-string interpolation property-access" style="color: rgb(249, 38, 114);">id</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag script language-javascript template-string template-punctuation string" style="color: rgb(166, 226, 46);">`</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain">post</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">title</span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">Link</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">    </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">li</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">return</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">section</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">      </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">h2</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain">user</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">name</span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">h2</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">      </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">ul</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain">postTitles</span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">ul</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">    </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">section</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>As we've seen before, we can take data from one <code>useSelector</code> call, or from props, and use that to help decide what to read from the store in another <code>useSelector</code> call.</p><p>As usual, we will add routes for these components in <code>&lt;App&gt;</code>:</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockTitle_Ktv7">App.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">          </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">Route</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">exact</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">path</span><span class="token tag attr-value punctuation attr-equals" style="color: rgb(248, 248, 242);">=</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag attr-value" style="color: rgb(230, 216, 116);">/posts/:postId</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">component</span><span class="token tag script language-javascript script-punctuation punctuation" style="color: rgb(248, 248, 242);">=</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token tag script language-javascript maybe-class-name" style="color: rgb(249, 38, 114);">SinglePostPage</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">          </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">Route</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">exact</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">path</span><span class="token tag attr-value punctuation attr-equals" style="color: rgb(248, 248, 242);">=</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag attr-value" style="color: rgb(230, 216, 116);">/editPost/:postId</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">component</span><span class="token tag script language-javascript script-punctuation punctuation" style="color: rgb(248, 248, 242);">=</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token tag script language-javascript maybe-class-name" style="color: rgb(249, 38, 114);">EditPostForm</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">/&gt;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">          </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">Route</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">exact</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">path</span><span class="token tag attr-value punctuation attr-equals" style="color: rgb(248, 248, 242);">=</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag attr-value" style="color: rgb(230, 216, 116);">/users</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">component</span><span class="token tag script language-javascript script-punctuation punctuation" style="color: rgb(248, 248, 242);">=</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token tag script language-javascript maybe-class-name" style="color: rgb(249, 38, 114);">UsersList</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">/&gt;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">          </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">Route</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">exact</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">path</span><span class="token tag attr-value punctuation attr-equals" style="color: rgb(248, 248, 242);">=</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag attr-value" style="color: rgb(230, 216, 116);">/users/:userId</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">component</span><span class="token tag script language-javascript script-punctuation punctuation" style="color: rgb(248, 248, 242);">=</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token tag script language-javascript maybe-class-name" style="color: rgb(249, 38, 114);">UserPage</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">          </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">Redirect</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">to</span><span class="token tag attr-value punctuation attr-equals" style="color: rgb(248, 248, 242);">=</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag attr-value" style="color: rgb(230, 216, 116);">/</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">/&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We'll also add another tab in <code>&lt;Navbar&gt;</code> that links to <code>/users</code> so that we can click and go to <code>&lt;UsersList&gt;</code>:</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockTitle_Ktv7">app/Navbar.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color: rgb(230, 216, 116);">Navbar</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">return</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">nav</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">      </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">section</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">        </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">h1</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text">Redux Essentials Example</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">h1</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">        </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">div</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">className</span><span class="token tag attr-value punctuation attr-equals" style="color: rgb(248, 248, 242);">=</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag attr-value" style="color: rgb(230, 216, 116);">navContent</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">          </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">div</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">className</span><span class="token tag attr-value punctuation attr-equals" style="color: rgb(248, 248, 242);">=</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag attr-value" style="color: rgb(230, 216, 116);">navLinks</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">            </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">Link</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">to</span><span class="token tag attr-value punctuation attr-equals" style="color: rgb(248, 248, 242);">=</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag attr-value" style="color: rgb(230, 216, 116);">/</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text">Posts</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">Link</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">            </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">Link</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">to</span><span class="token tag attr-value punctuation attr-equals" style="color: rgb(248, 248, 242);">=</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag attr-value" style="color: rgb(230, 216, 116);">/users</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text">Users</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">Link</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">          </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">div</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">        </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">div</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">      </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">section</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">    </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">nav</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="adding-notifications">Adding Notifications<a class="hash-link" href="#adding-notifications" title="Direct link to heading">​</a></h2><p>No
 social media app would be complete without some notifications popping 
up to tell us that someone has sent a message, left a comment, or 
reacted to one of our posts.</p><p>In a real application, our app client
 would be in constant communication with the backend server, and the 
server would push an update to the client every time something happens. 
Since this is a small example app, we're going to mimic that process by 
adding a button to actually fetch some notification entries from our 
fake API. We also don't have any other <em>real</em> users sending 
messages or reacting to posts, so the fake API will just create some 
random notification entries every time we make a request. (Remember, the
 goal here is to see how to use Redux itself.)</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="notifications-slice">Notifications Slice<a class="hash-link" href="#notifications-slice" title="Direct link to heading">​</a></h3><p>Since
 this is a new part of our app, the first step is to create a new slice 
for our notifications, and an async thunk to fetch some notification 
entries from the API. In order to create some realistic notifications, 
we'll include the timestamp of the latest notification we have in state.
 That will let our mock server generate notifications newer than that 
timestamp.</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockTitle_Ktv7">features/notifications/notificationsSlice.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"> createSlice</span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token imports"> createAsyncThunk </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'@reduxjs/toolkit'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"> client </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'../../api/client'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> fetchNotifications </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">createAsyncThunk</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token string" style="color: rgb(166, 226, 46);">'notifications/fetchNotifications'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">async</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">_</span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token parameter"> </span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token parameter"> getState </span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> allNotifications </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">selectAllNotifications</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token function" style="color: rgb(230, 216, 116);">getState</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">[</span><span class="token plain">latestNotification</span><span class="token punctuation" style="color: rgb(248, 248, 242);">]</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> allNotifications</span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> latestTimestamp </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> latestNotification </span><span class="token operator" style="color: rgb(248, 248, 242);">?</span><span class="token plain"> latestNotification</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">date</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">''</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> response </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">await</span><span class="token plain"> client</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">get</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token template-string template-punctuation string" style="color: rgb(166, 226, 46);">`</span><span class="token template-string string" style="color: rgb(166, 226, 46);">/fakeApi/notifications?since=</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color: rgb(248, 248, 242);">${</span><span class="token template-string interpolation">latestTimestamp</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token template-string template-punctuation string" style="color: rgb(166, 226, 46);">`</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">return</span><span class="token plain"> response</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">data</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> notificationsSlice </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">createSlice</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">name</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'notifications'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">initialState</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">[</span><span class="token punctuation" style="color: rgb(248, 248, 242);">]</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">reducers</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token function" style="color: rgb(230, 216, 116);">extraReducers</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">builder</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    builder</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">addCase</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">fetchNotifications</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">fulfilled</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">state</span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token parameter"> action</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">push</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token spread operator" style="color: rgb(248, 248, 242);">...</span><span class="token plain">action</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">payload</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token comment" style="color: rgb(198, 202, 210);">// Sort with newest first</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">sort</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">a</span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token parameter"> b</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> b</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">date</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">localeCompare</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">a</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">date</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">default</span><span class="token plain"> notificationsSlice</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">reducer</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token function-variable function" style="color: rgb(230, 216, 116);">selectAllNotifications</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token parameter">state</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">notifications</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>As with the other slices, import <code>notificationsReducer</code> into <code>store.js</code> and add it to the <code>configureStore()</code> call.</p><p>We've written an async thunk called <code>fetchNotifications</code>,
 which will retrieve a list of new notifications from the server. As 
part of that, we want to use the creation timestamp of the most recent 
notification as part of our request, so that the server knows it should 
only send back notifications that are actually new.</p><p>We know that we will be getting back an array of notifications, so we can pass them as separate arguments to <code>state.push()</code>,
 and the array will add each item. We also want to make sure that 
they're sorted so that the most recent notification is first in the 
array, just in case the server were to send them out of order. (As a 
reminder, <code>array.sort()</code> always mutates the existing array - this is only safe because we're using <code>createSlice</code> and Immer inside.)</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="thunk-arguments">Thunk Arguments<a class="hash-link" href="#thunk-arguments" title="Direct link to heading">​</a></h3><p>If you look at our <code>fetchNotifications</code> thunk, it has something new that we haven't seen before. Let's talk about thunk arguments for a minute.</p><p>We've already seen that we can pass an argument into a thunk action creator when we dispatch it, like <code>dispatch(addPost(newPost))</code>. For <code>createAsyncThunk</code>
 specifically, you can only pass in one argument, and whatever we pass 
in becomes the first argument of the payload creation callback.</p><p>The second argument to our payload creator is a <code>thunkAPI</code> object containing several useful functions and pieces of information:</p><ul class=""><li><code>dispatch</code> and <code>getState</code>: the actual <code>dispatch</code> and <code>getState</code>
 methods from our Redux store. You can use these inside the thunk to 
dispatch more actions, or get the latest Redux store state (such as 
reading an updated value after another action is dispatched).</li><li><code>extra</code>:
 the "extra argument" that can be passed into the thunk middleware when 
creating the store. This is typically some kind of API wrapper, such as a
 set of functions that know how to make API calls to your application's 
server and return data, so that your thunks don't have to have all the 
URLs and query logic directly inside.</li><li><code>requestId</code>: a unique random ID value for this thunk call. Useful for tracking status of an individual request.</li><li><code>signal</code>: An <code>AbortController.signal</code> function that can be used to cancel an in-progress request.</li><li><code>rejectWithValue</code>: a utility that helps customize the contents of a <code>rejected</code> action if the thunk receives an error.</li></ul><p>(If you're writing a thunk by hand instead of using <code>createAsyncThunk</code>, the thunk function will get<code>(dispatch, getState)</code> as separate arguments, instead of putting them together in one object.)</p><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_S0QG"><p>For more details on these arguments and how to handle canceling thunks and requests, see <a href="https://redux-toolkit.js.org/api/createAsyncThunk" target="_blank" rel="noopener noreferrer">the <code>createAsyncThunk</code> API reference page</a>.</p></div></div><p>In
 this case, we know that the list of notifications is in our Redux store
 state, and that the latest notification should be first in the array. 
We can destructure the <code>getState</code> function out of the <code>thunkAPI</code> object, call it to read the state value, and use the <code>selectAllNotifications</code>
 selector to give us just the array of notifications. Since the array of
 notifications is sorted newest first, we can grab the latest one using 
array destructuring.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="adding-the-notifications-list">Adding the Notifications List<a class="hash-link" href="#adding-the-notifications-list" title="Direct link to heading">​</a></h3><p>With that slice created, we can add a <code>&lt;NotificationsList&gt;</code> component:</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockTitle_Ktv7">features/notifications/NotificationsList.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'react'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"> useSelector </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'react-redux'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"> formatDistanceToNow</span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token imports"> parseISO </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'date-fns'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"> selectAllUsers </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'../users/usersSlice'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"> selectAllNotifications </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'./notificationsSlice'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color: rgb(230, 216, 116);">NotificationsList</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> notifications </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">useSelector</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">selectAllNotifications</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> users </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">useSelector</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">selectAllUsers</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> renderedNotifications </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> notifications</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">map</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">notification</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> date </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">parseISO</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">notification</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">date</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> timeAgo </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">formatDistanceToNow</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">date</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> user </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> users</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">find</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">user</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> user</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">id</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">===</span><span class="token plain"> notification</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">user</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">||</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">name</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'Unknown User'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">return</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">div</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">key</span><span class="token tag script language-javascript script-punctuation punctuation" style="color: rgb(248, 248, 242);">=</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token tag script language-javascript" style="color: rgb(249, 38, 114);">notification</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token tag script language-javascript property-access" style="color: rgb(249, 38, 114);">id</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">className</span><span class="token tag attr-value punctuation attr-equals" style="color: rgb(248, 248, 242);">=</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag attr-value" style="color: rgb(230, 216, 116);">notification</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">        </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">div</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">          </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">b</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain">user</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">name</span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">b</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain">notification</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">message</span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">        </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">div</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">        </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">div</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">title</span><span class="token tag script language-javascript script-punctuation punctuation" style="color: rgb(248, 248, 242);">=</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token tag script language-javascript" style="color: rgb(249, 38, 114);">notification</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token tag script language-javascript property-access" style="color: rgb(249, 38, 114);">date</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">          </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">i</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain">timeAgo</span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain-text"> ago</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">i</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">        </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">div</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">      </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">div</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">return</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">section</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">className</span><span class="token tag attr-value punctuation attr-equals" style="color: rgb(248, 248, 242);">=</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag attr-value" style="color: rgb(230, 216, 116);">notificationsList</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">      </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">h2</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text">Notifications</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">h2</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">      </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain">renderedNotifications</span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">    </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">section</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Once again, we're reading a list of items from the Redux state, mapping over them, and rendering content for each item.</p><p>We also need to update the <code>&lt;Navbar&gt;</code> to add a "Notifications" tab, and a new button to fetch some notifications:</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockTitle_Ktv7">app/Navbar.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'react'</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"> useDispatch </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'react-redux'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">Link</span><span class="token imports"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'react-router-dom'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"> fetchNotifications </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'../features/notifications/notificationsSlice'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color: rgb(230, 216, 116);">Navbar</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> dispatch </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">useDispatch</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token function-variable function" style="color: rgb(230, 216, 116);">fetchNewNotifications</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token function" style="color: rgb(230, 216, 116);">dispatch</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token function" style="color: rgb(230, 216, 116);">fetchNotifications</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">return</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">nav</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">      </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">section</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">        </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">h1</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text">Redux Essentials Example</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">h1</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">        </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">div</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">className</span><span class="token tag attr-value punctuation attr-equals" style="color: rgb(248, 248, 242);">=</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag attr-value" style="color: rgb(230, 216, 116);">navContent</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">          </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">div</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">className</span><span class="token tag attr-value punctuation attr-equals" style="color: rgb(248, 248, 242);">=</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag attr-value" style="color: rgb(230, 216, 116);">navLinks</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">            </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">Link</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">to</span><span class="token tag attr-value punctuation attr-equals" style="color: rgb(248, 248, 242);">=</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag attr-value" style="color: rgb(230, 216, 116);">/</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text">Posts</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">Link</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">            </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">Link</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">to</span><span class="token tag attr-value punctuation attr-equals" style="color: rgb(248, 248, 242);">=</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag attr-value" style="color: rgb(230, 216, 116);">/users</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text">Users</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">Link</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">            </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">Link</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">to</span><span class="token tag attr-value punctuation attr-equals" style="color: rgb(248, 248, 242);">=</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag attr-value" style="color: rgb(230, 216, 116);">/notifications</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text">Notifications</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">Link</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">          </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">div</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">          </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">button</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">className</span><span class="token tag attr-value punctuation attr-equals" style="color: rgb(248, 248, 242);">=</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag attr-value" style="color: rgb(230, 216, 116);">button</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">onClick</span><span class="token tag script language-javascript script-punctuation punctuation" style="color: rgb(248, 248, 242);">=</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token tag script language-javascript" style="color: rgb(249, 38, 114);">fetchNewNotifications</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">            Refresh Notifications</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">          </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">button</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">        </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">div</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">      </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">section</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">    </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">nav</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Lastly, we need to update <code>App.js</code> with the "Notifications" route so we can navigate to it:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockTitle_Ktv7">App.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token comment" style="color: rgb(198, 202, 210);">// omit imports</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">NotificationsList</span><span class="token imports"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'./features/notifications/NotificationsList'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color: rgb(230, 216, 116);">App</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">return</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token operator" style="color: rgb(248, 248, 242);">&lt;</span><span class="token maybe-class-name">Router</span><span class="token operator" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token operator" style="color: rgb(248, 248, 242);">&lt;</span><span class="token maybe-class-name">Navbar</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">/</span><span class="token operator" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token operator" style="color: rgb(248, 248, 242);">&lt;</span><span class="token plain">div className</span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token string" style="color: rgb(166, 226, 46);">"App"</span><span class="token operator" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">        </span><span class="token operator" style="color: rgb(248, 248, 242);">&lt;</span><span class="token maybe-class-name">Switch</span><span class="token operator" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">          </span><span class="token operator" style="color: rgb(248, 248, 242);">&lt;</span><span class="token maybe-class-name">Route</span><span class="token plain"> exact path</span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token string" style="color: rgb(166, 226, 46);">"/notifications"</span><span class="token plain"> component</span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token maybe-class-name">NotificationsList</span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">/</span><span class="token operator" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">          </span><span class="token comment" style="color: rgb(198, 202, 210);">// omit existing routes</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">          </span><span class="token operator" style="color: rgb(248, 248, 242);">&lt;</span><span class="token maybe-class-name">Redirect</span><span class="token plain"> to</span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token string" style="color: rgb(166, 226, 46);">"/"</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">/</span><span class="token operator" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">        </span><span class="token operator" style="color: rgb(248, 248, 242);">&lt;</span><span class="token operator" style="color: rgb(248, 248, 242);">/</span><span class="token maybe-class-name">Switch</span><span class="token operator" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token operator" style="color: rgb(248, 248, 242);">&lt;</span><span class="token operator" style="color: rgb(248, 248, 242);">/</span><span class="token plain">div</span><span class="token operator" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token operator" style="color: rgb(248, 248, 242);">&lt;</span><span class="token operator" style="color: rgb(248, 248, 242);">/</span><span class="token maybe-class-name">Router</span><span class="token operator" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Here's what the "Notifications" tab looks like so far:</p><p><img loading="lazy" alt="Initial Notifications tab" src="Redux%20Essentials,%20Part%206%20Performance%20and%20Normalizing%20Data%20Redux_files/notifications-initial-78eeb6d749f8287ebebe6a8b4e28efae.png" class="img_ev3q" width="800" height="509"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="showing-new-notifications">Showing New Notifications<a class="hash-link" href="#showing-new-notifications" title="Direct link to heading">​</a></h3><p>Each
 time we click "Refresh Notifications", a few more notification entries 
will be added to our list. In a real app, those could be coming from the
 server while we're looking at other parts of the UI. We can do 
something similar by clicking "Refresh Notifications" while we're 
looking at the <code>&lt;PostsList&gt;</code> or <code>&lt;UserPage&gt;</code>.
 But, right now we have no idea how many notifications just arrived, and
 if we keep clicking the button, there could be many notifications we 
haven't read yet. Let's add some logic to keep track of which 
notifications have been read and which of them are "new". That will let 
us show the count of "Unread" notifications as a badge on our 
"Notifications" tab in the navbar, and display new notifications in a 
different color.</p><p>Our fake API is already sending back the notification entries with <code>isNew</code> and <code>read</code> fields, so we can use those in our code.</p><p>First, we'll update <code>notificationsSlice</code> to have a reducer that marks all notifications as read, and some logic to handle marking existing notifications as "not new":</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockTitle_Ktv7">features/notifications/notificationsSlice.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> notificationsSlice </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">createSlice</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">name</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'notifications'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">initialState</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">[</span><span class="token punctuation" style="color: rgb(248, 248, 242);">]</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">reducers</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token function" style="color: rgb(230, 216, 116);">allNotificationsRead</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">state</span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token parameter"> action</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">      state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">forEach</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">notification</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">        notification</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">read</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token boolean" style="color: rgb(174, 129, 255);">true</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token function" style="color: rgb(230, 216, 116);">extraReducers</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">builder</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    builder</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">addCase</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">fetchNotifications</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">fulfilled</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">state</span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token parameter"> action</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">push</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token spread operator" style="color: rgb(248, 248, 242);">...</span><span class="token plain">action</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">payload</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">      state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">forEach</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">notification</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">        </span><span class="token comment" style="color: rgb(198, 202, 210);">// Any notifications we've read are no longer new</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">        notification</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">isNew</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">!</span><span class="token plain">notification</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">read</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token comment" style="color: rgb(198, 202, 210);">// Sort with newest first</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">sort</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">a</span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token parameter"> b</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> b</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">date</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">localeCompare</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">a</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">date</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"> allNotificationsRead </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> notificationsSlice</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">actions</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">default</span><span class="token plain"> notificationsSlice</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">reducer</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We want to mark these notifications as read whenever our <code>&lt;NotificationsList&gt;</code>
 component renders, either because we clicked on the tab to view the 
notifications, or because we already have it open and we just received 
some additional notifications. We can do this by dispatching <code>allNotificationsRead</code> any time this component re-renders. In order to avoid flashing of old data as this updates, we'll dispatch the action in a <code>useLayoutEffect</code> hook. We also want to add an additional classname to any notification list entries in the page, to highlight them:</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockTitle_Ktv7">features/notifications/NotificationsList.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token imports"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"> useLayoutEffect </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'react'</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"> useSelector</span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token imports"> useDispatch </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'react-redux'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"> formatDistanceToNow</span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token imports"> parseISO </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'date-fns'</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports">classnames</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'classnames'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"> selectAllUsers </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'../users/usersSlice'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token imports">  selectAllNotifications</span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token imports"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token imports">  allNotificationsRead</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token imports"></span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'./notificationsSlice'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color: rgb(230, 216, 116);">NotificationsList</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> dispatch </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">useDispatch</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> notifications </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">useSelector</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">selectAllNotifications</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> users </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">useSelector</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">selectAllUsers</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token function" style="color: rgb(230, 216, 116);">useLayoutEffect</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token function" style="color: rgb(230, 216, 116);">dispatch</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token function" style="color: rgb(230, 216, 116);">allNotificationsRead</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> renderedNotifications </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> notifications</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">map</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">notification</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> date </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">parseISO</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">notification</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">date</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> timeAgo </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">formatDistanceToNow</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">date</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> user </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> users</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">find</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">user</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> user</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">id</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">===</span><span class="token plain"> notification</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">user</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">||</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">name</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'Unknown User'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> notificationClassname </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">classnames</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token string" style="color: rgb(166, 226, 46);">'notification'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token keyword" style="color: rgb(249, 38, 114);">new</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> notification</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">isNew</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">return</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">div</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">key</span><span class="token tag script language-javascript script-punctuation punctuation" style="color: rgb(248, 248, 242);">=</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token tag script language-javascript" style="color: rgb(249, 38, 114);">notification</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token tag script language-javascript property-access" style="color: rgb(249, 38, 114);">id</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">className</span><span class="token tag script language-javascript script-punctuation punctuation" style="color: rgb(248, 248, 242);">=</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token tag script language-javascript" style="color: rgb(249, 38, 114);">notificationClassname</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">        </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">div</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">          </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">b</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain">user</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">name</span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">b</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain">notification</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">message</span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">        </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">div</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">        </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">div</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">title</span><span class="token tag script language-javascript script-punctuation punctuation" style="color: rgb(248, 248, 242);">=</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token tag script language-javascript" style="color: rgb(249, 38, 114);">notification</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token tag script language-javascript property-access" style="color: rgb(249, 38, 114);">date</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">          </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">i</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain">timeAgo</span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain-text"> ago</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">i</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">        </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">div</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">      </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">div</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">return</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">section</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">className</span><span class="token tag attr-value punctuation attr-equals" style="color: rgb(248, 248, 242);">=</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag attr-value" style="color: rgb(230, 216, 116);">notificationsList</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">      </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">h2</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text">Notifications</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">h2</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">      </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain">renderedNotifications</span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">    </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">section</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This
 works, but actually has a slightly surprising bit of behavior. Any time
 there are new notifications (either because we've just switched to this
 tab, or we've fetched some new notifications from the API), you'll 
actually see <em>two</em> <code>"notifications/allNotificationsRead"</code> actions dispatched. Why is that?</p><p>Let's say we have fetched some notifications while looking at the <code>&lt;PostsList&gt;</code>, and then click the "Notifications" tab. The <code>&lt;NotificationsList&gt;</code> component will mount, and the <code>useLayoutEffect</code> callback will run after that first render and dispatch <code>allNotificationsRead</code>. Our <code>notificationsSlice</code> will handle that by updating the notification entries in the store. This creates a new <code>state.notifications</code>
 array containing the immutably-updated entries, which forces our 
component to render again because it sees a new array returned from the <code>useSelector</code>, and the <code>useLayoutEffect</code> hook runs again and dispatches <code>allNotificationsRead</code> a second time. The reducer runs again, but this time no data changes, so the component doesn't re-render.</p><p>There's
 a couple ways we could potentially avoid that second dispatch, like 
splitting the logic to dispatch once when the component mounts, and only
 dispatch again if the size of the notifications array changes. But, 
this isn't actually hurting anything, so we can leave it alone.</p><p>This does actually show that <strong>it's possible to dispatch an action and not have <em>any</em> state changes happen at all</strong>. Remember, <strong>it's always up to your reducers to decide <em>if</em> any state actually needs to be updated, and "nothing needs to happen" is a valid decision for a reducer to make</strong>.</p><p>Here's how the notifications tab looks now that we've got the "new/read" behavior working:</p><p><img loading="lazy" alt="New notifications" src="Redux%20Essentials,%20Part%206%20Performance%20and%20Normalizing%20Data%20Redux_files/notifications-new-47a4cee8ef5292cc65a8b4b89245c112.png" class="img_ev3q" width="800" height="613"></p><p>The
 last thing we need to do before we move on is to add the badge on our 
"Notifications" tab in the navbar. This will show us the count of 
"Unread" notifications when we are in other tabs:</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockTitle_Ktv7">app/Navbar.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token comment" style="color: rgb(198, 202, 210);">// omit imports</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"> useDispatch</span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token imports"> useSelector </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'react-redux'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token imports">  fetchNotifications</span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token imports"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token imports">  selectAllNotifications</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token imports"></span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'../features/notifications/notificationsSlice'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color: rgb(230, 216, 116);">Navbar</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> dispatch </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">useDispatch</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> notifications </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">useSelector</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">selectAllNotifications</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> numUnreadNotifications </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> notifications</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">filter</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">n</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">!</span><span class="token plain">n</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">read</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">length</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token comment" style="color: rgb(198, 202, 210);">// omit component contents</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">let</span><span class="token plain"> unreadNotificationsBadge</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">if</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">numUnreadNotifications </span><span class="token operator" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain"> </span><span class="token number" style="color: rgb(174, 129, 255);">0</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">    unreadNotificationsBadge </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">span</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">className</span><span class="token tag attr-value punctuation attr-equals" style="color: rgb(248, 248, 242);">=</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag attr-value" style="color: rgb(230, 216, 116);">badge</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain">numUnreadNotifications</span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">span</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">return</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">nav</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">      // omit component contents</span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">      </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">div</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">className</span><span class="token tag attr-value punctuation attr-equals" style="color: rgb(248, 248, 242);">=</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag attr-value" style="color: rgb(230, 216, 116);">navLinks</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">        </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">Link</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">to</span><span class="token tag attr-value punctuation attr-equals" style="color: rgb(248, 248, 242);">=</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag attr-value" style="color: rgb(230, 216, 116);">/</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text">Posts</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">Link</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">        </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">Link</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">to</span><span class="token tag attr-value punctuation attr-equals" style="color: rgb(248, 248, 242);">=</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag attr-value" style="color: rgb(230, 216, 116);">/users</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text">Users</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">Link</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">        </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">Link</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">to</span><span class="token tag attr-value punctuation attr-equals" style="color: rgb(248, 248, 242);">=</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag attr-value" style="color: rgb(230, 216, 116);">/notifications</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">          Notifications </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain">unreadNotificationsBadge</span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain-text"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">        </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">Link</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">      </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">div</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">      // omit component contents</span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">    </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">nav</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="improving-render-performance">Improving Render Performance<a class="hash-link" href="#improving-render-performance" title="Direct link to heading">​</a></h2><p>Our
 application is looking useful, but we've actually got a couple flaws in
 when and how our components re-render. Let's look at those problems, 
and talk about some ways to improve the performance.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="investigating-render-behavior">Investigating Render Behavior<a class="hash-link" href="#investigating-render-behavior" title="Direct link to heading">​</a></h3><p>We
 can use the React DevTools Profiler to view some graphs of what 
components re-render when state is updated. Try clicking over to the <code>&lt;UserPage&gt;</code>
 for a single user. Open up your browser's DevTools, and in the React 
"Profiler" tab, click the circle "Record" button in the upper-left. 
Then, click the "Refresh Notifications" button in our app, and stop the 
recording in the React DevTools Profiler. You should see a chart that 
looks like this:</p><p><img loading="lazy" alt="React DevTools Profiler render capture - &amp;lt;UserPage&amp;gt;" src="Redux%20Essentials,%20Part%206%20Performance%20and%20Normalizing%20Data%20Redux_files/userpage-rerender-d064bb5a9461960f5949ba996597c3f7.png" class="img_ev3q" width="1641" height="540"></p><p>We can see that the <code>&lt;Navbar&gt;</code> re-rendered, which makes sense because it had to show the updated "unread notifications" badge in the tab. But, why did our <code>&lt;UserPage&gt;</code> re-render?</p><p>If
 we inspect the last couple dispatched actions in the Redux DevTools, we
 can see that only the notifications state updated. Since the <code>&lt;UserPage&gt;</code> doesn't read any notifications, it shouldn't have re-rendered. Something must be wrong with the component.</p><p>If we look at <code>&lt;UserPage&gt;</code> carefully, there's a specific problem:</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockTitle_Ktv7">"features/UserPage.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color: rgb(230, 216, 116);">UserPage</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token parameter"> match </span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"> userId </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> match</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">params</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> user </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">useSelector</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">state</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">selectUserById</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> userId</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> postsForUser </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">useSelector</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">state</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> allPosts </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">selectAllPosts</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">return</span><span class="token plain"> allPosts</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">filter</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">post</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> post</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">user</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">===</span><span class="token plain"> userId</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token comment" style="color: rgb(198, 202, 210);">// omit rendering logic</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We know that <code>useSelector</code>
 will re-run every time an action is dispatched, and that it forces the 
component to re-render if we return a new reference value.</p><p>We're calling <code>filter()</code> inside of our <code>useSelector</code> hook, so that we only return the list of posts that belong to this user. Unfortunately, <strong>this means that <code>useSelector</code> <em>always</em> returns a new array reference, and so our component will re-render after <em>every</em> action even if the posts data hasn't changed!</strong>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="memoizing-selector-functions">Memoizing Selector Functions<a class="hash-link" href="#memoizing-selector-functions" title="Direct link to heading">​</a></h3><p>What we really need is a way to only calculate the new filtered array if either <code>state.posts</code> or <code>userId</code> have changed. If they <em>haven't</em> changed, we want to return the same filtered array reference as the last time.</p><p>This
 idea is called "memoization". We want to save a previous set of inputs 
and the calculated result, and if the inputs are the same, return the 
previous result instead of recalculating it again.</p><p>So far, we've 
been writing selector functions by ourselves, and just so that we don't 
have to copy and paste the code for reading data from the store. It 
would be great if there was a way to make our selector functions 
memoized.</p><p><strong><a href="https://github.com/reduxjs/reselect" target="_blank" rel="noopener noreferrer">Reselect</a> is a library for creating memoized selector functions</strong>, and was specifically designed to be used with Redux. It has a <code>createSelector</code> function that generates memoized selectors that will only recalculate results when the inputs change. Redux Toolkit <a href="https://redux-toolkit.js.org/api/createSelector" target="_blank" rel="noopener noreferrer">exports the <code>createSelector</code> function</a>, so we already have it available.</p><p>Let's make a new <code>selectPostsByUser</code> selector function, using Reselect, and use it here.</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockTitle_Ktv7">features/posts/postsSlice.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"> createSlice</span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token imports"> createAsyncThunk</span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token imports"> createSelector </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'@reduxjs/toolkit'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token comment" style="color: rgb(198, 202, 210);">// omit slice logic</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token function-variable function" style="color: rgb(230, 216, 116);">selectAllPosts</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token parameter">state</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">posts</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">posts</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token function-variable function" style="color: rgb(230, 216, 116);">selectPostById</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">state</span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token parameter"> postId</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">posts</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">posts</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">find</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">post</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> post</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">id</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">===</span><span class="token plain"> postId</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> selectPostsByUser </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">createSelector</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">[</span><span class="token plain">selectAllPosts</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">state</span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token parameter"> userId</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> userId</span><span class="token punctuation" style="color: rgb(248, 248, 242);">]</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">posts</span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token parameter"> userId</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> posts</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">filter</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">post</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> post</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">user</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">===</span><span class="token plain"> userId</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>createSelector</code> takes one or more "input selector" functions as argument, plus an "output selector" function. When we call <code>selectPostsByUser(state, userId)</code>, <code>createSelector</code>
 will pass all of the arguments into each of our input selectors. 
Whatever those input selectors return becomes the arguments for the 
output selector.</p><p>In this case, we know that we need the array of 
all posts and the user ID as the two arguments for our output selector. 
We can reuse our existing <code>selectAllPosts</code> selector to extract the posts array. Since the user ID is the second argument we're passing into <code>selectPostsByUser</code>, we can write a small selector that just returns <code>userId</code>.</p><p>Our output selector then takes <code>posts</code> and <code>userId</code>, and returns the filtered array of posts for just that user.</p><p>If we try calling <code>selectPostsByUser</code> multiple times, it will only re-run the output selector if either <code>posts</code> or <code>userId</code> has changed:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> state1 </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">getState</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token comment" style="color: rgb(198, 202, 210);">// Output selector runs, because it's the first call</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token function" style="color: rgb(230, 216, 116);">selectPostsByUser</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">state1</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'user1'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token comment" style="color: rgb(198, 202, 210);">// Output selector does _not_ run, because the arguments haven't changed</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token function" style="color: rgb(230, 216, 116);">selectPostsByUser</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">state1</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'user1'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token comment" style="color: rgb(198, 202, 210);">// Output selector runs, because `userId` changed</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token function" style="color: rgb(230, 216, 116);">selectPostsByUser</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">state1</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'user2'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token function" style="color: rgb(230, 216, 116);">dispatch</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token function" style="color: rgb(230, 216, 116);">reactionAdded</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> state2 </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">getState</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token comment" style="color: rgb(198, 202, 210);">// Output selector does not run, because `posts` and `userId` are the same</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token function" style="color: rgb(230, 216, 116);">selectPostsByUser</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">state2</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'user2'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token comment" style="color: rgb(198, 202, 210);">// Add some more posts</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token function" style="color: rgb(230, 216, 116);">dispatch</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token function" style="color: rgb(230, 216, 116);">addNewPost</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> state3 </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">getState</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token comment" style="color: rgb(198, 202, 210);">// Output selector runs, because `posts` has changed</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token function" style="color: rgb(230, 216, 116);">selectPostsByUser</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">state3</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'user2'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If we call this selector in <code>&lt;UserPage&gt;</code> and re-run the React profiler while fetching notifications, we should see that <code>&lt;UserPage&gt;</code> doesn't re-render this time:</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color: rgb(230, 216, 116);">UserPage</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token parameter"> match </span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"> userId </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> match</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">params</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> user </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">useSelector</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">state</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">selectUserById</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> userId</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> postsForUser </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">useSelector</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">state</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">selectPostsByUser</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> userId</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token comment" style="color: rgb(198, 202, 210);">// omit rendering logic</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Memoized
 selectors are a valuable tool for improving performance in a 
React+Redux application, because they can help us avoid unnecessary 
re-renders, and also avoid doing potentially complex or expensive 
calculations if the input data hasn't changed.</p><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_S0QG"><p>For more details on why we use selector functions and how to write memoized selectors with Reselect, see:</p><ul class=""><li><a href="https://redux.js.org/usage/deriving-data-selectors">Using Redux: Deriving Data with Selectors</a></li></ul></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="investigating-the-posts-list">Investigating the Posts List<a class="hash-link" href="#investigating-the-posts-list" title="Direct link to heading">​</a></h3><p>If we go back to our <code>&lt;PostsList&gt;</code> and try clicking a reaction button on one of the posts while capturing a React profiler trace, we'll see that not only did the <code>&lt;PostsList&gt;</code> and the updated <code>&lt;PostExcerpt&gt;</code> instance render, <em>all</em> of the <code>&lt;PostExcerpt&gt;</code> components rendered:</p><p><img loading="lazy" alt="React DevTools Profiler render capture - &amp;lt;PostsList&amp;gt;" src="Redux%20Essentials,%20Part%206%20Performance%20and%20Normalizing%20Data%20Redux_files/postslist-rerender-cf83ea2e96266af8ce3027d614f0c574.png" class="img_ev3q" width="1641" height="654"></p><p>Why is that? None of the other posts changed, so why would they need to re-render?</p><p><a href="https://blog.isquaredsoftware.com/2020/05/blogged-answers-a-mostly-complete-guide-to-react-rendering-behavior/" target="_blank" rel="noopener noreferrer"><strong>React's
 default behavior is that when a parent component renders, React will 
recursively render all child components inside of it!</strong></a>. The immutable update of one post object also created a new <code>posts</code> array. Our <code>&lt;PostsList&gt;</code> had to re-render because the <code>posts</code> array was a new reference, so after it rendered, React continued downwards and re-rendered all of the <code>&lt;PostExcerpt&gt;</code> components too.</p><p>This
 isn't a serious problem for our small example app, but in a larger 
real-world app, we might have some very long lists or very large 
component trees, and having all those extra components re-render might 
slow things down.</p><p>There's a few different ways we could optimize this behavior in <code>&lt;PostsList&gt;</code>.</p><p>First, we could wrap the <code>&lt;PostExcerpt&gt;</code> component in <a href="https://reactjs.org/docs/react-api.html#reactmemo" target="_blank" rel="noopener noreferrer"><code>React.memo()</code></a>,
 which will ensure that the component inside of it only re-renders if 
the props have actually changed. This will actually work quite well - 
try it out and see what happens:</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockTitle_Ktv7">"features/posts/PostsList.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token keyword" style="color: rgb(249, 38, 114);">let</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color: rgb(230, 216, 116);">PostExcerpt</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token parameter"> post </span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token comment" style="color: rgb(198, 202, 210);">// omit logic</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token maybe-class-name">PostExcerpt</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">memo</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token maybe-class-name">PostExcerpt</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Another option is to rewrite <code>&lt;PostsList&gt;</code> so that it only selects a list of post IDs from the store instead of the entire <code>posts</code> array, and rewrite <code>&lt;PostExcerpt&gt;</code> so that it receives a <code>postId</code> prop and calls <code>useSelector</code> to read the post object it needs. If <code>&lt;PostsList&gt;</code> gets the same list of IDs as before, it won't need to re-render, and so only our one changed <code>&lt;PostExcerpt&gt;</code> component should have to render.</p><p>Unfortunately,
 this gets tricky because we also need to have all our posts sorted by 
date and rendered in the right order. We could update our <code>postsSlice</code>
 to keep the array sorted at all times, so we don't have to sort it in 
the component, and use a memoized selector to extract just the list of 
post IDs. We could also <a href="https://react-redux.js.org/api/hooks#equality-comparisons-and-updates" target="_blank" rel="noopener noreferrer">customize the comparison function that <code>useSelector</code> runs to check the results</a>, like <code>useSelector(selectPostIds, shallowEqual)</code>, so that will skip re-rendering if the <em>contents</em> of the IDs array haven't changed.</p><p>The
 last option is to find some way to have our reducer keep a separate 
array of IDs for all the posts, and only modify that array when posts 
are added or removed, and do the same rewrite of <code>&lt;PostsList&gt;</code> and <code>&lt;PostExcerpt&gt;</code>. This way, <code>&lt;PostsList&gt;</code> only needs to re-render when that IDs array changes.</p><p>Conveniently, Redux Toolkit has a <code>createEntityAdapter</code> function that will help us do just that.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="normalizing-data">Normalizing Data<a class="hash-link" href="#normalizing-data" title="Direct link to heading">​</a></h2><p>You've
 seen that a lot of our logic has been looking up items by their ID 
field. Since we've been storing our data in arrays, that means we have 
to loop over all the items in the array using <code>array.find()</code> until we find the item with the ID we're looking for.</p><p>Realistically,
 this doesn't take very long, but if we had arrays with hundreds or 
thousands of items inside, looking through the entire array to find one 
item becomes wasted effort. What we need is a way to look up a single 
item based on its ID, directly, without having to check all the other 
items. This process is known as "normalization".</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="normalized-state-structure">Normalized State Structure<a class="hash-link" href="#normalized-state-structure" title="Direct link to heading">​</a></h3><p>"Normalized state" means that:</p><ul class=""><li>We only have one copy of each particular piece of data in our state, so there's no duplication</li><li>Data
 that has been normalized is kept in a lookup table, where the item IDs 
are the keys, and the items themselves are the values.</li><li>There may also be an array of all of the IDs for a particular item type</li></ul><p>JavaScript
 objects can be used as lookup tables, similar to "maps" or 
"dictionaries" in other languages. Here's what the normalized state for a
 group of <code>user</code> objects might look like:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">users</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">ids</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">[</span><span class="token string" style="color: rgb(166, 226, 46);">"user1"</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">"user2"</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">"user3"</span><span class="token punctuation" style="color: rgb(248, 248, 242);">]</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">entities</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token string-property property" style="color: rgb(249, 38, 114);">"user1"</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token literal-property property" style="color: rgb(249, 38, 114);">id</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">"user1"</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> firstName</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> lastName</span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token string-property property" style="color: rgb(249, 38, 114);">"user2"</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token literal-property property" style="color: rgb(249, 38, 114);">id</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">"user2"</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> firstName</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> lastName</span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token string-property property" style="color: rgb(249, 38, 114);">"user3"</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token literal-property property" style="color: rgb(249, 38, 114);">id</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">"user3"</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> firstName</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> lastName</span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This makes it easy to find a particular <code>user</code> object by its ID, without having to loop through all the other user objects in an array:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> userId </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'user2'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> userObject </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">users</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">entities</span><span class="token punctuation" style="color: rgb(248, 248, 242);">[</span><span class="token plain">userId</span><span class="token punctuation" style="color: rgb(248, 248, 242);">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_S0QG"><p>For more details on why normalizing state is useful, see <a href="https://redux.js.org/usage/structuring-reducers/normalizing-state-shape">Normalizing State Shape</a> and the Redux Toolkit Usage Guide section on <a href="https://redux-toolkit.js.org/usage/usage-guide#managing-normalized-data" target="_blank" rel="noopener noreferrer">Managing Normalized Data</a>.</p></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="managing-normalized-state-with-createentityadapter">Managing Normalized State with <code>createEntityAdapter</code><a class="hash-link" href="#managing-normalized-state-with-createentityadapter" title="Direct link to heading">​</a></h3><p>Redux Toolkit's <code>createEntityAdapter</code>
 API provides a standardized way to store your data in a slice by taking
 a collection of items and putting them into the shape of <code>{ ids: [], entities: {} }</code>.
 Along with this predefined state shape, it generates a set of reducer 
functions and selectors that know how to work with that data.</p><p>This has several benefits:</p><ul class=""><li>We don't have to write the code to manage the normalization ourselves</li><li><code>createEntityAdapter</code>'s pre-built reducer functions handle common cases like "add all these items", "update one item", or "remove multiple items"</li><li><code>createEntityAdapter</code>
 can keep the ID array in a sorted order based on the contents of the 
items, and will only update that array if items are added / removed or 
the sorting order changes.</li></ul><p><code>createEntityAdapter</code> accepts an options object that may include a <code>sortComparer</code> function, which will be used to keep the item IDs array in sorted order by comparing two items (and works the same way as <code>Array.sort()</code>).</p><p>It returns an object that contains <a href="https://redux-toolkit.js.org/api/createEntityAdapter#crud-functions" target="_blank" rel="noopener noreferrer">a set of generated reducer functions for adding, updating, and removing items from an entity state object</a>.
 These reducer functions can either be used as a case reducer for a 
specific action type, or as a "mutating" utility function within another
 reducer in <code>createSlice</code>.</p><p>The adapter object also has a <code>getSelectors</code>
 function. You can pass in a selector that returns this particular slice
 of state from the Redux root state, and it will generate selectors like
 <code>selectAll</code> and <code>selectById</code>.</p><p>Finally, the adapter object has a <code>getInitialState</code> function that generates an empty <code>{ids: [], entities: {}}</code> object. You can pass in more fields to <code>getInitialState</code>, and those will be merged in.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="updating-the-posts-slice">Updating the Posts Slice<a class="hash-link" href="#updating-the-posts-slice" title="Direct link to heading">​</a></h3><p>With that in mind, let's update our <code>postsSlice</code> to use <code>createEntityAdapter</code>:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockTitle_Ktv7">features/posts/postsSlice.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  createEntityAdapter</span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token comment" style="color: rgb(198, 202, 210);">// omit other imports</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'@reduxjs/toolkit'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> postsAdapter </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">createEntityAdapter</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token function-variable function" style="color: rgb(230, 216, 116);">sortComparer</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">a</span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token parameter"> b</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> b</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">date</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">localeCompare</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">a</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">date</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> initialState </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> postsAdapter</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">getInitialState</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">status</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'idle'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">error</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token keyword null nil" style="color: rgb(249, 38, 114);">null</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token comment" style="color: rgb(198, 202, 210);">// omit thunks</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> postsSlice </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">createSlice</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">name</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'posts'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  initialState</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">reducers</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token function" style="color: rgb(230, 216, 116);">reactionAdded</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">state</span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token parameter"> action</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"> postId</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> reaction </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> action</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">payload</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> existingPost </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">entities</span><span class="token punctuation" style="color: rgb(248, 248, 242);">[</span><span class="token plain">postId</span><span class="token punctuation" style="color: rgb(248, 248, 242);">]</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">if</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">existingPost</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">        existingPost</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">reactions</span><span class="token punctuation" style="color: rgb(248, 248, 242);">[</span><span class="token plain">reaction</span><span class="token punctuation" style="color: rgb(248, 248, 242);">]</span><span class="token operator" style="color: rgb(248, 248, 242);">++</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token function" style="color: rgb(230, 216, 116);">postUpdated</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">state</span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token parameter"> action</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"> id</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> title</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> content </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> action</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">payload</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> existingPost </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">entities</span><span class="token punctuation" style="color: rgb(248, 248, 242);">[</span><span class="token plain">id</span><span class="token punctuation" style="color: rgb(248, 248, 242);">]</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">if</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">existingPost</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">        existingPost</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">title</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> title</span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">        existingPost</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">content</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> content</span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token function" style="color: rgb(230, 216, 116);">extraReducers</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">builder</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token comment" style="color: rgb(198, 202, 210);">// omit other reducers</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    builder</span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">addCase</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">fetchPosts</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">fulfilled</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">state</span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token parameter"> action</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">        state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">status</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'succeeded'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">        </span><span class="token comment" style="color: rgb(198, 202, 210);">// Add any fetched posts to the array</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">        </span><span class="token comment" style="color: rgb(198, 202, 210);">// Use the `upsertMany` reducer as a mutating update utility</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">        postsAdapter</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">upsertMany</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> action</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">payload</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token comment" style="color: rgb(198, 202, 210);">// Use the `addOne` reducer for the fulfilled case</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">addCase</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">addNewPost</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">fulfilled</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> postsAdapter</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">addOne</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"> postAdded</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> postUpdated</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> reactionAdded </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> postsSlice</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">actions</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">default</span><span class="token plain"> postsSlice</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">reducer</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token comment" style="color: rgb(198, 202, 210);">// Export the customized selectors for this adapter using `getSelectors`</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">selectAll</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> selectAllPosts</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">selectById</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> selectPostById</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">selectIds</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> selectPostIds</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token comment" style="color: rgb(198, 202, 210);">// Pass in a selector that returns the posts slice of state</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> postsAdapter</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">getSelectors</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">state</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">posts</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> selectPostsByUser </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">createSelector</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">[</span><span class="token plain">selectAllPosts</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">state</span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token parameter"> userId</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> userId</span><span class="token punctuation" style="color: rgb(248, 248, 242);">]</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">posts</span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token parameter"> userId</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> posts</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">filter</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">post</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> post</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">user</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">===</span><span class="token plain"> userId</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>There's a lot going on there! Let's break it down.</p><p>First, we import <code>createEntityAdapter</code>, and call it to create our <code>postsAdapter</code> object. We know that we want to keep an array of all post IDs sorted with the newest post first, so we pass in a <code>sortComparer</code> function that will sort newer items to the front based on the <code>post.date</code> field.</p><p><code>getInitialState()</code> returns an empty <code>{ids: [], entities: {}}</code> normalized state object. Our <code>postsSlice</code> needs to keep the <code>status</code> and <code>error</code> fields for loading state too, so we pass those in to <code>getInitialState()</code>.</p><p>Now that our posts are being kept as a lookup table in <code>state.entities</code>, we can change our <code>reactionAdded</code> and <code>postUpdated</code> reducers to directly look up the right posts by their IDs, instead of having to loop over the old <code>posts</code> array.</p><p>When we receive the <code>fetchPosts.fulfilled</code> action, we can use the <code>postsAdapter.upsertMany</code> function to add all of the incoming posts to the state, by passing in the draft <code>state</code> and the array of posts in <code>action.payload</code>. If there's any items in <code>action.payload</code> that already existing in our state, the <code>upsertMany</code> function will merge them together based on matching IDs.</p><p>When we receive the <code>addNewPost.fulfilled</code>
 action, we know we need to add that one new post object to our state. 
We can use the adapter functions as reducers directly, so we'll pass <code>postsAdapter.addOne</code> as the reducer function to handle that action.</p><p>Finally, we can replace the old hand-written <code>selectAllPosts</code> and <code>selectPostById</code> selector functions with the ones generated by <code>postsAdapter.getSelectors</code>.
 Since the selectors are called with the root Redux state object, they 
need to know where to find our posts data in the Redux state, so we pass
 in a small selector that returns <code>state.posts</code>. The generated selector functions are always called <code>selectAll</code> and <code>selectById</code>, so we can use ES6 destructuring syntax to rename them as we export them and match the old selector names. We'll also export <code>selectPostIds</code> the same way, since we want to read the list of sorted post IDs in our <code>&lt;PostsList&gt;</code> component.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="optimizing-the-posts-list">Optimizing the Posts List<a class="hash-link" href="#optimizing-the-posts-list" title="Direct link to heading">​</a></h3><p>Now that our posts slice is using <code>createEntityAdapter</code>, we can update <code>&lt;PostsList&gt;</code> to optimize its rendering behavior.</p><p>We'll update <code>&lt;PostsList&gt;</code> to read just the sorted array of post IDs, and pass <code>postId</code> to each <code>&lt;PostExcerpt&gt;</code>:</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockTitle_Ktv7">features/posts/PostsList.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token comment" style="color: rgb(198, 202, 210);">// omit other imports</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token imports">  selectAllPosts</span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token imports"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token imports">  fetchPosts</span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token imports"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token imports">  selectPostIds</span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token imports"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token imports">  selectPostById</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token imports"></span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'./postsSlice'</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">let</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color: rgb(230, 216, 116);">PostExcerpt</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token parameter"> postId </span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> post </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">useSelector</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">state</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">selectPostById</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> postId</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token comment" style="color: rgb(198, 202, 210);">// omit rendering logic</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color: rgb(230, 216, 116);">PostsList</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> dispatch </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">useDispatch</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> orderedPostIds </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">useSelector</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">selectPostIds</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token comment" style="color: rgb(198, 202, 210);">// omit other selections and effects</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">if</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">postStatus </span><span class="token operator" style="color: rgb(248, 248, 242);">===</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'loading'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    content </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">Spinner</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">text</span><span class="token tag attr-value punctuation attr-equals" style="color: rgb(248, 248, 242);">=</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag attr-value" style="color: rgb(230, 216, 116);">Loading...</span><span class="token tag attr-value punctuation" style="color: rgb(248, 248, 242);">"</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">else</span><span class="token plain"> </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">if</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">postStatus </span><span class="token operator" style="color: rgb(248, 248, 242);">===</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'succeeded'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">    content </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> orderedPostIds</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">map</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">postId</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag class-name" style="color: rgb(249, 38, 114);">PostExcerpt</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">key</span><span class="token tag script language-javascript script-punctuation punctuation" style="color: rgb(248, 248, 242);">=</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token tag script language-javascript" style="color: rgb(249, 38, 114);">postId</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">postId</span><span class="token tag script language-javascript script-punctuation punctuation" style="color: rgb(248, 248, 242);">=</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token tag script language-javascript" style="color: rgb(249, 38, 114);">postId</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">/&gt;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">else</span><span class="token plain"> </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">if</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">postStatus </span><span class="token operator" style="color: rgb(248, 248, 242);">===</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'error'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    content </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">div</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain">error</span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">div</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token comment" style="color: rgb(198, 202, 210);">// omit other rendering</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now,
 if we try clicking a reaction button on one of the posts while 
capturing a React component performance profile, we should see that <em>only</em> that one component re-rendered:</p><p><img loading="lazy" alt="React DevTools Profiler render capture - optimized &amp;lt;PostsList&amp;gt;" src="Redux%20Essentials,%20Part%206%20Performance%20and%20Normalizing%20Data%20Redux_files/postslist-optimized-dcf59b403248250ec88d365fe04221ad.png" class="img_ev3q" width="1641" height="579"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="converting-other-slices">Converting Other Slices<a class="hash-link" href="#converting-other-slices" title="Direct link to heading">​</a></h2><p>We're almost done. As a final cleanup step, we'll update our other two slices to use <code>createEntityAdapter</code> as well.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="converting-the-users-slice">Converting the Users Slice<a class="hash-link" href="#converting-the-users-slice" title="Direct link to heading">​</a></h3><p>The <code>usersSlice</code> is fairly small, so we've only got a few things to change:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockTitle_Ktv7">features/users/usersSlice.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token imports">  createSlice</span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token imports"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token imports">  createAsyncThunk</span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token imports"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token imports">  createEntityAdapter</span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token imports"></span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'@reduxjs/toolkit'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"> client </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'../../api/client'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> usersAdapter </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">createEntityAdapter</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> initialState </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> usersAdapter</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">getInitialState</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> fetchUsers </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">createAsyncThunk</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token string" style="color: rgb(166, 226, 46);">'users/fetchUsers'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(249, 38, 114);">async</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> response </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">await</span><span class="token plain"> client</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">get</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token string" style="color: rgb(166, 226, 46);">'/fakeApi/users'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">return</span><span class="token plain"> response</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">users</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> usersSlice </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">createSlice</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">name</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'users'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  initialState</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">reducers</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token function" style="color: rgb(230, 216, 116);">extraReducers</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">builder</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">    builder</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">addCase</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">fetchUsers</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">fulfilled</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> usersAdapter</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">setAll</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">default</span><span class="token plain"> usersSlice</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">reducer</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"> </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">selectAll</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> selectAllUsers</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">selectById</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> selectUserById </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  usersAdapter</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">getSelectors</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">state</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">users</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The
 only action we're handling here always replaces the entire list of 
users with the array we fetched from the server. We can use <code>usersAdapter.setAll</code> to implement that instead.</p><p>Our <code>&lt;AddPostForm&gt;</code> is still trying to read <code>state.users</code> as an array, as is <code>&lt;PostAuthor&gt;</code>. Update them to use <code>selectAllUsers</code> and <code>selectUserById</code>, respectively.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="converting-the-notifications-slice">Converting the Notifications Slice<a class="hash-link" href="#converting-the-notifications-slice" title="Direct link to heading">​</a></h3><p>Last but not least, we'll update <code>notificationsSlice</code> as well:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockTitle_Ktv7">features/notifications/notificationsSlice.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token imports">  createSlice</span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token imports"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token imports">  createAsyncThunk</span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token imports"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token imports">  createEntityAdapter</span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token imports"></span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'@reduxjs/toolkit'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"> client </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'../../api/client'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> notificationsAdapter </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">createEntityAdapter</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token function-variable function" style="color: rgb(230, 216, 116);">sortComparer</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">a</span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token parameter"> b</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> b</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">date</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">localeCompare</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">a</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">date</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token comment" style="color: rgb(198, 202, 210);">// omit fetchNotifications thunk</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> notificationsSlice </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">createSlice</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">name</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'notifications'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">initialState</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> notificationsAdapter</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">getInitialState</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">reducers</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token function" style="color: rgb(230, 216, 116);">allNotificationsRead</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">state</span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token parameter"> action</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token known-class-name class-name">Object</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">values</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">entities</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">forEach</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">notification</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">        notification</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">read</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token boolean" style="color: rgb(174, 129, 255);">true</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token function" style="color: rgb(230, 216, 116);">extraReducers</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">builder</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    builder</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">addCase</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">fetchNotifications</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">fulfilled</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">state</span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token parameter"> action</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">      notificationsAdapter</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">upsertMany</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> action</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">payload</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token known-class-name class-name">Object</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">values</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">entities</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">forEach</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">notification</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">        </span><span class="token comment" style="color: rgb(198, 202, 210);">// Any notifications we've read are no longer new</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">        notification</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">isNew</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">!</span><span class="token plain">notification</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">read</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"> allNotificationsRead </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> notificationsSlice</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">actions</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">default</span><span class="token plain"> notificationsSlice</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">reducer</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword module" style="color: rgb(249, 38, 114);">export</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"> </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">selectAll</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> selectAllNotifications </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color: rgb(248, 248, 242);"><span class="token plain">  notificationsAdapter</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">getSelectors</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">state</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">notifications</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We again import <code>createEntityAdapter</code>, call it, and call <code>notificationsAdapter.getInitialState()</code> to help set up the slice.</p><p>Ironically,
 we do have a couple places in here where we need to loop over all 
notification objects and update them. Since those are no longer being 
kept in an array, we have to use <code>Object.values(state.entities)</code>
 to get an array of those notifications and loop over that. On the other
 hand, we can replace the previous fetch update logic with <code>notificationsAdapter.upsertMany</code>.</p><p>And with that... we're done learning the core concepts and functionality of Redux Toolkit!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-youve-learned">What You've Learned<a class="hash-link" href="#what-youve-learned" title="Direct link to heading">​</a></h2><p>We've built a lot of new behavior in this section. Let's see what how the app looks with all those changes:</p><iframe class="codesandbox" src="Redux%20Essentials,%20Part%206%20Performance%20and%20Normalizing%20Data%20Redux_files/a.htm" title="redux-essentials-example-app" allow="geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb" sandbox="allow-modals allow-forms allow-popups allow-scripts allow-same-origin"></iframe><p>Here's what we covered in this section:</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>Summary</div><div class="admonitionContent_S0QG"><ul class=""><li><strong>Memoized selector functions can be used to optimize performance</strong><ul class=""><li>Redux Toolkit re-exports the <code>createSelector</code> function from Reselect, which generates memoized selectors</li><li>Memoized selectors will only recalculate the results if the input selectors return new values</li><li>Memoization can skip expensive calculations, and ensure the same result references are returned</li></ul></li><li><strong>There are multiple patterns you can use to optimize React component rendering with Redux</strong><ul class=""><li>Avoid creating new object/array references inside of <code>useSelector</code> - those will cause unnecessary re-renders</li><li>Memoized selector functions can be passed to <code>useSelector</code> to optimize rendering</li><li><code>useSelector</code> can accept an alternate comparison function like <code>shallowEqual</code> instead of reference equality</li><li>Components can be wrapped in <code>React.memo()</code> to only re-render if their props change</li><li>List
 rendering can be optimized by having list parent components read just 
an array of item IDs, passing the IDs to list item children, and 
retrieving items by ID in the children</li></ul></li><li><strong>Normalized state structure is a recommended approach for storing items</strong><ul class=""><li>"Normalization" means no duplication of data, and keeping items stored in a lookup table by item ID</li><li>Normalized state shape usually looks like <code>{ids: [], entities: {}}</code></li></ul></li><li><strong>Redux Toolkit's <code>createEntityAdapter</code> API helps manage normalized data in a slice</strong><ul class=""><li>Item IDs can be kept in sorted order by passing in a <code>sortComparer</code> option</li><li>The adapter object includes:<ul class=""><li><code>adapter.getInitialState</code>, which can accept additional state fields like loading state</li><li>Prebuilt reducers for common cases, like <code>setAll</code>, <code>addMany</code>, <code>upsertOne</code>, and <code>removeMany</code></li><li><code>adapter.getSelectors</code>, which generates selectors like <code>selectAll</code> and <code>selectById</code></li></ul></li></ul></li></ul></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a class="hash-link" href="#whats-next" title="Direct link to heading">​</a></h2><p>There's
 a couple more sections in the Redux Essentials tutorial, but this is a 
good spot to pause and put what you've learned into practice.</p><p>The 
concepts we've covered in this tutorial so far should be enough to get 
you started building your own applications using React and Redux. Now's a
 great time to try working on a project yourself to solidify these 
concepts and see how they work in practice. If you're not sure what kind
 of a project to build, see <a href="https://github.com/florinpop17/app-ideas" target="_blank" rel="noopener noreferrer">this list of app project ideas</a> for some inspiration.</p><p><strong>Redux Toolkit also includes a powerful data fetching and caching API called "RTK Query"</strong>. RTK Query is an optional addon that can completely eliminate the need to write any data fetching logic yourself. In <a href="https://redux.js.org/tutorials/essentials/part-7-rtk-query-basics">Part 7: RTK Query Basics</a>, you'll learn what RTK Query is, what problems it solves, and how to use it to fetch and use cached data in your application.</p><p>The
 Redux Essentials tutorial is focused on "how to use Redux correctly", 
rather than "how it works" or "why it works this way". In particular, 
Redux Toolkit is a higher-level set of abstractions and utilities, and 
it's helpful to understand what the abstractions in RTK are actually 
doing for you. Reading through the <a href="https://redux.js.org/tutorials/fundamentals/part-1-overview">"Redux Fundamentals" tutorial</a>
 will help you understand how to write Redux code "by hand", and why we 
recommend Redux Toolkit as the default way to write Redux logic.</p><p>The <a href="https://redux.js.org/usage/">Using Redux</a> section has information on a number of important concepts, like <a href="https://redux.js.org/usage/structuring-reducers/structuring-reducers">how to structure your reducers</a>, and <a href="https://redux.js.org/style-guide/">our Style Guide page</a> has important information on our recommended patterns and best practices.</p><p>If you'd like to know more about <em>why</em> Redux exists, what problems it tries to solve, and how it's meant to be used, see Redux maintainer Mark Erikson's posts on <a href="https://blog.isquaredsoftware.com/2017/05/idiomatic-redux-tao-of-redux-part-1/" target="_blank" rel="noopener noreferrer">The Tao of Redux, Part 1: Implementation and Intent</a> and <a href="https://blog.isquaredsoftware.com/2017/05/idiomatic-redux-tao-of-redux-part-2/" target="_blank" rel="noopener noreferrer">The Tao of Redux, Part 2: Practice and Philosophy</a>.</p><p>If you're looking for help with Redux questions, come join <a href="https://www.reactiflux.com/" target="_blank" rel="noopener noreferrer">the <code>#redux</code> channel in the Reactiflux server on Discord</a>.</p><p><strong>Thanks for reading through this tutorial, and we hope you enjoy building applications with Redux!</strong></p></div><footer class="theme-doc-footer docusaurus-mt-lg"><div class="theme-doc-footer-edit-meta-row row"><div class="col"><a href="https://github.com/reduxjs/redux/edit/master/docs/tutorials/essentials/part-6-performance-normalization.md" target="_blank" rel="noreferrer noopener" class="theme-edit-this-page"><svg fill="currentColor" height="20" width="20" viewBox="0 0 40 40" class="iconEdit_Z9Sw" aria-hidden="true"><g><path d="m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z"></path></g></svg>Edit this page</a></div><div class="col lastUpdated_vwxv"><span class="theme-last-updated">Last updated on <b><time datetime="2022-11-21T14:43:45.000Z">Nov 21, 2022</time></b></span></div></div></footer></article><nav class="pagination-nav docusaurus-mt-lg" aria-label="Docs pages navigation"><a class="pagination-nav__link pagination-nav__link--prev" href="https://redux.js.org/tutorials/essentials/part-5-async-logic"><div class="pagination-nav__sublabel">Previous</div><div class="pagination-nav__label">Async Logic and Data Fetching</div></a><a class="pagination-nav__link pagination-nav__link--next" href="https://redux.js.org/tutorials/essentials/part-7-rtk-query-basics"><div class="pagination-nav__sublabel">Next</div><div class="pagination-nav__label">RTK Query Basics</div></a></nav></div></div><div class="col col--3"><div class="tableOfContents_bqdL thin-scrollbar theme-doc-toc-desktop"><ul class="table-of-contents table-of-contents__left-border"><li><a href="#introduction" class="table-of-contents__link toc-highlight">Introduction</a></li><li><a href="#adding-user-pages" class="table-of-contents__link toc-highlight">Adding User Pages</a></li><li><a href="#adding-notifications" class="table-of-contents__link toc-highlight">Adding Notifications</a><ul><li><a href="#notifications-slice" class="table-of-contents__link toc-highlight">Notifications Slice</a></li><li><a href="#thunk-arguments" class="table-of-contents__link toc-highlight">Thunk Arguments</a></li><li><a href="#adding-the-notifications-list" class="table-of-contents__link toc-highlight">Adding the Notifications List</a></li><li><a href="#showing-new-notifications" class="table-of-contents__link toc-highlight">Showing New Notifications</a></li></ul></li><li><a href="#improving-render-performance" class="table-of-contents__link toc-highlight">Improving Render Performance</a><ul><li><a href="#investigating-render-behavior" class="table-of-contents__link toc-highlight">Investigating Render Behavior</a></li><li><a href="#memoizing-selector-functions" class="table-of-contents__link toc-highlight">Memoizing Selector Functions</a></li><li><a href="#investigating-the-posts-list" class="table-of-contents__link toc-highlight">Investigating the Posts List</a></li></ul></li><li><a href="#normalizing-data" class="table-of-contents__link toc-highlight">Normalizing Data</a><ul><li><a href="#normalized-state-structure" class="table-of-contents__link toc-highlight">Normalized State Structure</a></li><li><a href="#managing-normalized-state-with-createentityadapter" class="table-of-contents__link toc-highlight">Managing Normalized State with <code>createEntityAdapter</code></a></li><li><a href="#updating-the-posts-slice" class="table-of-contents__link toc-highlight">Updating the Posts Slice</a></li><li><a href="#optimizing-the-posts-list" class="table-of-contents__link toc-highlight">Optimizing the Posts List</a></li></ul></li><li><a href="#converting-other-slices" class="table-of-contents__link toc-highlight">Converting Other Slices</a><ul><li><a href="#converting-the-users-slice" class="table-of-contents__link toc-highlight">Converting the Users Slice</a></li><li><a href="#converting-the-notifications-slice" class="table-of-contents__link toc-highlight">Converting the Notifications Slice</a></li></ul></li><li><a href="#what-youve-learned" class="table-of-contents__link toc-highlight">What You've Learned</a></li><li><a href="#whats-next" class="table-of-contents__link toc-highlight">What's Next?</a></li></ul></div></div></div></div></main></div></div><footer class="footer"><div class="container container-fluid"><div class="row footer__links"><div class="col footer__col"><div class="footer__title">Docs</div><ul class="footer__items clean-list"><li class="footer__item"><a class="footer__link-item" href="https://redux.js.org/introduction/getting-started">Getting Started</a></li><li class="footer__item"><a class="footer__link-item" type="doc" href="https://redux.js.org/usage">Usage Guide</a></li><li class="footer__item"><a class="footer__link-item" href="https://redux.js.org/tutorials/essentials/part-1-overview-concepts">Tutorial</a></li><li class="footer__item"><a class="footer__link-item" href="https://redux.js.org/faq">FAQ</a></li><li class="footer__item"><a class="footer__link-item" type="doc" href="https://redux.js.org/api/api-reference">API Reference</a></li></ul></div><div class="col footer__col"><div class="footer__title">Community</div><ul class="footer__items clean-list"><li class="footer__item"><a href="https://discord.gg/0ZcbPKXt5bZ6au5t" target="_blank" rel="noopener noreferrer" class="footer__link-item">Reactiflux Discord<svg width="13.5" height="13.5" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_nPIU"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a></li><li class="footer__item"><a href="http://stackoverflow.com/questions/tagged/redux" target="_blank" rel="noopener noreferrer" class="footer__link-item">Stack Overflow<svg width="13.5" height="13.5" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_nPIU"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a></li><li class="footer__item"><a class="footer__link-item" href="https://redux.js.org/introduction/getting-started#help-and-discussion">Feedback</a></li></ul></div><div class="col footer__col"><div class="footer__title">More</div><ul class="footer__items clean-list"><li class="footer__item"><a href="https://github.com/reduxjs/redux" target="_blank" rel="noopener noreferrer" class="footer__link-item">GitHub<svg width="13.5" height="13.5" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_nPIU"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a></li><li class="footer__item">
                <a href="https://www.netlify.com/">
                  <img src="Redux%20Essentials,%20Part%206%20Performance%20and%20Normalizing%20Data%20Redux_files/netlify-color-accent.svg" alt="Deployed by Netlify">
                </a>
              </li></ul></div></div><div class="footer__bottom text--center"><div class="margin-bottom--sm"><a href="https://redux.js.org/" rel="noopener noreferrer" class="footerLogoLink_BH7S"><img src="Redux%20Essentials,%20Part%206%20Performance%20and%20Normalizing%20Data%20Redux_files/redux.svg" alt="Redux Logo" class="themedImage_ToTc themedImage--light_HNdA footer__logo"></a></div><div class="footer__copyright">Copyright © 2015–2023 Dan Abramov and the Redux documentation authors.</div></div></div></footer></div>
<script src="Redux%20Essentials,%20Part%206%20Performance%20and%20Normalizing%20Data%20Redux_files/runtime~main.c942408f.js"></script>
<script src="Redux%20Essentials,%20Part%206%20Performance%20and%20Normalizing%20Data%20Redux_files/main.aecab9b3.js"></script>

</body></html>