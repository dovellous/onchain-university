<!DOCTYPE html>
<html lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1"><meta property="og:author" content="https://codesandbox.io"><meta property="twitter:creator" content="@codesandbox"><link href="a_data/css.css" rel="stylesheet"><link crossorigin="anonymous" rel="preload" href="https://codesandbox.io/static/fonts/inter/Inter-Regular.woff2" as="font"><link crossorigin="anonymous" rel="preload" href="https://codesandbox.io/static/fonts/inter/Inter-Medium.woff2" as="font"><link crossorigin="anonymous" rel="preload" href="https://codesandbox.io/static/fonts/inter/Inter-Bold.woff2" as="font"><link href="a_data/inter.css" rel="stylesheet"><link href="a_data/monolisa.css" rel="stylesheet"><link rel="manifest" href="https://codesandbox.io/manifest.json"><link rel="mask-icon" href="https://codesandbox.io/csb-ios.svg" color="#fff"><link href="data:image/svg+xml;utf8,&lt;svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'&gt;&lt;style&gt;svg {background: transparent;}path {fill: black;}@media (prefers-color-scheme: dark)  {path {  fill: white;}}&lt;/style&gt;&lt;path fill-rule='evenodd' clip-rule='evenodd' d='M81.8182 18.1818V81.8182H18.1818V18.1818H81.8182ZM10 90V10H90V90H10Z'/&gt;&lt;/svg&gt;" rel="icon"><title>redux-essentials-example - CodeSandbox</title><!-- Google Tag Manager --><script type="text/javascript" async="" src="analytics.js"></script><script type="text/javascript" integrity="sha384-cukXwabQy+j/QA1+RqiXSzxhgQg5Rrn3zVszlwH3pWj/bXJxlA8Ge7NhcD6vP2Ik" crossorigin="anonymous" async="" src="a_data/amplitude-7.1.0-min.gz.js"></script><script gtm="GTM-T3L6RFK" type="text/javascript" async="" src="a_data/optimize.js"></script><script async="" src="a_data/gtm.js"></script><script>!function(e,t,a,n){e[n]=e[n]||[],e[n].push({"gtm.start":(new Date).getTime(),event:"gtm.js"});var g=t.getElementsByTagName(a)[0],m=t.createElement(a);m.async=!0,m.src="https://www.googletagmanager.com/gtm.js?id=GTM-T3L6RFK",g.parentNode.insertBefore(m,g)}(window,document,"script","dataLayer")</script><!-- End Google Tag Manager --><script src="a_data/browserfs.min.js" type="text/javascript"></script><script>BrowserFS&&(window.process={env:{VSCODE_DEV:!1},nextTick:function(e){return requestAnimationFrame(e)},once:BrowserFS.BFSRequire("process").once,removeListener:function(){}},window.Buffer=BrowserFS.BFSRequire("buffer").Buffer)</script><!-- AMD Loader for Monaco --><script src="a_data/loader.js"></script><script>window.require.config({url:"/public/14/vs/loader.js",paths:{vs:"/public/14/vs"}})</script><script>window.__SANDBOX_DATA__ = {"free_plan_editing_restricted":false,"is_sse":false,"git":{"branch":"checkpoint-4-entitySlices","commit_sha":"bf31dcf2d2ad41c89e26a428e2e1a393f219bd74","path":"","repo":"redux-essentials-example-app","username":"reduxjs"},"v2":false,"source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","always_on":false,"team":null,"preview_secret":null,"custom_template":{"color":"#61DAFB","icon_url":"github","id":"4f223af8-7d73-43f1-87f3-01da304ab53c","official":false,"published":false,"title":"redux-essentials-example","url":null,"v2":false},"original_git_commit_sha":null,"collection":false,"version":3,"like_count":14,"forked_template":null,"base_git":null,"alias":"redux-essentials-example-vmgud","feature_flags":{"comments":false,"container_lsp":false},"owned":false,"external_resources":[],"fork_count":905,"pr_number":null,"restrictions":{"free_plan_editing_restricted":false,"live_sessions_restricted":false},"updated_at":"2022-01-03T19:26:47","npm_dependencies":{},"inserted_at":"2020-07-13T14:00:33","modules":[{"code":"# See https:\u002F\u002Fhelp.github.com\u002Farticles\u002Fignoring-files\u002F for more about ignoring files.\n\n# dependencies\n\u002Fnode_modules\n\u002F.pnp\n.pnp.js\n\n# testing\n\u002Fcoverage\n\n# production\n\u002Fbuild\n\n# misc\n.DS_Store\n.env.local\n.env.development.local\n.env.test.local\n.env.production.local\n\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n","directory_shortid":null,"id":"b469f2fe-c6aa-4e46-be27-6ce333d64ee4","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"r1OlWApghK","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":".gitignore","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"# Redux Essentials Tutorial Example\n\nThis project contains the setup and code from the \"Redux Essentials\" tutorial in the Redux docs ( https:\u002F\u002Fredux.js.org\u002Ftutorials\u002Fessentials\u002Fpart-1-overview-concepts ).\n\nThe `master` branch has a single commit that already has the initial project configuration in place. You can use this to follow along with the instructions from the tutorial.\n\nThe `tutorial-steps` branch has the actual code commits from the tutorial. You can look at these to see how the official tutorial actually implements each piece of functionality along the way.\n\nThis project was bootstrapped with [Create React App](https:\u002F\u002Fgithub.com\u002Ffacebook\u002Fcreate-react-app), using the [Redux](https:\u002F\u002Fredux.js.org\u002F) and [Redux Toolkit](https:\u002F\u002Fredux-toolkit.js.org\u002F) template.\n\n\u003E **Note**: If you are using Node 17, this project may not start correctly due to a known issue with Webpack and Node's OpenSSL changes, which causes an error message containing `ERR_OSSL_EVP_UNSUPPORTED`.  \n\u003E You can work around this by setting a `NODE_OPTIONS=--openssl-legacy-provider` environment variable before starting the dev server.\n\u003E Details: https:\u002F\u002Fgithub.com\u002Fwebpack\u002Fwebpack\u002Fissues\u002F14532#issuecomment-947012063\n\n## Available Scripts\n\nIn the project directory, you can run:\n\n### `yarn start`\n\nRuns the app in the development mode.\u003Cbr \u002F\u003E\nOpen [http:\u002F\u002Flocalhost:3000](http:\u002F\u002Flocalhost:3000) to view it in the browser.\n\nThe page will reload if you make edits.\u003Cbr \u002F\u003E\nYou will also see any lint errors in the console.\n\n### `yarn test`\n\nLaunches the test runner in the interactive watch mode.\u003Cbr \u002F\u003E\nSee the section about [running tests](https:\u002F\u002Ffacebook.github.io\u002Fcreate-react-app\u002Fdocs\u002Frunning-tests) for more information.\n\n### `yarn build`\n\nBuilds the app for production to the `build` folder.\u003Cbr \u002F\u003E\nIt correctly bundles React in production mode and optimizes the build for the best performance.\n\nThe build is minified and the filenames include the hashes.\u003Cbr \u002F\u003E\nYour app is ready to be deployed!\n\nSee the section about [deployment](https:\u002F\u002Ffacebook.github.io\u002Fcreate-react-app\u002Fdocs\u002Fdeployment) for more information.\n\n## Learn More\n\nYou can learn more in the [Create React App documentation](https:\u002F\u002Ffacebook.github.io\u002Fcreate-react-app\u002Fdocs\u002Fgetting-started).\n\nTo learn React, check out the [React documentation](https:\u002F\u002Freactjs.org\u002F).\n","directory_shortid":null,"id":"2aafb672-32d1-462a-b5ea-38233da7adbb","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"S1FlWAae3t","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"README.md","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"{\n  \"name\": \"redux-essentials-example\",\n  \"version\": \"1.0.0\",\n  \"private\": true,\n  \"dependencies\": {\n    \"@mswjs\u002Fdata\": \"^0.8.4\",\n    \"@reduxjs\u002Ftoolkit\": \"^1.6.1\",\n    \"@testing-library\u002Fjest-dom\": \"^5.16.1\",\n    \"@testing-library\u002Freact\": \"^12.1.2\",\n    \"@testing-library\u002Fuser-event\": \"^13.5.0\",\n    \"classnames\": \"^2.2.6\",\n    \"date-fns\": \"^2.12.0\",\n    \"faker\": \"^4.1.0\",\n    \"miragejs\": \"^0.1.35\",\n    \"mock-socket\": \"^9.0.3\",\n    \"msw\": \"^0.36.3\",\n    \"react\": \"^17\",\n    \"react-dom\": \"^17\",\n    \"react-redux\": \"^7.2.4\",\n    \"react-router-dom\": \"^5.1.2\",\n    \"react-scripts\": \"^4\",\n    \"seedrandom\": \"^3.0.5\",\n    \"txtgen\": \"^2.2.4\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  },\n  \"eslintConfig\": {\n    \"extends\": \"react-app\"\n  },\n  \"browserslist\": {\n    \"production\": [\n      \"\u003E0.2%\",\n      \"not dead\",\n      \"not op_mini all\"\n    ],\n    \"development\": [\n      \"last 1 chrome version\",\n      \"last 1 firefox version\",\n      \"last 1 safari version\"\n    ]\n  },\n  \"devDependencies\": {\n    \"prettier\": \"^2.0.2\"\n  },\n  \"msw\": {\n    \"workerDirectory\": \"public\"\n  }\n}\n","directory_shortid":null,"id":"4c0aaad8-ff9a-4702-8387-53db4bf3e3fb","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"rJ9gZRae2K","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"package.json","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"module.exports = {\n    \"semi\": false,\n    \"singleQuote\": true\n}\n  ","directory_shortid":null,"id":"0722412d-8f3f-458f-b9e2-f284737cf414","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"Sksx-0Tl3F","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"prettier.config.js","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"\u003C!DOCTYPE html\u003E\n\u003Chtml lang=\"en\"\u003E\n  \u003Chead\u003E\n    \u003Cmeta charset=\"utf-8\" \u002F\u003E\n    \u003Clink rel=\"icon\" href=\"%PUBLIC_URL%\u002Ffavicon.ico\" \u002F\u003E\n    \u003Cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\" \u002F\u003E\n    \u003Cmeta name=\"theme-color\" content=\"#000000\" \u002F\u003E\n    \u003Cmeta\n      name=\"description\"\n      content=\"Web site created using create-react-app\"\n    \u002F\u003E\n    \u003Clink rel=\"stylesheet\" href=\"%PUBLIC_URL%\u002Fprimitiveui.css\" \u002F\u003E\n    \u003Clink rel=\"apple-touch-icon\" href=\"%PUBLIC_URL%\u002Flogo192.png\" \u002F\u003E\n    \u003C!--\n      manifest.json provides metadata used when your web app is installed on a\n      user's mobile device or desktop. See https:\u002F\u002Fdevelopers.google.com\u002Fweb\u002Ffundamentals\u002Fweb-app-manifest\u002F\n    --\u003E\n    \u003Clink rel=\"manifest\" href=\"%PUBLIC_URL%\u002Fmanifest.json\" \u002F\u003E\n    \u003C!--\n      Notice the use of %PUBLIC_URL% in the tags above.\n      It will be replaced with the URL of the `public` folder during the build.\n      Only files inside the `public` folder can be referenced from the HTML.\n\n      Unlike \"\u002Ffavicon.ico\" or \"favicon.ico\", \"%PUBLIC_URL%\u002Ffavicon.ico\" will\n      work correctly both with client-side routing and a non-root public URL.\n      Learn how to configure a non-root public URL by running `npm run build`.\n    --\u003E\n    \u003Ctitle\u003EReact Redux App\u003C\u002Ftitle\u003E\n  \u003C\u002Fhead\u003E\n  \u003Cbody\u003E\n    \u003Cnoscript\u003EYou need to enable JavaScript to run this app.\u003C\u002Fnoscript\u003E\n    \u003Cdiv id=\"root\"\u003E\u003C\u002Fdiv\u003E\n    \u003C!--\n      This HTML file is a template.\n      If you open it directly in the browser, you will see an empty page.\n\n      You can add webfonts, meta tags, or analytics to this file.\n      The build step will place the bundled scripts into the \u003Cbody\u003E tag.\n\n      To begin the development, run `npm start` or `yarn start`.\n      To create a production bundle, use `npm run build` or `yarn build`.\n    --\u003E\n  \u003C\u002Fbody\u003E\n\u003C\u002Fhtml\u003E\n","directory_shortid":"H1gZ06l3t","id":"a5440d9a-55d1-41bf-a94f-7d361dc5d303","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"SknxbATgnY","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"index.html","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"{\n  \"short_name\": \"React App\",\n  \"name\": \"Create React App Sample\",\n  \"icons\": [\n    {\n      \"src\": \"favicon.ico\",\n      \"sizes\": \"64x64 32x32 24x24 16x16\",\n      \"type\": \"image\u002Fx-icon\"\n    },\n    {\n      \"src\": \"logo192.png\",\n      \"type\": \"image\u002Fpng\",\n      \"sizes\": \"192x192\"\n    },\n    {\n      \"src\": \"logo512.png\",\n      \"type\": \"image\u002Fpng\",\n      \"sizes\": \"512x512\"\n    }\n  ],\n  \"start_url\": \".\",\n  \"display\": \"standalone\",\n  \"theme_color\": \"#000000\",\n  \"background_color\": \"#ffffff\"\n}\n","directory_shortid":"H1gZ06l3t","id":"5bb47a6f-9059-48bf-8155-dd8e3c1c533c","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"S1aeWRTx3t","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"manifest.json","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"\u002F* eslint-disable *\u002F\n\u002F* tslint:disable *\u002F\n\n\u002F**\n * Mock Service Worker (0.36.3).\n * @see https:\u002F\u002Fgithub.com\u002Fmswjs\u002Fmsw\n * - Please do NOT modify this file.\n * - Please do NOT serve this file on production.\n *\u002F\n\nconst INTEGRITY_CHECKSUM = '02f4ad4a2797f85668baf196e553d929'\nconst bypassHeaderName = 'x-msw-bypass'\nconst activeClientIds = new Set()\n\nself.addEventListener('install', function () {\n  return self.skipWaiting()\n})\n\nself.addEventListener('activate', async function (event) {\n  return self.clients.claim()\n})\n\nself.addEventListener('message', async function (event) {\n  const clientId = event.source.id\n\n  if (!clientId || !self.clients) {\n    return\n  }\n\n  const client = await self.clients.get(clientId)\n\n  if (!client) {\n    return\n  }\n\n  const allClients = await self.clients.matchAll()\n\n  switch (event.data) {\n    case 'KEEPALIVE_REQUEST': {\n      sendToClient(client, {\n        type: 'KEEPALIVE_RESPONSE',\n      })\n      break\n    }\n\n    case 'INTEGRITY_CHECK_REQUEST': {\n      sendToClient(client, {\n        type: 'INTEGRITY_CHECK_RESPONSE',\n        payload: INTEGRITY_CHECKSUM,\n      })\n      break\n    }\n\n    case 'MOCK_ACTIVATE': {\n      activeClientIds.add(clientId)\n\n      sendToClient(client, {\n        type: 'MOCKING_ENABLED',\n        payload: true,\n      })\n      break\n    }\n\n    case 'MOCK_DEACTIVATE': {\n      activeClientIds.delete(clientId)\n      break\n    }\n\n    case 'CLIENT_CLOSED': {\n      activeClientIds.delete(clientId)\n\n      const remainingClients = allClients.filter((client) =\u003E {\n        return client.id !== clientId\n      })\n\n      \u002F\u002F Unregister itself when there are no more clients\n      if (remainingClients.length === 0) {\n        self.registration.unregister()\n      }\n\n      break\n    }\n  }\n})\n\n\u002F\u002F Resolve the \"main\" client for the given event.\n\u002F\u002F Client that issues a request doesn't necessarily equal the client\n\u002F\u002F that registered the worker. It's with the latter the worker should\n\u002F\u002F communicate with during the response resolving phase.\nasync function resolveMainClient(event) {\n  const client = await self.clients.get(event.clientId)\n\n  if (client.frameType === 'top-level') {\n    return client\n  }\n\n  const allClients = await self.clients.matchAll()\n\n  return allClients\n    .filter((client) =\u003E {\n      \u002F\u002F Get only those clients that are currently visible.\n      return client.visibilityState === 'visible'\n    })\n    .find((client) =\u003E {\n      \u002F\u002F Find the client ID that's recorded in the\n      \u002F\u002F set of clients that have registered the worker.\n      return activeClientIds.has(client.id)\n    })\n}\n\nasync function handleRequest(event, requestId) {\n  const client = await resolveMainClient(event)\n  const response = await getResponse(event, client, requestId)\n\n  \u002F\u002F Send back the response clone for the \"response:*\" life-cycle events.\n  \u002F\u002F Ensure MSW is active and ready to handle the message, otherwise\n  \u002F\u002F this message will pend indefinitely.\n  if (client && activeClientIds.has(client.id)) {\n    ;(async function () {\n      const clonedResponse = response.clone()\n      sendToClient(client, {\n        type: 'RESPONSE',\n        payload: {\n          requestId,\n          type: clonedResponse.type,\n          ok: clonedResponse.ok,\n          status: clonedResponse.status,\n          statusText: clonedResponse.statusText,\n          body:\n            clonedResponse.body === null ? null : await clonedResponse.text(),\n          headers: serializeHeaders(clonedResponse.headers),\n          redirected: clonedResponse.redirected,\n        },\n      })\n    })()\n  }\n\n  return response\n}\n\nasync function getResponse(event, client, requestId) {\n  const { request } = event\n  const requestClone = request.clone()\n  const getOriginalResponse = () =\u003E fetch(requestClone)\n\n  \u002F\u002F Bypass mocking when the request client is not active.\n  if (!client) {\n    return getOriginalResponse()\n  }\n\n  \u002F\u002F Bypass initial page load requests (i.e. static assets).\n  \u002F\u002F The absence of the immediate\u002Fparent client in the map of the active clients\n  \u002F\u002F means that MSW hasn't dispatched the \"MOCK_ACTIVATE\" event yet\n  \u002F\u002F and is not ready to handle requests.\n  if (!activeClientIds.has(client.id)) {\n    return await getOriginalResponse()\n  }\n\n  \u002F\u002F Bypass requests with the explicit bypass header\n  if (requestClone.headers.get(bypassHeaderName) === 'true') {\n    const cleanRequestHeaders = serializeHeaders(requestClone.headers)\n\n    \u002F\u002F Remove the bypass header to comply with the CORS preflight check.\n    delete cleanRequestHeaders[bypassHeaderName]\n\n    const originalRequest = new Request(requestClone, {\n      headers: new Headers(cleanRequestHeaders),\n    })\n\n    return fetch(originalRequest)\n  }\n\n  \u002F\u002F Send the request to the client-side MSW.\n  const reqHeaders = serializeHeaders(request.headers)\n  const body = await request.text()\n\n  const clientMessage = await sendToClient(client, {\n    type: 'REQUEST',\n    payload: {\n      id: requestId,\n      url: request.url,\n      method: request.method,\n      headers: reqHeaders,\n      cache: request.cache,\n      mode: request.mode,\n      credentials: request.credentials,\n      destination: request.destination,\n      integrity: request.integrity,\n      redirect: request.redirect,\n      referrer: request.referrer,\n      referrerPolicy: request.referrerPolicy,\n      body,\n      bodyUsed: request.bodyUsed,\n      keepalive: request.keepalive,\n    },\n  })\n\n  switch (clientMessage.type) {\n    case 'MOCK_SUCCESS': {\n      return delayPromise(\n        () =\u003E respondWithMock(clientMessage),\n        clientMessage.payload.delay,\n      )\n    }\n\n    case 'MOCK_NOT_FOUND': {\n      return getOriginalResponse()\n    }\n\n    case 'NETWORK_ERROR': {\n      const { name, message } = clientMessage.payload\n      const networkError = new Error(message)\n      networkError.name = name\n\n      \u002F\u002F Rejecting a request Promise emulates a network error.\n      throw networkError\n    }\n\n    case 'INTERNAL_ERROR': {\n      const parsedBody = JSON.parse(clientMessage.payload.body)\n\n      console.error(\n        `\\\n[MSW] Uncaught exception in the request handler for \"%s %s\":\n\n${parsedBody.location}\n\nThis exception has been gracefully handled as a 500 response, however, it's strongly recommended to resolve this error, as it indicates a mistake in your code. If you wish to mock an error response, please see this guide: https:\u002F\u002Fmswjs.io\u002Fdocs\u002Frecipes\u002Fmocking-error-responses\\\n`,\n        request.method,\n        request.url,\n      )\n\n      return respondWithMock(clientMessage)\n    }\n  }\n\n  return getOriginalResponse()\n}\n\nself.addEventListener('fetch', function (event) {\n  const { request } = event\n  const accept = request.headers.get('accept') || ''\n\n  \u002F\u002F Bypass server-sent events.\n  if (accept.includes('text\u002Fevent-stream')) {\n    return\n  }\n\n  \u002F\u002F Bypass navigation requests.\n  if (request.mode === 'navigate') {\n    return\n  }\n\n  \u002F\u002F Opening the DevTools triggers the \"only-if-cached\" request\n  \u002F\u002F that cannot be handled by the worker. Bypass such requests.\n  if (request.cache === 'only-if-cached' && request.mode !== 'same-origin') {\n    return\n  }\n\n  \u002F\u002F Bypass all requests when there are no active clients.\n  \u002F\u002F Prevents the self-unregistered worked from handling requests\n  \u002F\u002F after it's been deleted (still remains active until the next reload).\n  if (activeClientIds.size === 0) {\n    return\n  }\n\n  const requestId = uuidv4()\n\n  return event.respondWith(\n    handleRequest(event, requestId).catch((error) =\u003E {\n      if (error.name === 'NetworkError') {\n        console.warn(\n          '[MSW] Successfully emulated a network error for the \"%s %s\" request.',\n          request.method,\n          request.url,\n        )\n        return\n      }\n\n      \u002F\u002F At this point, any exception indicates an issue with the original request\u002Fresponse.\n      console.error(\n        `\\\n[MSW] Caught an exception from the \"%s %s\" request (%s). This is probably not a problem with Mock Service Worker. There is likely an additional logging output above.`,\n        request.method,\n        request.url,\n        `${error.name}: ${error.message}`,\n      )\n    }),\n  )\n})\n\nfunction serializeHeaders(headers) {\n  const reqHeaders = {}\n  headers.forEach((value, name) =\u003E {\n    reqHeaders[name] = reqHeaders[name]\n      ? [].concat(reqHeaders[name]).concat(value)\n      : value\n  })\n  return reqHeaders\n}\n\nfunction sendToClient(client, message) {\n  return new Promise((resolve, reject) =\u003E {\n    const channel = new MessageChannel()\n\n    channel.port1.onmessage = (event) =\u003E {\n      if (event.data && event.data.error) {\n        return reject(event.data.error)\n      }\n\n      resolve(event.data)\n    }\n\n    client.postMessage(JSON.stringify(message), [channel.port2])\n  })\n}\n\nfunction delayPromise(cb, duration) {\n  return new Promise((resolve) =\u003E {\n    setTimeout(() =\u003E resolve(cb()), duration)\n  })\n}\n\nfunction respondWithMock(clientMessage) {\n  return new Response(clientMessage.payload.body, {\n    ...clientMessage.payload,\n    headers: clientMessage.payload.headers,\n  })\n}\n\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\u002F[xy]\u002Fg, function (c) {\n    const r = (Math.random() * 16) | 0\n    const v = c == 'x' ? r : (r & 0x3) | 0x8\n    return v.toString(16)\n  })\n}\n","directory_shortid":"H1gZ06l3t","id":"19c925de-5325-490f-b1b2-f893fb255f78","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"ByClbATlnt","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"mockServiceWorker.js","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"\u002F*! \n * Primitive UI | MIT License\n *\n * A minimalist front-end design toolkit built with Sass for developing \n * responsive, browser-consistent web apps.\n *\n * Author: Tania Rascia \u003Ctania@taniarascia.com\u003E\n * Source: https:\u002F\u002Fgithub.com\u002Ftaniarascia\u002Fprimitive\n * Documentation: https:\u002F\u002Ftaniarascia.github.io\u002Fprimitive\n *\u002F\n\u002F**\n * Variables\n *\n * The majority of the configuration for the toolkit.\n *\u002F\n\u002F*! normalize.css v8.0.1 | MIT License | github.com\u002Fnecolas\u002Fnormalize.css *\u002F\n\u002F* Document\n   ========================================================================== *\u002F\n\u002F**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n *\u002F\nhtml {\n  line-height: 1.15;\n  \u002F* 1 *\u002F\n  -webkit-text-size-adjust: 100%;\n  \u002F* 2 *\u002F\n}\n\n\u002F* Sections\n     ========================================================================== *\u002F\n\u002F**\n   * Remove the margin in all browsers.\n   *\u002F\nbody {\n  margin: 0;\n}\n\n\u002F**\n   * Render the `main` element consistently in IE.\n   *\u002F\nmain {\n  display: block;\n}\n\n\u002F**\n   * Correct the font size and margin on `h1` elements within `section` and\n   * `article` contexts in Chrome, Firefox, and Safari.\n   *\u002F\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n\u002F* Grouping content\n     ========================================================================== *\u002F\n\u002F**\n   * 1. Add the correct box sizing in Firefox.\n   * 2. Show the overflow in Edge and IE.\n   *\u002F\nhr {\n  box-sizing: content-box;\n  \u002F* 1 *\u002F\n  height: 0;\n  \u002F* 1 *\u002F\n  overflow: visible;\n  \u002F* 2 *\u002F\n}\n\n\u002F**\n   * 1. Correct the inheritance and scaling of font size in all browsers.\n   * 2. Correct the odd `em` font sizing in all browsers.\n   *\u002F\npre {\n  font-family: monospace, monospace;\n  \u002F* 1 *\u002F\n  font-size: 1em;\n  \u002F* 2 *\u002F\n}\n\n\u002F* Text-level semantics\n     ========================================================================== *\u002F\n\u002F**\n   * Remove the gray background on active links in IE 10.\n   *\u002F\na {\n  background-color: transparent;\n}\n\n\u002F**\n   * 1. Remove the bottom border in Chrome 57-\n   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n   *\u002F\nabbr[title] {\n  border-bottom: none;\n  \u002F* 1 *\u002F\n  text-decoration: underline;\n  \u002F* 2 *\u002F\n  text-decoration: underline dotted;\n  \u002F* 2 *\u002F\n}\n\n\u002F**\n   * Add the correct font weight in Chrome, Edge, and Safari.\n   *\u002F\nb,\nstrong {\n  font-weight: bolder;\n}\n\n\u002F**\n   * 1. Correct the inheritance and scaling of font size in all browsers.\n   * 2. Correct the odd `em` font sizing in all browsers.\n   *\u002F\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace;\n  \u002F* 1 *\u002F\n  font-size: 1em;\n  \u002F* 2 *\u002F\n}\n\n\u002F**\n   * Add the correct font size in all browsers.\n   *\u002F\nsmall {\n  font-size: 80%;\n}\n\n\u002F**\n   * Prevent `sub` and `sup` elements from affecting the line height in\n   * all browsers.\n   *\u002F\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n\u002F* Embedded content\n     ========================================================================== *\u002F\n\u002F**\n   * Remove the border on images inside links in IE 10.\n   *\u002F\nimg {\n  border-style: none;\n}\n\n\u002F* Forms\n     ========================================================================== *\u002F\n\u002F**\n   * 1. Change the font styles in all browsers.\n   * 2. Remove the margin in Firefox and Safari.\n   *\u002F\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit;\n  \u002F* 1 *\u002F\n  font-size: 100%;\n  \u002F* 1 *\u002F\n  line-height: 1.15;\n  \u002F* 1 *\u002F\n  margin: 0;\n  \u002F* 2 *\u002F\n}\n\n\u002F**\n   * Show the overflow in IE.\n   * 1. Show the overflow in Edge.\n   *\u002F\nbutton,\ninput {\n  \u002F* 1 *\u002F\n  overflow: visible;\n}\n\n\u002F**\n   * Remove the inheritance of text transform in Edge, Firefox, and IE.\n   * 1. Remove the inheritance of text transform in Firefox.\n   *\u002F\nbutton,\nselect {\n  \u002F* 1 *\u002F\n  text-transform: none;\n}\n\n\u002F**\n   * Correct the inability to style clickable types in iOS and Safari.\n   *\u002F\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n  -webkit-appearance: button;\n}\n\n\u002F**\n   * Remove the inner border and padding in Firefox.\n   *\u002F\nbutton::-moz-focus-inner,\n[type='button']::-moz-focus-inner,\n[type='reset']::-moz-focus-inner,\n[type='submit']::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n\u002F**\n   * Restore the focus styles unset by the previous rule.\n   *\u002F\nbutton:-moz-focusring,\n[type='button']:-moz-focusring,\n[type='reset']:-moz-focusring,\n[type='submit']:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n\u002F**\n   * Correct the padding in Firefox.\n   *\u002F\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n\u002F**\n   * 1. Correct the text wrapping in Edge and IE.\n   * 2. Correct the color inheritance from `fieldset` elements in IE.\n   * 3. Remove the padding so developers are not caught out when they zero out\n   *    `fieldset` elements in all browsers.\n   *\u002F\nlegend {\n  box-sizing: border-box;\n  \u002F* 1 *\u002F\n  color: inherit;\n  \u002F* 2 *\u002F\n  display: table;\n  \u002F* 1 *\u002F\n  max-width: 100%;\n  \u002F* 1 *\u002F\n  padding: 0;\n  \u002F* 3 *\u002F\n  white-space: normal;\n  \u002F* 1 *\u002F\n}\n\n\u002F**\n   * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n   *\u002F\nprogress {\n  vertical-align: baseline;\n}\n\n\u002F**\n   * Remove the default vertical scrollbar in IE 10+.\n   *\u002F\ntextarea {\n  overflow: auto;\n}\n\n\u002F**\n   * 1. Add the correct box sizing in IE 10.\n   * 2. Remove the padding in IE 10.\n   *\u002F\n[type='checkbox'],\n[type='radio'] {\n  box-sizing: border-box;\n  \u002F* 1 *\u002F\n  padding: 0;\n  \u002F* 2 *\u002F\n}\n\n\u002F**\n   * Correct the cursor style of increment and decrement buttons in Chrome.\n   *\u002F\n[type='number']::-webkit-inner-spin-button,\n[type='number']::-webkit-outer-spin-button {\n  height: auto;\n}\n\n\u002F**\n   * 1. Correct the odd appearance in Chrome and Safari.\n   * 2. Correct the outline style in Safari.\n   *\u002F\n[type='search'] {\n  -webkit-appearance: textfield;\n  \u002F* 1 *\u002F\n  outline-offset: -2px;\n  \u002F* 2 *\u002F\n}\n\n\u002F**\n   * Remove the inner padding in Chrome and Safari on macOS.\n   *\u002F\n[type='search']::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n\u002F**\n   * 1. Correct the inability to style clickable types in iOS and Safari.\n   * 2. Change font properties to `inherit` in Safari.\n   *\u002F\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  \u002F* 1 *\u002F\n  font: inherit;\n  \u002F* 2 *\u002F\n}\n\n\u002F* Interactive\n     ========================================================================== *\u002F\n\u002F*\n   * Add the correct display in Edge, IE 10+, and Firefox.\n   *\u002F\ndetails {\n  display: block;\n}\n\n\u002F*\n   * Add the correct display in all browsers.\n   *\u002F\nsummary {\n  display: list-item;\n}\n\n\u002F* Misc\n     ========================================================================== *\u002F\n\u002F**\n   * Add the correct display in IE 10+.\n   *\u002F\ntemplate {\n  display: none;\n}\n\n\u002F**\n   * Add the correct display in IE 10.\n   *\u002F\n[hidden] {\n  display: none;\n}\n\nhtml {\n  box-sizing: border-box;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: inherit;\n}\n\nfigure {\n  margin: 0;\n}\n\n\u002F**\n   * Layout\n   *\u002F\nhtml {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  font: normal normal normal 1rem\u002F1.6 -apple-system, BlinkMacSystemFont,\n    Helvetica Neue, Helvetica, Arial, sans-serif;\n  font-size: 1rem;\n}\n\nbody {\n  color: #404040;\n  background: white;\n  font-size: 1rem;\n}\n\np,\nol,\nul,\ndl,\ntable {\n  margin: 0 0 1.5rem 0;\n}\n\nul li ul {\n  margin-bottom: 0;\n}\n\nol li ol {\n  margin-bottom: 0;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5 {\n  margin: 1.5rem 0;\n  font-weight: 600;\n  font-family: -apple-system, BlinkMacSystemFont, Helvetica Neue, Helvetica,\n    Arial, sans-serif;\n  line-height: 1.2;\n  color: #404040;\n}\nh1:not(:first-child),\nh2:not(:first-child),\nh3:not(:first-child),\nh4:not(:first-child),\nh5:not(:first-child) {\n  margin: 1.5rem 0;\n}\n\nh1:not(:first-child),\nh2:not(:first-child),\nh3:not(:first-child) {\n  margin-top: 2rem;\n}\n\nh1 {\n  font-size: 1.75rem;\n}\n\nh2 {\n  font-size: 1.5rem;\n}\n\nh3 {\n  font-size: 1.25rem;\n}\n\nh4 {\n  font-size: 1.1rem;\n}\n\nh5 {\n  font-size: 1rem;\n}\n\n@media (min-width: 600px) {\n  h1:not(:first-child),\n  h2:not(:first-child),\n  h3:not(:first-child) {\n    margin-top: 2.5rem;\n  }\n  h1 {\n    font-size: 2.25rem;\n  }\n  h2 {\n    font-size: 2rem;\n  }\n  h3 {\n    font-size: 1.75rem;\n  }\n  h4 {\n    font-size: 1.5rem;\n  }\n  h5 {\n    font-size: 1.25rem;\n  }\n}\n\na {\n  color: #0366ee;\n  text-decoration: none;\n}\na:hover,\na:active,\na:focus {\n  color: #0246a2;\n  text-decoration: underline;\n}\n\nmark {\n  background: #ffeea8;\n  padding: 0 0.2rem;\n}\n\nblockquote {\n  margin: 0 0 1.5rem 0;\n  border-left: 16px solid #f0f0f0;\n  padding: 0 1.5rem;\n  font-size: 1.5rem;\n}\nblockquote cite {\n  display: block;\n  margin-top: 1.5rem;\n  font-size: 1rem;\n  text-align: right;\n}\n\npre {\n  border: 0;\n  border-radius: 4px;\n  background: transparent;\n  padding: 1rem;\n  tab-size: 2;\n  color: #404040;\n  font-family: Menlo, monospace;\n  font-size: 14px;\n  margin: 0 0 1.5rem 0;\n}\npre code {\n  font-family: Menlo, monospace;\n  line-height: 1.2;\n}\n\nkbd {\n  background-color: #f7f7f7;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n  box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2), 0 0 0 2px #fff inset;\n  color: #333;\n  display: inline-block;\n  font-family: Helvetica, Arial, sans-serif;\n  font-size: 13px;\n  line-height: 1.4;\n  margin: 0 0.1em;\n  padding: 0.1em 0.6em;\n  text-shadow: 0 1px 0 #fff;\n}\n\n:not(pre) \u003E code {\n  color: #404040;\n  background: transparent;\n  font-family: Menlo, monospace;\n  font-size: 14px;\n  padding: 0 0.2rem;\n  border: 1px solid #dedede;\n  border-radius: 4px;\n}\n\nhr {\n  height: 0;\n  border: 0;\n  border-top: 1px solid #dedede;\n}\n\ndt {\n  font-weight: 600;\n}\n\ndd {\n  margin-bottom: 0.5rem;\n}\n\n.full-container {\n  max-width: 100%;\n  padding: 0 1rem;\n}\n\n.container,\n.small-container,\n.medium-container {\n  max-width: 1200px;\n  padding: 0 1rem;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.small-container {\n  max-width: 800px;\n}\n\n.medium-container {\n  max-width: 1000px;\n}\n\n.content-section {\n  padding: 30px 0;\n}\n\n@media (min-width: 600px) {\n  .content-section {\n    padding: 60px 0;\n  }\n}\n\n\u002F**\n   * Grid\n   *\u002F\n.flex-small,\n.flex-large {\n  padding-left: 1rem;\n  padding-right: 1rem;\n}\n\n.flex-row {\n  margin-left: -1rem;\n  margin-right: -1rem;\n}\n\n.flex-row {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n\n.flex-small,\n.flex-large {\n  flex-basis: 100%;\n  margin-bottom: 1rem;\n}\n\n\u002F* Small screen breakpoint *\u002F\n@media (min-width: 600px) {\n  .flex-small {\n    flex: 1;\n    margin-bottom: 0;\n  }\n}\n\n\u002F* Large screen breakpoint *\u002F\n@media (min-width: 1000px) {\n  .flex-large {\n    flex: 1;\n    margin-bottom: 0;\n  }\n}\n\n\u002F**\n   * Helpers\n   *\u002F\n.clearfix::before,\n.clearfix::after {\n  content: ' ';\n  display: block;\n}\n\n.clearfix:after {\n  clear: both;\n}\n\n.text-left {\n  text-align: left;\n}\n\n.text-right {\n  text-align: right;\n}\n\n.text-center {\n  text-align: center;\n}\n\n.text-justify {\n  text-align: justify;\n}\n\n.block {\n  display: block;\n}\n\n.inline-block {\n  display: inline-block;\n}\n\n.inline {\n  display: inline;\n}\n\n.vertical-center {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.responsive-image {\n  max-width: 100%;\n  height: auto;\n}\n\n.show {\n  display: block !important;\n}\n\n.hide {\n  display: none !important;\n}\n\n.invisible {\n  visibility: hidden;\n}\n\n.float-left {\n  float: left;\n}\n\n.float-right {\n  float: right;\n}\n\n.no-padding-top {\n  padding-top: 0;\n}\n\n.no-padding-bottom {\n  padding-bottom: 0;\n}\n\n.padding-top {\n  padding-top: 2rem;\n}\n\n.padding-bottom {\n  padding-bottom: 2rem;\n}\n\n.no-margin-top {\n  margin-top: 0;\n}\n\n.no-margin-bottom {\n  margin-bottom: 0;\n}\n\n.margin-top {\n  margin-top: 2rem;\n}\n\n.margin-bottom {\n  margin-bottom: 2rem;\n}\n\n.alternate-background {\n  background: #fafafa;\n  color: #404040;\n}\n\n.screen-reader-text {\n  clip: rect(1px, 1px, 1px, 1px);\n  position: absolute !important;\n  height: 1px;\n  width: 1px;\n  overflow: hidden;\n}\n\n\u002F**\n   * Buttons\n   *\u002F\n.button,\na.button,\nbutton,\n[type='submit'],\n[type='reset'],\n[type='button'] {\n  -webkit-appearance: none;\n  display: inline-block;\n  border: 1px solid #0366ee;\n  border-radius: 4px;\n  background: #0366ee;\n  color: #ffffff;\n  font-weight: 600;\n  font-family: -apple-system, BlinkMacSystemFont, Helvetica Neue, Helvetica,\n    Arial, sans-serif;\n  font-size: 1rem;\n  text-transform: none;\n  padding: 0.75rem 1.25rem;\n  margin: 0 0 0.5rem 0;\n  vertical-align: middle;\n  text-align: center;\n  cursor: pointer;\n  text-decoration: none;\n  line-height: 1;\n}\n\n.button:hover,\na.button:hover,\nbutton:hover,\n[type='submit']:hover,\n[type='reset']:hover,\n[type='button']:hover {\n  border: 1px solid #0250bc;\n  background: #0250bc;\n  color: #ffffff;\n  text-decoration: none;\n}\n\n.button:focus,\n.button:active,\na.button:focus,\na.button:active,\nbutton:focus,\nbutton:active,\n[type='submit']:focus,\n[type='submit']:active,\n[type='reset']:focus,\n[type='reset']:active,\n[type='button']:focus,\n[type='button']:active {\n  border: 1px solid #0250bc;\n  background: #0250bc;\n  color: #ffffff;\n  text-decoration: none;\n}\n\n.button::-moz-focus-inner,\na.button::-moz-focus-inner,\nbutton::-moz-focus-inner,\n[type='submit']::-moz-focus-inner,\n[type='reset']::-moz-focus-inner,\n[type='button']::-moz-focus-inner {\n  border: 0;\n  padding: 0;\n}\n\n.accent-button,\na.accent-button {\n  color: #ffffff;\n  border: 1px solid #29de7d;\n  background: #29de7d;\n}\n.accent-button:hover,\n.accent-button:focus,\n.accent-button:active,\na.accent-button:hover,\na.accent-button:focus,\na.accent-button:active {\n  color: #ffffff;\n  border: 1px solid #1cb864;\n  background: #1cb864;\n}\n\n.muted-button,\na.muted-button {\n  background: transparent;\n  border: 1px solid #cdcdcd;\n  color: #4e4e4e;\n}\n.muted-button:hover,\n.muted-button:focus,\n.muted-button:active,\na.muted-button:hover,\na.muted-button:focus,\na.muted-button:active {\n  color: #4e4e4e;\n  border: 1px solid #818181;\n  background: transparent;\n}\n\n.round-button,\na.round-button {\n  border-radius: 40px;\n}\n\n.square-button,\na.square-button {\n  border-radius: 0;\n}\n\n.full-button,\na.full-button {\n  display: block;\n  width: 100%;\n}\n\n\u002F**\n   * Forms\n   *\u002F\n[type='color'],\n[type='date'],\n[type='datetime'],\n[type='datetime-local'],\n[type='email'],\n[type='month'],\n[type='number'],\n[type='password'],\n[type='search'],\n[type='tel'],\n[type='text'],\n[type='url'],\n[type='week'],\n[type='time'],\nselect,\ntextarea {\n  display: block;\n  border: 1px solid #dedede;\n  border-radius: 4px;\n  padding: 0.75rem;\n  outline: none;\n  background: transparent;\n  margin-bottom: 0.5rem;\n  font-size: 1rem;\n  width: 100%;\n  max-width: 100%;\n  line-height: 1;\n}\n\n[type='color']:hover,\n[type='date']:hover,\n[type='datetime']:hover,\n[type='datetime-local']:hover,\n[type='email']:hover,\n[type='month']:hover,\n[type='number']:hover,\n[type='password']:hover,\n[type='search']:hover,\n[type='tel']:hover,\n[type='text']:hover,\n[type='url']:hover,\n[type='week']:hover,\n[type='time']:hover,\nselect:hover,\ntextarea:hover {\n  border: 1px solid #c5c5c5;\n}\n\n[type='color']:focus,\n[type='color']:active,\n[type='date']:focus,\n[type='date']:active,\n[type='datetime']:focus,\n[type='datetime']:active,\n[type='datetime-local']:focus,\n[type='datetime-local']:active,\n[type='email']:focus,\n[type='email']:active,\n[type='month']:focus,\n[type='month']:active,\n[type='number']:focus,\n[type='number']:active,\n[type='password']:focus,\n[type='password']:active,\n[type='search']:focus,\n[type='search']:active,\n[type='tel']:focus,\n[type='tel']:active,\n[type='text']:focus,\n[type='text']:active,\n[type='url']:focus,\n[type='url']:active,\n[type='week']:focus,\n[type='week']:active,\n[type='time']:focus,\n[type='time']:active,\nselect:focus,\nselect:active,\ntextarea:focus,\ntextarea:active {\n  border: 1px solid #0366ee;\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.1), 0 0 6px #8cbcfe;\n}\n\ntextarea {\n  overflow: auto;\n  height: auto;\n}\n\nfieldset {\n  border: 1px solid #dedede;\n  border-radius: 4px;\n  padding: 1rem;\n  margin: 1.5rem 0;\n}\n\nlegend {\n  padding: 0 0.5rem;\n  font-weight: 600;\n}\n\nselect {\n  color: #404040;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  background: url(data:image\u002Fpng;base64,iVBORw0KGgoAAAANSUhEUgAAABIAAAAJCAYAAAA\u002F33wPAAAAvklEQVQoFY2QMQqEMBBFv7ERa\u002FEMXkGw11K8QbDXzuN4BHv7QO6ifUgj7v4UAdlVM8Uwf+b9YZJISnlqrfEUZVlinucnBGKaJgghbiHOyLyFKIoCbdvecpyReYvo\u002FMa2bajrGtbaC58kCdZ1RZ7nl\u002F4\u002F4d5EsO\u002F7nzl7IUtodBexMMagaRrs+06JLMvcNWmaOv2W\u002FC\u002FTMAyD58dxROgSmvxFFMdxoOs6lliWBXEcuzokXRbRoJRyvqqqQvye+QDMDz1D6yuj9wAAAABJRU5ErkJggg==)\n    right center no-repeat;\n  line-height: 1;\n}\n\nselect::-ms-expand {\n  display: none;\n}\n\n[type='range'] {\n  width: 100%;\n}\n\nlabel {\n  font-weight: 600;\n  max-width: 100%;\n  display: block;\n  margin: 1rem 0 0.5rem;\n}\n\n@media (min-width: 600px) {\n  .split-form label {\n    text-align: right;\n    padding: 0 0.5rem;\n    margin-bottom: 1rem;\n  }\n}\n\ninput.has-error,\ninput.has-error:hover,\ninput.has-error:focus,\ninput.has-error:active,\nselect.has-error,\nselect.has-error:hover,\nselect.has-error:focus,\nselect.has-error:active,\ntextarea.has-error,\ntextarea.has-error:hover,\ntextarea.has-error:focus,\ntextarea.has-error:active {\n  border: 1px solid #d33c40;\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.1), 0 0 6px #f4cecf;\n}\n\n::-webkit-input-placeholder,\n::-moz-placeholder,\n:-moz-placeholder,\n:-ms-input-placeholder {\n  color: #9a9a9a;\n}\n\n\u002F**\n   * Tables\n   *\u002F\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n  width: 100%;\n  max-width: 100%;\n}\n\nthead th {\n  border-bottom: 2px solid #dedede;\n}\n\ntfoot th {\n  border-top: 2px solid #dedede;\n}\n\ntd {\n  border-bottom: 1px solid #dedede;\n}\n\nth,\ntd {\n  text-align: left;\n  padding: 0.5rem;\n}\n\ncaption {\n  padding: 1rem 0;\n  caption-side: bottom;\n  color: #ababab;\n}\n\n.striped-table tbody tr:nth-child(odd) {\n  background-color: #f8f8f8;\n}\n\n.contain-table {\n  overflow-x: auto;\n}\n\n@media (min-width: 600px) {\n  .contain-table {\n    width: 100%;\n  }\n}\n\n\u002F*\n   * Layout\n   *\u002F\n\u002F**\n   * Layout\n   *\u002F\n","directory_shortid":"H1gZ06l3t","id":"7bee9558-c69b-426a-9f76-ee6c880fdd01","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"SkkxxWCax3Y","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"primitiveui.css","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"# https:\u002F\u002Fwww.robotstxt.org\u002Frobotstxt.html\nUser-agent: *\n","directory_shortid":"H1gZ06l3t","id":"cc589838-2cf1-447a-b3d8-77520f71bab7","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"rklxl-0TenK","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"robots.txt","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom'\n\nimport { Navbar } from '.\u002Fapp\u002FNavbar'\n\nimport { PostsList } from '.\u002Ffeatures\u002Fposts\u002FPostsList'\nimport { AddPostForm } from '.\u002Ffeatures\u002Fposts\u002FAddPostForm'\nimport { EditPostForm } from '.\u002Ffeatures\u002Fposts\u002FEditPostForm'\nimport { SinglePostPage } from '.\u002Ffeatures\u002Fposts\u002FSinglePostPage'\nimport { UsersList } from '.\u002Ffeatures\u002Fusers\u002FUsersList'\nimport { UserPage } from '.\u002Ffeatures\u002Fusers\u002FUserPage'\nimport { NotificationsList } from '.\u002Ffeatures\u002Fnotifications\u002FNotificationsList'\n\nfunction App() {\n  return (\n    \u003CRouter\u003E\n      \u003CNavbar \u002F\u003E\n      \u003Cdiv className=\"App\"\u003E\n        \u003CSwitch\u003E\n          \u003CRoute\n            exact\n            path=\"\u002F\"\n            render={() =\u003E (\n              \u003CReact.Fragment\u003E\n                \u003CAddPostForm \u002F\u003E\n                \u003CPostsList \u002F\u003E\n              \u003C\u002FReact.Fragment\u003E\n            )}\n          \u002F\u003E\n          \u003CRoute exact path=\"\u002Fposts\u002F:postId\" component={SinglePostPage} \u002F\u003E\n          \u003CRoute exact path=\"\u002FeditPost\u002F:postId\" component={EditPostForm} \u002F\u003E\n          \u003CRoute exact path=\"\u002Fusers\" component={UsersList} \u002F\u003E\n          \u003CRoute exact path=\"\u002Fusers\u002F:userId\" component={UserPage} \u002F\u003E\n          \u003CRoute exact path=\"\u002Fnotifications\" component={NotificationsList} \u002F\u003E\n          \u003CRedirect to=\"\u002F\" \u002F\u003E\n        \u003C\u002FSwitch\u003E\n      \u003C\u002Fdiv\u003E\n    \u003C\u002FRouter\u003E\n  )\n}\n\nexport default App\n","directory_shortid":"HJge-0Tl3K","id":"bb790359-ce8a-4b30-a81b-5ca17528c1c5","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"BkWglbRTgnF","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"App.js","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"\u002F\u002F A tiny wrapper around fetch(), borrowed from\n\u002F\u002F https:\u002F\u002Fkentcdodds.com\u002Fblog\u002Freplace-axios-with-a-simple-custom-fetch-wrapper\n\nexport async function client(endpoint, { body, ...customConfig } = {}) {\n  const headers = { 'Content-Type': 'application\u002Fjson' }\n\n  const config = {\n    method: body ? 'POST' : 'GET',\n    ...customConfig,\n    headers: {\n      ...headers,\n      ...customConfig.headers,\n    },\n  }\n\n  if (body) {\n    config.body = JSON.stringify(body)\n  }\n\n  let data\n  try {\n    const response = await window.fetch(endpoint, config)\n    data = await response.json()\n    if (response.ok) {\n      \u002F\u002F Return a result object similar to Axios\n      return {\n        status: response.status,\n        data,\n        headers: response.headers,\n        url: response.url,\n      }\n    }\n    throw new Error(response.statusText)\n  } catch (err) {\n    return Promise.reject(err.message ? err.message : data)\n  }\n}\n\nclient.get = function (endpoint, customConfig = {}) {\n  return client(endpoint, { ...customConfig, method: 'GET' })\n}\n\nclient.post = function (endpoint, body, customConfig = {}) {\n  return client(endpoint, { ...customConfig, body })\n}\n","directory_shortid":"rkbl-CTgnt","id":"0854f353-1b37-4caf-9a61-a1e9434bb6d9","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"SyzgeZAaght","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"client.js","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"import { rest, setupWorker } from 'msw'\nimport { factory, oneOf, manyOf, primaryKey } from '@mswjs\u002Fdata'\nimport { nanoid } from '@reduxjs\u002Ftoolkit'\nimport faker from 'faker'\nimport seedrandom from 'seedrandom'\nimport { Server as MockSocketServer } from 'mock-socket'\nimport { setRandom } from 'txtgen'\n\nimport { parseISO } from 'date-fns'\n\nconst NUM_USERS = 3\nconst POSTS_PER_USER = 3\nconst RECENT_NOTIFICATIONS_DAYS = 7\n\n\u002F\u002F Add an extra delay to all endpoints, so loading spinners show up.\nconst ARTIFICIAL_DELAY_MS = 2000\n\n\u002F* RNG setup *\u002F\n\n\u002F\u002F Set up a seeded random number generator, so that we get\n\u002F\u002F a consistent set of users \u002F entries each time the page loads.\n\u002F\u002F This can be reset by deleting this localStorage value,\n\u002F\u002F or turned off by setting `useSeededRNG` to false.\nlet useSeededRNG = true\n\nlet rng = seedrandom()\n\nif (useSeededRNG) {\n  let randomSeedString = localStorage.getItem('randomTimestampSeed')\n  let seedDate\n\n  if (randomSeedString) {\n    seedDate = new Date(randomSeedString)\n  } else {\n    seedDate = new Date()\n    randomSeedString = seedDate.toISOString()\n    localStorage.setItem('randomTimestampSeed', randomSeedString)\n  }\n\n  rng = seedrandom(randomSeedString)\n  setRandom(rng)\n  faker.seed(seedDate.getTime())\n}\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  return Math.floor(rng() * (max - min + 1)) + min\n}\n\nconst randomFromArray = (array) =\u003E {\n  const index = getRandomInt(0, array.length - 1)\n  return array[index]\n}\n\n\u002F* MSW Data Model Setup *\u002F\n\nexport const db = factory({\n  user: {\n    id: primaryKey(nanoid),\n    firstName: String,\n    lastName: String,\n    name: String,\n    username: String,\n    posts: manyOf('post'),\n  },\n  post: {\n    id: primaryKey(nanoid),\n    title: String,\n    date: String,\n    content: String,\n    reactions: oneOf('reaction'),\n    comments: manyOf('comment'),\n    user: oneOf('user'),\n  },\n  comment: {\n    id: primaryKey(String),\n    date: String,\n    text: String,\n    post: oneOf('post'),\n  },\n  reaction: {\n    id: primaryKey(nanoid),\n    thumbsUp: Number,\n    hooray: Number,\n    heart: Number,\n    rocket: Number,\n    eyes: Number,\n    post: oneOf('post'),\n  },\n})\n\nconst createUserData = () =\u003E {\n  const firstName = faker.name.firstName()\n  const lastName = faker.name.lastName()\n\n  return {\n    firstName,\n    lastName,\n    name: `${firstName} ${lastName}`,\n    username: faker.internet.userName(),\n  }\n}\n\nconst createPostData = (user) =\u003E {\n  return {\n    title: faker.lorem.words(),\n    date: faker.date.recent(RECENT_NOTIFICATIONS_DAYS).toISOString(),\n    user,\n    content: faker.lorem.paragraphs(),\n    reactions: db.reaction.create(),\n  }\n}\n\n\u002F\u002F Create an initial set of users and posts\nfor (let i = 0; i \u003C NUM_USERS; i++) {\n  const author = db.user.create(createUserData())\n\n  for (let j = 0; j \u003C POSTS_PER_USER; j++) {\n    const newPost = createPostData(author)\n    db.post.create(newPost)\n  }\n}\n\nconst serializePost = (post) =\u003E ({\n  ...post,\n  user: post.user.id,\n})\n\n\u002F* MSW REST API Handlers *\u002F\n\nexport const handlers = [\n  rest.get('\u002FfakeApi\u002Fposts', function (req, res, ctx) {\n    const posts = db.post.getAll().map(serializePost)\n    return res(ctx.delay(ARTIFICIAL_DELAY_MS), ctx.json(posts))\n  }),\n  rest.post('\u002FfakeApi\u002Fposts', function (req, res, ctx) {\n    const data = req.body\n\n    if (data.content === 'error') {\n      return res(\n        ctx.delay(ARTIFICIAL_DELAY_MS),\n        ctx.status(500),\n        ctx.json('Server error saving this post!')\n      )\n    }\n\n    data.date = new Date().toISOString()\n\n    const user = db.user.findFirst({ where: { id: { equals: data.user } } })\n    data.user = user\n    data.reactions = db.reaction.create()\n\n    const post = db.post.create(data)\n    return res(ctx.delay(ARTIFICIAL_DELAY_MS), ctx.json(serializePost(post)))\n  }),\n  rest.get('\u002FfakeApi\u002Fposts\u002F:postId', function (req, res, ctx) {\n    const post = db.post.findFirst({\n      where: { id: { equals: req.params.postId } },\n    })\n    return res(ctx.delay(ARTIFICIAL_DELAY_MS), ctx.json(serializePost(post)))\n  }),\n  rest.patch('\u002FfakeApi\u002Fposts\u002F:postId', (req, res, ctx) =\u003E {\n    const { id, ...data } = req.body\n    const updatedPost = db.post.update({\n      where: { id: { equals: req.params.postId } },\n      data,\n    })\n    return res(\n      ctx.delay(ARTIFICIAL_DELAY_MS),\n      ctx.json(serializePost(updatedPost))\n    )\n  }),\n\n  rest.get('\u002FfakeApi\u002Fposts\u002F:postId\u002Fcomments', (req, res, ctx) =\u003E {\n    const post = db.post.findFirst({\n      where: { id: { equals: req.params.postId } },\n    })\n    return res(\n      ctx.delay(ARTIFICIAL_DELAY_MS),\n      ctx.json({ comments: post.comments })\n    )\n  }),\n\n  rest.post('\u002FfakeApi\u002Fposts\u002F:postId\u002Freactions', (req, res, ctx) =\u003E {\n    const postId = req.params.postId\n    const reaction = req.body.reaction\n    const post = db.post.findFirst({\n      where: { id: { equals: postId } },\n    })\n\n    const updatedPost = db.post.update({\n      where: { id: { equals: postId } },\n      data: {\n        reactions: {\n          ...post.reactions,\n          [reaction]: (post.reactions[reaction] += 1),\n        },\n      },\n    })\n\n    return res(\n      ctx.delay(ARTIFICIAL_DELAY_MS),\n      ctx.json(serializePost(updatedPost))\n    )\n  }),\n  rest.get('\u002FfakeApi\u002Fnotifications', (req, res, ctx) =\u003E {\n    const numNotifications = getRandomInt(1, 5)\n\n    let notifications = generateRandomNotifications(\n      undefined,\n      numNotifications,\n      db\n    )\n\n    return res(ctx.delay(ARTIFICIAL_DELAY_MS), ctx.json(notifications))\n  }),\n  rest.get('\u002FfakeApi\u002Fusers', (req, res, ctx) =\u003E {\n    return res(ctx.delay(ARTIFICIAL_DELAY_MS), ctx.json(db.user.getAll()))\n  }),\n]\n\nexport const worker = setupWorker(...handlers)\n\u002F\u002F worker.printHandlers() \u002F\u002F Optional: nice for debugging to see all available route handlers that will be intercepted\n\n\u002F* Mock Websocket Setup *\u002F\n\nconst socketServer = new MockSocketServer('ws:\u002F\u002Flocalhost')\n\nlet currentSocket\n\nconst sendMessage = (socket, obj) =\u003E {\n  socket.send(JSON.stringify(obj))\n}\n\n\u002F\u002F Allow our UI to fake the server pushing out some notifications over the websocket,\n\u002F\u002F as if other users were interacting with the system.\nconst sendRandomNotifications = (socket, since) =\u003E {\n  const numNotifications = getRandomInt(1, 5)\n\n  const notifications = generateRandomNotifications(since, numNotifications, db)\n\n  sendMessage(socket, { type: 'notifications', payload: notifications })\n}\n\nexport const forceGenerateNotifications = (since) =\u003E {\n  sendRandomNotifications(currentSocket, since)\n}\n\nsocketServer.on('connection', (socket) =\u003E {\n  currentSocket = socket\n\n  socket.on('message', (data) =\u003E {\n    const message = JSON.parse(data)\n\n    switch (message.type) {\n      case 'notifications': {\n        const since = message.payload\n        sendRandomNotifications(socket, since)\n        break\n      }\n      default:\n        break\n    }\n  })\n})\n\n\u002F* Random Notifications Generation *\u002F\n\nconst notificationTemplates = [\n  'poked you',\n  'says hi!',\n  `is glad we're friends`,\n  'sent you a gift',\n]\n\nfunction generateRandomNotifications(since, numNotifications, db) {\n  const now = new Date()\n  let pastDate\n\n  if (since) {\n    pastDate = parseISO(since)\n  } else {\n    pastDate = new Date(now.valueOf())\n    pastDate.setMinutes(pastDate.getMinutes() - 15)\n  }\n\n  \u002F\u002F Create N random notifications. We won't bother saving these\n  \u002F\u002F in the DB - just generate a new batch and return them.\n  const notifications = [...Array(numNotifications)].map(() =\u003E {\n    const user = randomFromArray(db.user.getAll())\n    const template = randomFromArray(notificationTemplates)\n    return {\n      id: nanoid(),\n      date: faker.date.between(pastDate, now).toISOString(),\n      message: template,\n      user: user.id,\n    }\n  })\n\n  return notifications\n}\n","directory_shortid":"rkbl-CTgnt","id":"0784b828-ff0e-4595-a858-7081b5f26a3f","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"rJQxlZ06e3t","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"server.js","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport {\n  fetchNotifications,\n  selectAllNotifications,\n} from '..\u002Ffeatures\u002Fnotifications\u002FnotificationsSlice'\n\nexport const Navbar = () =\u003E {\n  const dispatch = useDispatch()\n  const notifications = useSelector(selectAllNotifications)\n  const numUnreadNotifications = notifications.filter((n) =\u003E !n.read).length\n\n  const fetchNewNotifications = () =\u003E {\n    dispatch(fetchNotifications())\n  }\n\n  let unreadNotificationsBadge\n\n  if (numUnreadNotifications \u003E 0) {\n    unreadNotificationsBadge = (\n      \u003Cspan className=\"badge\"\u003E{numUnreadNotifications}\u003C\u002Fspan\u003E\n    )\n  }\n\n  return (\n    \u003Cnav\u003E\n      \u003Csection\u003E\n        \u003Ch1\u003ERedux Essentials Example\u003C\u002Fh1\u003E\n\n        \u003Cdiv className=\"navContent\"\u003E\n          \u003Cdiv className=\"navLinks\"\u003E\n            \u003CLink to=\"\u002F\"\u003EPosts\u003C\u002FLink\u003E\n            \u003CLink to=\"\u002Fusers\"\u003EUsers\u003C\u002FLink\u003E\n            \u003CLink to=\"\u002Fnotifications\"\u003E\n              Notifications {unreadNotificationsBadge}\n            \u003C\u002FLink\u003E\n          \u003C\u002Fdiv\u003E\n\n          \u003Cbutton className=\"button\" onClick={fetchNewNotifications}\u003E\n            Refresh Notifications\n          \u003C\u002Fbutton\u003E\n        \u003C\u002Fdiv\u003E\n      \u003C\u002Fsection\u003E\n    \u003C\u002Fnav\u003E\n  )\n}\n","directory_shortid":"SkMl-A6ght","id":"98e541d3-472c-4fa1-931f-1c2cf680fa5a","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"S14eg-C6l2Y","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"Navbar.js","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"import { configureStore } from '@reduxjs\u002Ftoolkit'\n\nimport postsReducer from '..\u002Ffeatures\u002Fposts\u002FpostsSlice'\nimport usersReducer from '..\u002Ffeatures\u002Fusers\u002FusersSlice'\nimport notificationsReducer from '..\u002Ffeatures\u002Fnotifications\u002FnotificationsSlice'\n\nexport default configureStore({\n  reducer: {\n    posts: postsReducer,\n    users: usersReducer,\n    notifications: notificationsReducer,\n  },\n})\n","directory_shortid":"SkMl-A6ght","id":"038babeb-fde4-47e5-a7f0-9185132b5597","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"BkHlgb0pl2F","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"store.js","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"import React from 'react'\n\nexport const Spinner = ({ text = '', size = '5em' }) =\u003E {\n  const header = text ? \u003Ch4\u003E{text}\u003C\u002Fh4\u003E : null\n  return (\n    \u003Cdiv className=\"spinner\"\u003E\n      {header}\n      \u003Cdiv className=\"loader\" style={{ height: size, width: size }} \u002F\u003E\n    \u003C\u002Fdiv\u003E\n  )\n}\n","directory_shortid":"Hk7eZCpgnK","id":"44d3670c-62c3-408e-a736-667701ba48a3","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"S1IleW06x2K","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"Spinner.js","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"import React, { useLayoutEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { formatDistanceToNow, parseISO } from 'date-fns'\nimport classnames from 'classnames'\n\nimport { selectAllUsers } from '..\u002Fusers\u002FusersSlice'\n\nimport {\n  selectAllNotifications,\n  allNotificationsRead,\n} from '.\u002FnotificationsSlice'\n\nexport const NotificationsList = () =\u003E {\n  const dispatch = useDispatch()\n  const notifications = useSelector(selectAllNotifications)\n  const users = useSelector(selectAllUsers)\n\n  useLayoutEffect(() =\u003E {\n    dispatch(allNotificationsRead())\n  })\n\n  const renderedNotifications = notifications.map((notification) =\u003E {\n    const date = parseISO(notification.date)\n    const timeAgo = formatDistanceToNow(date)\n    const user = users.find((user) =\u003E user.id === notification.user) || {\n      name: 'Unknown User',\n    }\n\n    const notificationClassname = classnames('notification', {\n      new: notification.isNew,\n    })\n\n    return (\n      \u003Cdiv key={notification.id} className={notificationClassname}\u003E\n        \u003Cdiv\u003E\n          \u003Cb\u003E{user.name}\u003C\u002Fb\u003E {notification.message}\n        \u003C\u002Fdiv\u003E\n        \u003Cdiv title={notification.date}\u003E\n          \u003Ci\u003E{timeAgo} ago\u003C\u002Fi\u003E\n        \u003C\u002Fdiv\u003E\n      \u003C\u002Fdiv\u003E\n    )\n  })\n\n  return (\n    \u003Csection className=\"notificationsList\"\u003E\n      \u003Ch2\u003ENotifications\u003C\u002Fh2\u003E\n      {renderedNotifications}\n    \u003C\u002Fsection\u003E\n  )\n}\n","directory_shortid":"SySlWRplhF","id":"c2d8e9db-2467-42fc-8259-483b40a91a32","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"BkDlxZCalhY","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"NotificationsList.js","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"import {\n  createSlice,\n  createAsyncThunk,\n  createEntityAdapter,\n} from '@reduxjs\u002Ftoolkit'\n\nimport { client } from '..\u002F..\u002Fapi\u002Fclient'\n\nconst notificationsAdapter = createEntityAdapter({\n  sortComparer: (a, b) =\u003E b.date.localeCompare(a.date),\n})\n\nexport const fetchNotifications = createAsyncThunk(\n  'notifications\u002FfetchNotifications',\n  async (_, { getState }) =\u003E {\n    const allNotifications = selectAllNotifications(getState())\n    const [latestNotification] = allNotifications\n    const latestTimestamp = latestNotification ? latestNotification.date : ''\n    const response = await client.get(\n      `\u002FfakeApi\u002Fnotifications?since=${latestTimestamp}`\n    )\n    return response.data\n  }\n)\n\nconst notificationsSlice = createSlice({\n  name: 'notifications',\n  initialState: notificationsAdapter.getInitialState(),\n  reducers: {\n    allNotificationsRead(state, action) {\n      Object.values(state.entities).forEach((notification) =\u003E {\n        notification.read = true\n      })\n    },\n  },\n  extraReducers(builder) {\n    builder.addCase(fetchNotifications.fulfilled, (state, action) =\u003E {\n      \u002F\u002F Add client-side metadata for tracking new notifications\n      const notificationsWithMetadata = action.payload.map((notification) =\u003E ({\n        ...notification,\n        read: false,\n        isNew: true,\n      }))\n\n      Object.values(state.entities).forEach((notification) =\u003E {\n        \u002F\u002F Any notifications we've read are no longer new\n        notification.isNew = !notification.read\n      })\n\n      notificationsAdapter.upsertMany(state, notificationsWithMetadata)\n    })\n  },\n})\n\nexport const { allNotificationsRead } = notificationsSlice.actions\n\nexport default notificationsSlice.reducer\n\nexport const {\n  selectAll: selectAllNotifications,\n} = notificationsAdapter.getSelectors((state) =\u003E state.notifications)\n","directory_shortid":"SySlWRplhF","id":"edbf6f49-8ee7-4985-bad1-a4b71c7265b6","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"r1_leb0pe3Y","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"notificationsSlice.js","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { addNewPost } from '.\u002FpostsSlice'\nimport { selectAllUsers } from '..\u002Fusers\u002FusersSlice'\n\nexport const AddPostForm = () =\u003E {\n  const [title, setTitle] = useState('')\n  const [content, setContent] = useState('')\n  const [userId, setUserId] = useState('')\n  const [addRequestStatus, setAddRequestStatus] = useState('idle')\n\n  const dispatch = useDispatch()\n  const users = useSelector(selectAllUsers)\n\n  const onTitleChanged = (e) =\u003E setTitle(e.target.value)\n  const onContentChanged = (e) =\u003E setContent(e.target.value)\n  const onAuthorChanged = (e) =\u003E setUserId(e.target.value)\n\n  const canSave =\n    [title, content, userId].every(Boolean) && addRequestStatus === 'idle'\n\n  const onSavePostClicked = async () =\u003E {\n    if (canSave) {\n      try {\n        setAddRequestStatus('pending')\n        await dispatch(addNewPost({ title, content, user: userId })).unwrap()\n        setTitle('')\n        setContent('')\n        setUserId('')\n      } catch (err) {\n        console.error('Failed to save the post: ', err)\n      } finally {\n        setAddRequestStatus('idle')\n      }\n    }\n  }\n\n  const usersOptions = users.map((user) =\u003E (\n    \u003Coption key={user.id} value={user.id}\u003E\n      {user.name}\n    \u003C\u002Foption\u003E\n  ))\n\n  return (\n    \u003Csection\u003E\n      \u003Ch2\u003EAdd a New Post\u003C\u002Fh2\u003E\n      \u003Cform\u003E\n        \u003Clabel htmlFor=\"postTitle\"\u003EPost Title:\u003C\u002Flabel\u003E\n        \u003Cinput\n          type=\"text\"\n          id=\"postTitle\"\n          name=\"postTitle\"\n          placeholder=\"What's on your mind?\"\n          value={title}\n          onChange={onTitleChanged}\n        \u002F\u003E\n        \u003Clabel htmlFor=\"postAuthor\"\u003EAuthor:\u003C\u002Flabel\u003E\n        \u003Cselect id=\"postAuthor\" value={userId} onChange={onAuthorChanged}\u003E\n          \u003Coption value=\"\"\u003E\u003C\u002Foption\u003E\n          {usersOptions}\n        \u003C\u002Fselect\u003E\n        \u003Clabel htmlFor=\"postContent\"\u003EContent:\u003C\u002Flabel\u003E\n        \u003Ctextarea\n          id=\"postContent\"\n          name=\"postContent\"\n          value={content}\n          onChange={onContentChanged}\n        \u002F\u003E\n        \u003Cbutton type=\"button\" onClick={onSavePostClicked} disabled={!canSave}\u003E\n          Save Post\n        \u003C\u002Fbutton\u003E\n      \u003C\u002Fform\u003E\n    \u003C\u002Fsection\u003E\n  )\n}\n","directory_shortid":"rJ8ebC6xht","id":"77c90394-a025-4373-9f77-d62f5e5812c1","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"SkFxl-Rpx2K","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"AddPostForm.js","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nimport { postUpdated, selectPostById } from '.\u002FpostsSlice'\n\nexport const EditPostForm = ({ match }) =\u003E {\n  const { postId } = match.params\n\n  const post = useSelector((state) =\u003E selectPostById(state, postId))\n\n  const [title, setTitle] = useState(post.title)\n  const [content, setContent] = useState(post.content)\n\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const onTitleChanged = (e) =\u003E setTitle(e.target.value)\n  const onContentChanged = (e) =\u003E setContent(e.target.value)\n\n  const onSavePostClicked = () =\u003E {\n    if (title && content) {\n      dispatch(postUpdated({ id: postId, title, content }))\n      history.push(`\u002Fposts\u002F${postId}`)\n    }\n  }\n\n  return (\n    \u003Csection\u003E\n      \u003Ch2\u003EEdit Post\u003C\u002Fh2\u003E\n      \u003Cform\u003E\n        \u003Clabel htmlFor=\"postTitle\"\u003EPost Title:\u003C\u002Flabel\u003E\n        \u003Cinput\n          type=\"text\"\n          id=\"postTitle\"\n          name=\"postTitle\"\n          placeholder=\"What's on your mind?\"\n          value={title}\n          onChange={onTitleChanged}\n        \u002F\u003E\n        \u003Clabel htmlFor=\"postContent\"\u003EContent:\u003C\u002Flabel\u003E\n        \u003Ctextarea\n          id=\"postContent\"\n          name=\"postContent\"\n          value={content}\n          onChange={onContentChanged}\n        \u002F\u003E\n      \u003C\u002Fform\u003E\n      \u003Cbutton type=\"button\" onClick={onSavePostClicked}\u003E\n        Save Post\n      \u003C\u002Fbutton\u003E\n    \u003C\u002Fsection\u003E\n  )\n}\n","directory_shortid":"rJ8ebC6xht","id":"1324e514-79dc-40fb-b708-4211f4412653","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"S1cllWRTgnK","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"EditPostForm.js","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { selectUserById } from '..\u002Fusers\u002FusersSlice'\n\nexport const PostAuthor = ({ userId }) =\u003E {\n  const author = useSelector((state) =\u003E selectUserById(state, userId))\n\n  return \u003Cspan\u003Eby {author ? author.name : 'Unknown author'}\u003C\u002Fspan\u003E\n}\n","directory_shortid":"rJ8ebC6xht","id":"7bcbff25-6684-481a-88b2-a1245f31b943","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"SkiglWRTg2t","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"PostAuthor.js","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport { Spinner } from '..\u002F..\u002Fcomponents\u002FSpinner'\nimport { PostAuthor } from '.\u002FPostAuthor'\nimport { TimeAgo } from '.\u002FTimeAgo'\nimport { ReactionButtons } from '.\u002FReactionButtons'\nimport {\n  selectAllPosts,\n  fetchPosts,\n  selectPostIds,\n  selectPostById,\n} from '.\u002FpostsSlice'\n\nlet PostExcerpt = ({ postId }) =\u003E {\n  const post = useSelector((state) =\u003E selectPostById(state, postId))\n\n  return (\n    \u003Carticle className=\"post-excerpt\" key={post.id}\u003E\n      \u003Ch3\u003E{post.title}\u003C\u002Fh3\u003E\n      \u003Cdiv\u003E\n        \u003CPostAuthor userId={post.user} \u002F\u003E\n        \u003CTimeAgo timestamp={post.date} \u002F\u003E\n      \u003C\u002Fdiv\u003E\n      \u003Cp className=\"post-content\"\u003E{post.content.substring(0, 100)}\u003C\u002Fp\u003E\n\n      \u003CReactionButtons post={post} \u002F\u003E\n      \u003CLink to={`\u002Fposts\u002F${post.id}`} className=\"button muted-button\"\u003E\n        View Post\n      \u003C\u002FLink\u003E\n    \u003C\u002Farticle\u003E\n  )\n}\n\nexport const PostsList = () =\u003E {\n  const dispatch = useDispatch()\n  const orderedPostIds = useSelector(selectPostIds)\n\n  const postStatus = useSelector((state) =\u003E state.posts.status)\n  const error = useSelector((state) =\u003E state.posts.error)\n\n  useEffect(() =\u003E {\n    if (postStatus === 'idle') {\n      dispatch(fetchPosts())\n    }\n  }, [postStatus, dispatch])\n\n  let content\n\n  if (postStatus === 'loading') {\n    content = \u003CSpinner text=\"Loading...\" \u002F\u003E\n  } else if (postStatus === 'succeeded') {\n    content = orderedPostIds.map((postId) =\u003E (\n      \u003CPostExcerpt key={postId} postId={postId} \u002F\u003E\n    ))\n  } else if (postStatus === 'failed') {\n    content = \u003Cdiv\u003E{error}\u003C\u002Fdiv\u003E\n  }\n\n  return (\n    \u003Csection className=\"posts-list\"\u003E\n      \u003Ch2\u003EPosts\u003C\u002Fh2\u003E\n      {content}\n    \u003C\u002Fsection\u003E\n  )\n}\n","directory_shortid":"rJ8ebC6xht","id":"4004ed4d-5d03-49cb-a948-f4a18aebcea6","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"BJ2ee-0pghF","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"PostsList.js","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"import React from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { reactionAdded } from '.\u002FpostsSlice'\n\nconst reactionEmoji = {\n  thumbsUp: '👍',\n  hooray: '🎉',\n  heart: '❤️',\n  rocket: '🚀',\n  eyes: '👀',\n}\n\nexport const ReactionButtons = ({ post }) =\u003E {\n  const dispatch = useDispatch()\n\n  const reactionButtons = Object.entries(reactionEmoji).map(([name, emoji]) =\u003E {\n    return (\n      \u003Cbutton\n        key={name}\n        type=\"button\"\n        className=\"muted-button reaction-button\"\n        onClick={() =\u003E\n          dispatch(reactionAdded({ postId: post.id, reaction: name }))\n        }\n      \u003E\n        {emoji} {post.reactions[name]}\n      \u003C\u002Fbutton\u003E\n    )\n  })\n\n  return \u003Cdiv\u003E{reactionButtons}\u003C\u002Fdiv\u003E\n}\n","directory_shortid":"rJ8ebC6xht","id":"699aa9cd-f740-439a-9f69-5b751ea7454c","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"BJpglbAae2t","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"ReactionButtons.js","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport { PostAuthor } from '.\u002FPostAuthor'\nimport { TimeAgo } from '.\u002FTimeAgo'\nimport { ReactionButtons } from '.\u002FReactionButtons'\nimport { selectPostById } from '.\u002FpostsSlice'\n\nexport const SinglePostPage = ({ match }) =\u003E {\n  const { postId } = match.params\n\n  const post = useSelector((state) =\u003E selectPostById(state, postId))\n\n  if (!post) {\n    return (\n      \u003Csection\u003E\n        \u003Ch2\u003EPost not found!\u003C\u002Fh2\u003E\n      \u003C\u002Fsection\u003E\n    )\n  }\n\n  return (\n    \u003Csection\u003E\n      \u003Carticle className=\"post\"\u003E\n        \u003Ch2\u003E{post.title}\u003C\u002Fh2\u003E\n        \u003Cdiv\u003E\n          \u003CPostAuthor userId={post.user} \u002F\u003E\n          \u003CTimeAgo timestamp={post.date} \u002F\u003E\n        \u003C\u002Fdiv\u003E\n        \u003Cp className=\"post-content\"\u003E{post.content}\u003C\u002Fp\u003E\n        \u003CReactionButtons post={post} \u002F\u003E\n        \u003CLink to={`\u002FeditPost\u002F${post.id}`} className=\"button\"\u003E\n          Edit Post\n        \u003C\u002FLink\u003E\n      \u003C\u002Farticle\u003E\n    \u003C\u002Fsection\u003E\n  )\n}\n","directory_shortid":"rJ8ebC6xht","id":"e2cdc51e-296b-4a98-852d-e6d947d55e14","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"By0glZApehY","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"SinglePostPage.js","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"import React from 'react'\nimport { parseISO, formatDistanceToNow } from 'date-fns'\n\nexport const TimeAgo = ({ timestamp }) =\u003E {\n  let timeAgo = ''\n  if (timestamp) {\n    const date = parseISO(timestamp)\n    const timePeriod = formatDistanceToNow(date)\n    timeAgo = `${timePeriod} ago`\n  }\n\n  return (\n    \u003Cspan title={timestamp}\u003E\n      &nbsp; \u003Ci\u003E{timeAgo}\u003C\u002Fi\u003E\n    \u003C\u002Fspan\u003E\n  )\n}\n","directory_shortid":"rJ8ebC6xht","id":"a9e2500c-aaf6-4f26-92a7-56cd59519a2c","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"BJkbeZAae2K","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"TimeAgo.js","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"import {\n  createSlice,\n  createAsyncThunk,\n  createSelector,\n  createEntityAdapter,\n} from '@reduxjs\u002Ftoolkit'\nimport { client } from '..\u002F..\u002Fapi\u002Fclient'\n\nconst postsAdapter = createEntityAdapter({\n  sortComparer: (a, b) =\u003E b.date.localeCompare(a.date),\n})\n\nconst initialState = postsAdapter.getInitialState({\n  status: 'idle',\n  error: null,\n})\n\nexport const fetchPosts = createAsyncThunk('posts\u002FfetchPosts', async () =\u003E {\n  const response = await client.get('\u002FfakeApi\u002Fposts')\n  return response.data\n})\n\nexport const addNewPost = createAsyncThunk(\n  'posts\u002FaddNewPost',\n  async (initialPost) =\u003E {\n    const response = await client.post('\u002FfakeApi\u002Fposts', initialPost)\n    return response.data\n  }\n)\n\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    reactionAdded(state, action) {\n      const { postId, reaction } = action.payload\n      const existingPost = state.entities[postId]\n      if (existingPost) {\n        existingPost.reactions[reaction]++\n      }\n    },\n    postUpdated(state, action) {\n      const { id, title, content } = action.payload\n      const existingPost = state.entities[id]\n      if (existingPost) {\n        existingPost.title = title\n        existingPost.content = content\n      }\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(fetchPosts.pending, (state, action) =\u003E {\n        state.status = 'loading'\n      })\n      .addCase(fetchPosts.fulfilled, (state, action) =\u003E {\n        state.status = 'succeeded'\n        \u002F\u002F Add any fetched posts to the array\n        postsAdapter.upsertMany(state, action.payload)\n      })\n      .addCase(fetchPosts.rejected, (state, action) =\u003E {\n        state.status = 'failed'\n        state.error = action.error.message\n      })\n      .addCase(addNewPost.fulfilled, postsAdapter.addOne)\n  },\n})\n\nexport const { postAdded, postUpdated, reactionAdded } = postsSlice.actions\n\nexport default postsSlice.reducer\n\nexport const {\n  selectAll: selectAllPosts,\n  selectById: selectPostById,\n  selectIds: selectPostIds,\n} = postsAdapter.getSelectors((state) =\u003E state.posts)\n\nexport const selectPostsByUser = createSelector(\n  [selectAllPosts, (state, userId) =\u003E userId],\n  (posts, userId) =\u003E posts.filter((post) =\u003E post.user === userId)\n)\n","directory_shortid":"rJ8ebC6xht","id":"354ca910-b601-4141-a610-38e1118ce9ed","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"ByxWeWATgnK","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"postsSlice.js","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport { selectUserById } from '..\u002Fusers\u002FusersSlice'\nimport { selectPostsByUser } from '..\u002Fposts\u002FpostsSlice'\n\nexport const UserPage = ({ match }) =\u003E {\n  const { userId } = match.params\n\n  const user = useSelector((state) =\u003E selectUserById(state, userId))\n\n  const postsForUser = useSelector((state) =\u003E selectPostsByUser(state, userId))\n\n  const postTitles = postsForUser.map((post) =\u003E (\n    \u003Cli key={post.id}\u003E\n      \u003CLink to={`\u002Fposts\u002F${post.id}`}\u003E{post.title}\u003C\u002FLink\u003E\n    \u003C\u002Fli\u003E\n  ))\n\n  return (\n    \u003Csection\u003E\n      \u003Ch2\u003E{user.name}\u003C\u002Fh2\u003E\n\n      \u003Cul\u003E{postTitles}\u003C\u002Ful\u003E\n    \u003C\u002Fsection\u003E\n  )\n}\n","directory_shortid":"ryPe-CaxhF","id":"bc26bcdf-9310-4129-bf60-b84f8b8b1c0b","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"S1bbeZApx2t","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"UserPage.js","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { selectAllUsers } from '.\u002FusersSlice'\n\nexport const UsersList = () =\u003E {\n  const users = useSelector(selectAllUsers)\n\n  const renderedUsers = users.map((user) =\u003E (\n    \u003Cli key={user.id}\u003E\n      \u003CLink to={`\u002Fusers\u002F${user.id}`}\u003E{user.name}\u003C\u002FLink\u003E\n    \u003C\u002Fli\u003E\n  ))\n\n  return (\n    \u003Csection\u003E\n      \u003Ch2\u003EUsers\u003C\u002Fh2\u003E\n\n      \u003Cul\u003E{renderedUsers}\u003C\u002Ful\u003E\n    \u003C\u002Fsection\u003E\n  )\n}\n","directory_shortid":"ryPe-CaxhF","id":"2e669c35-b2e9-40fa-bc50-d25419d614fd","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"ryM-xbA6lhF","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"UsersList.js","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"import {\n  createSlice,\n  createAsyncThunk,\n  createEntityAdapter,\n} from '@reduxjs\u002Ftoolkit'\nimport { client } from '..\u002F..\u002Fapi\u002Fclient'\n\nconst usersAdapter = createEntityAdapter()\n\nconst initialState = usersAdapter.getInitialState()\n\nexport const fetchUsers = createAsyncThunk('users\u002FfetchUsers', async () =\u003E {\n  const response = await client.get('\u002FfakeApi\u002Fusers')\n  return response.data\n})\n\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder.addCase(fetchUsers.fulfilled, usersAdapter.setAll)\n  },\n})\n\nexport default usersSlice.reducer\n\nexport const {\n  selectAll: selectAllUsers,\n  selectById: selectUserById,\n} = usersAdapter.getSelectors((state) =\u003E state.users)\n","directory_shortid":"ryPe-CaxhF","id":"c807f913-ad63-4aa5-be09-36b598bfca85","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"S1mWxZA6ghK","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"usersSlice.js","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":":root {\n  --redux-color: #764abc;\n}\n\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n\np {\n  font-size: 1.1rem;\n}\n\n\u002F* Navbar *\u002F\n\nnav {\n  display: flex;\n  padding: 0;\n  background: var(--redux-color);\n}\n\nnav section {\n  width: 100%;\n}\n\nnav section h1,\nnav section {\n  color: white;\n}\n\nnav a,\nnav a:active {\n  font-weight: 700;\n  padding: 0.25rem 1.5rem;\n  border-radius: 4px;\n  color: white !important;\n  background: #481499;\n}\n\nnav a:first-of-type {\n  margin-left: -1.5rem;\n}\n\nnav a:hover {\n  color: white;\n  background: #926bcf;\n}\n\n.navContent {\n  display: flex;\n  justify-content: space-between;\n}\n\n.navLinks {\n  display: flex;\n}\n\n.navLinks a {\n  margin-left: 5px;\n}\n\n.navLinks a .badge {\n  margin-left: 5px;\n  position: relative;\n  top: -3px;\n}\n\n.badge {\n  display: inline-block;\n  padding: 0.25em 0.4em;\n  font-size: 75%;\n  font-weight: 700;\n  line-height: 1;\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: baseline;\n  border-radius: 0.25rem;\n  color: #212529;\n  background-color: #f8f9fa;\n}\n\n.navLinks :first-child {\n  margin-left: 0;\n}\n\n\u002F* Main content *\u002F\n\nsection {\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 0 1.5rem;\n}\n\nsection h1 {\n  font-size: 3rem;\n}\n\n\u002F* Posts list *\u002F\n\n.post h2 {\n  font-size: 2.5rem;\n  margin-bottom: 5px;\n}\n\n.post-excerpt {\n  padding: 0.25rem 0.25rem;\n  border: 1px solid rgb(177, 174, 174);\n  border-radius: 7px;\n}\n\n.posts-list .post-excerpt + .post-excerpt {\n  margin-top: 0.5rem;\n}\n\n.posts-container.disabled {\n  opacity: 0.5;\n}\n\n.post-excerpt h3 {\n  margin: 0;\n  font-size: 1.5rem;\n}\n\np.post-content {\n  margin-top: 10px;\n}\n\n.button {\n  display: inline-block;\n  background: #1976d2;\n  color: white;\n  border-radius: 4px;\n  font-weight: 700;\n  padding: 0.75rem 1.5rem;\n}\n\nbutton:disabled,\nbutton:disabled:hover {\n  opacity: 0.5;\n}\n\nbutton.reaction-button {\n  border: 1px solid #e0e3e9;\n  padding: 5px 10px;\n  margin: 5px 6px 10px;\n  border-radius: 4px;\n  white-space: nowrap;\n}\n\n.spinner {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.spinner h4 {\n  margin: 5px;\n}\n\n\u002F* https:\u002F\u002Fprojects.lukehaas.me\u002Fcss-loaders\u002F , Loader #3 *\u002F\n.loader {\n  font-size: 10px;\n  margin: 10px;\n  \u002F* text-indent: -9999em; *\u002F\n  width: 5em;\n  height: 5em;\n  border-radius: 50%;\n  background: var(--redux-color);\n  background: -moz-linear-gradient(\n    left,\n    var(--redux-color) 10%,\n    rgba(128, 0, 255, 0) 42%\n  );\n  background: -webkit-linear-gradient(\n    left,\n    var(--redux-color) 10%,\n    rgba(128, 0, 255, 0) 42%\n  );\n  background: -o-linear-gradient(\n    left,\n    var(--redux-color) 10%,\n    rgba(128, 0, 255, 0) 42%\n  );\n  background: -ms-linear-gradient(\n    left,\n    var(--redux-color) 10%,\n    rgba(128, 0, 255, 0) 42%\n  );\n  background: linear-gradient(\n    to right,\n    var(--redux-color) 10%,\n    rgba(128, 0, 255, 0) 42%\n  );\n  position: relative;\n  -webkit-animation: load3 1.4s infinite linear;\n  animation: load3 1.4s infinite linear;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n}\n\n.loader:before {\n  width: 50%;\n  height: 50%;\n  background: var(--redux-color);\n  border-radius: 100% 0 0 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  content: '';\n}\n\n.loader:after {\n  background: #ffffff;\n  width: 75%;\n  height: 75%;\n  border-radius: 50%;\n  content: '';\n  margin: auto;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n}\n\n@-webkit-keyframes load3 {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes load3 {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n\n\u002F* Notifications list *\u002F\n\n.notification {\n  border: 1px solid #eee;\n  padding: 0.5rem;\n}\n\n.notificationsList .notification + .notification {\n  border-top: none;\n}\n\n.notification.new {\n  background-color: rgba(29, 161, 242, 0.1);\n}\n","directory_shortid":"HJge-0Tl3K","id":"f48488ea-c9cf-4f7f-a775-351a5824283a","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"SkVWxWATghK","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"index.css","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport '.\u002Findex.css'\nimport App from '.\u002FApp'\nimport store from '.\u002Fapp\u002Fstore'\nimport { Provider } from 'react-redux'\n\nimport { worker } from '.\u002Fapi\u002Fserver'\n\nimport { fetchUsers } from '.\u002Ffeatures\u002Fusers\u002FusersSlice'\n\n\u002F\u002F Wrap app rendering so we can wait for the mock API to initialize\nasync function start() {\n  \u002F\u002F Start our mock API server\n  await worker.start({ onUnhandledRequest: 'bypass' })\n\n  store.dispatch(fetchUsers())\n\n  ReactDOM.render(\n    \u003CReact.StrictMode\u003E\n      \u003CProvider store={store}\u003E\n        \u003CApp \u002F\u003E\n      \u003C\u002FProvider\u003E\n    \u003C\u002FReact.StrictMode\u003E,\n    document.getElementById('root')\n  )\n}\n\nstart()\n","directory_shortid":"HJge-0Tl3K","id":"8a0fdea1-5074-416b-9e74-706dd4838ef3","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"S1SZxbAae3K","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"index.js","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"\u002F\u002F jest-dom adds custom jest matchers for asserting on DOM nodes.\n\u002F\u002F allows you to do things like:\n\u002F\u002F expect(element).toHaveTextContent(\u002Freact\u002Fi)\n\u002F\u002F learn more: https:\u002F\u002Fgithub.com\u002Ftesting-library\u002Fjest-dom\nimport '@testing-library\u002Fjest-dom\u002Fextend-expect';\n","directory_shortid":"HJge-0Tl3K","id":"60f80d87-eb44-45bc-a2aa-3260fd6fe425","inserted_at":"2022-01-03T19:26:47","is_binary":false,"sha":null,"shortid":"ryLZg-A6xnF","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"setupTests.js","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"https:\u002F\u002Frawcdn.githack.com\u002Freduxjs\u002Fredux-essentials-example-app\u002Ff3e22165975501bff8f647d94b1992351b8bd5b4\u002Fpublic\u002Flogo192.png","directory_shortid":"H1gZ06l3t","id":"7d7b395a-41ec-4cb9-83ca-2c95bc06d89a","inserted_at":"2022-01-03T19:26:47","is_binary":true,"sha":null,"shortid":"SywWeWCaxnF","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"logo192.png","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"https:\u002F\u002Frawcdn.githack.com\u002Freduxjs\u002Fredux-essentials-example-app\u002Ff3e22165975501bff8f647d94b1992351b8bd5b4\u002Fpublic\u002Flogo512.png","directory_shortid":"H1gZ06l3t","id":"68f684d6-15d0-4fc9-828e-718bd88ff95d","inserted_at":"2022-01-03T19:26:47","is_binary":true,"sha":null,"shortid":"Bk_-l-A6l2t","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"logo512.png","updated_at":"2022-01-03T19:26:47","upload_id":null},{"code":"https:\u002F\u002Frawcdn.githack.com\u002Freduxjs\u002Fredux-essentials-example-app\u002Ff3e22165975501bff8f647d94b1992351b8bd5b4\u002Fpublic\u002Ffavicon.ico","directory_shortid":"H1gZ06l3t","id":"a5d69ce5-eaa6-4a41-8e2f-eb2bee0968fd","inserted_at":"2022-01-03T19:26:47","is_binary":true,"sha":null,"shortid":"HJFbeZ0alhK","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"favicon.ico","updated_at":"2022-01-03T19:26:47","upload_id":null}],"directories":[{"directory_shortid":null,"id":"8ec22ced-311d-49e5-8b89-34f8db20ef00","inserted_at":"2022-01-03T19:26:47","shortid":"H1gZ06l3t","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"public","updated_at":"2022-01-03T19:26:47"},{"directory_shortid":null,"id":"ae58ffb0-1a9f-40ef-97a5-34959c75ea31","inserted_at":"2022-01-03T19:26:47","shortid":"HJge-0Tl3K","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"src","updated_at":"2022-01-03T19:26:47"},{"directory_shortid":"HJge-0Tl3K","id":"bb057126-d6e1-45b4-a37e-3eb129b0d5fb","inserted_at":"2022-01-03T19:26:47","shortid":"rkbl-CTgnt","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"api","updated_at":"2022-01-03T19:26:47"},{"directory_shortid":"HJge-0Tl3K","id":"b8046e7e-61f3-45ee-ae36-1f780e83a80a","inserted_at":"2022-01-03T19:26:47","shortid":"SkMl-A6ght","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"app","updated_at":"2022-01-03T19:26:47"},{"directory_shortid":"HJge-0Tl3K","id":"76d168e9-0bc8-4338-bfcb-87d270678f93","inserted_at":"2022-01-03T19:26:47","shortid":"Hk7eZCpgnK","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"components","updated_at":"2022-01-03T19:26:47"},{"directory_shortid":"HJge-0Tl3K","id":"ee75c0f2-d1e3-44ae-aaf4-cba62e2b8251","inserted_at":"2022-01-03T19:26:47","shortid":"B1VgZ06e2Y","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"features","updated_at":"2022-01-03T19:26:47"},{"directory_shortid":"B1VgZ06e2Y","id":"c017b360-57bb-4bda-bfe4-702b89e35c33","inserted_at":"2022-01-03T19:26:47","shortid":"SySlWRplhF","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"notifications","updated_at":"2022-01-03T19:26:47"},{"directory_shortid":"B1VgZ06e2Y","id":"4d7608c9-70d0-4ee9-be77-6030252c8ea9","inserted_at":"2022-01-03T19:26:47","shortid":"rJ8ebC6xht","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"posts","updated_at":"2022-01-03T19:26:47"},{"directory_shortid":"B1VgZ06e2Y","id":"b6a1e79c-a809-469a-b7f5-d075ac89197d","inserted_at":"2022-01-03T19:26:47","shortid":"ryPe-CaxhF","source_id":"4d67fdbd-76fc-4eb9-8f2f-38a5fe4492bf","title":"users","updated_at":"2022-01-03T19:26:47"}],"is_frozen":false,"user_liked":false,"title":"redux-essentials-example","authorization":"read","template":"create-react-app","screenshot_url":"https:\u002F\u002Fscreenshots.codesandbox.io\u002Fvmgud\u002F3.png","forked_template_sandbox":null,"tags":[],"privacy":0,"id":"vmgud","original_git":null,"picks":[],"permissions":{"prevent_sandbox_export":false,"prevent_sandbox_leaving":false},"room_id":null,"forked_from_sandbox":null,"npm_registries":[],"entry":"src\u002Findex.js","description":null,"view_count":955530,"author":null};</script><style>body,html{overscroll-behavior-x:none}</style><link href="a_data/common.0cbbfe89.chunk.css" rel="stylesheet"><link href="a_data/default~app~embed.1f247b7e.chunk.css" rel="stylesheet"><meta property="og:title" name="og:title" content="redux-essentials-example - CodeSandbox">
<meta property="twitter:title" name="twitter:title" content="redux-essentials-example - CodeSandbox">
<meta property="description" name="description" content="redux-essentials-example using @mswjs/data, @reduxjs/toolkit, @testing-library/jest-dom, @testing-library/react, @testing-library/user-event, classnames, date-fns, faker, miragejs">
<meta property="og:description" name="og:description" content="redux-essentials-example using @mswjs/data, @reduxjs/toolkit, @testing-library/jest-dom, @testing-library/react, @testing-library/user-event, classnames, date-fns, faker, miragejs">
<meta property="twitter:description" name="twitter:description" content="redux-essentials-example using @mswjs/data, @reduxjs/toolkit, @testing-library/jest-dom, @testing-library/react, @testing-library/user-event, classnames, date-fns, faker, miragejs">
<meta property="article:published_time" name="article:published_time" content="2020-07-13T14:00:33">
<meta property="article:modified_time" name="article:modified_time" content="2022-01-03T19:26:47">
<meta property="article:section" name="article:section" content="create-react-app">
<meta property="og:type" name="og:type" content="article">
<meta property="og:url" name="og:url" content="https://codesandbox.io/s/vmgud">
<meta property="twitter:site" name="twitter:site" content="@codesandbox">
<script type="application/ld+json">{"author":null,"codeRepository":"https://codesandbox.io/s/vmgud","codeSampleType":"template","dateCreated":"2020-07-13T14:00:33","dateModified":"2022-01-03T19:26:47","image":{"url":"https://codesandbox.io/api/v1/sandboxes/vmgud/screenshot.png","@type":"ImageObject"},"isBasedOn":null,"keywords":"create-react-app","name":"redux-essentials-example","programmingLanguage":"create-react-app","publisher":{"logo":{"height":630,"url":"https://codesandbox.io/static/img/banner.png","width":1200,"@type":"ImageObject"},"name":"CodeSandbox","@type":"Organization"},"text":null,"thumbnailUrl":"https://codesandbox.io/api/v1/sandboxes/vmgud/screenshot.png","url":"https://codesandbox.io/s/vmgud","workExample":{"applicationCategory":"create-react-app","operatingSystem":"Web app","screenshot":"https://codesandbox.io/api/v1/sandboxes/vmgud/screenshot.png","url":"https://vmgud.csb.app","@type":"SoftwareApplication"},"@context":"https://schema.org","@type":"SoftwareSourceCode"}</script>
<link rel="canonical" href="https://codesandbox.io/s/vmgud">
<meta property="og:image" name="og:image" content="https://codesandbox.io/api/v1/sandboxes/vmgud/screenshot.png">
<meta property="twitter:image:src" name="twitter:image:src" content="https://codesandbox.io/api/v1/sandboxes/vmgud/screenshot.png">
<meta property="og:image:alt" name="og:image:alt" content="A preview of redux-essentials-example">
<meta property="og:image:width" name="og:image:width" content="1200">
<meta property="twitter:image:width" name="twitter:image:width" content="1200">
<meta property="og:image:height" name="og:image:height" content="630">
<meta property="twitter:image:height" name="twitter:image:height" content="630">
<meta property="twitter:card" name="twitter:card" content="summary_large_image">
<style></style><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/f2eaee5b-8137-46c5-acc8-894c69f3b573"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/d7b8cf11-442b-4994-916b-a5b1e6aeda7a"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/642a5ee7-f942-41a7-8887-b33e31fd8485"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/12b03444-2cdf-4685-a975-c42d45b0d2a2"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/5b344c5a-ec50-4f2d-a9f4-5d21c77070b9"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/07669323-4071-4a3f-9248-f25dab15d240"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/af6abfcc-3428-440f-b90f-e7172447da69"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/3fc4708f-d2e0-4563-9838-7a347824b115"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/ff45e089-3fc2-4972-9c0a-4d5ae9b17082"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/9a916636-708e-4c62-bfb2-44012206538e"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/bf755937-1fd0-4612-90b3-6872483416bb"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/f5f1c691-3b31-4529-a05a-79b658ff4190"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/c6fc1e7a-6617-4d1b-9e78-32730709e1e5"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/ac16515c-0b43-4e23-be53-4e156f25dbf6"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/f7c80a54-85a5-4594-9950-7825191553dc"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/a1a26ad6-f540-444e-bb4c-de6bd6ae5a4c"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/576af837-052c-4bb3-8784-7e4f8f3097ba"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/d36d59a0-6d20-4ad6-8975-dace492e95a2"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/15998c3c-4595-43c8-9c91-08a1af1bae4d"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/58f57a24-2e68-4a85-bb17-dcf222e90397"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/8d917d89-6f0e-4219-8412-27f9ec2aa302"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/326630fc-d736-4a44-b691-bfb7e238ad41"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/9906b7f7-2fac-4beb-be16-351815c6a02a"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/8866c998-c250-4bd2-9f8f-d953ffda0bcd"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/8f73e4fb-6f40-49bc-95de-cfea867753e4"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/c052d018-8c81-493d-bd14-faeba1e39a5d"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/a6618a7a-8221-4cef-9998-4c19f9b80027"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/9aa8f3b9-a314-4d8d-971c-06cd8445cd83"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/b6c889c2-c8d3-4be3-9b57-b37cfd3a9f41"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/cbee7b27-eb6d-4e57-bc83-522b55b86568"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/a9fbe094-1bd2-42b5-a5ea-8a5a5fda0480"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/a9f2b386-505b-4cdf-8f52-5b4f7946b629"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/774926f9-01e7-40ba-83fb-795cf068fcda"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/cedb777f-47db-4b0e-bd2c-3dd844119d4d"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/cbee24a9-d4a1-490a-9ee9-df9305db0354"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/48f78522-6a5f-4d51-b565-649d3776687b"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/5e35970d-86ea-49bf-aaee-fd6af90d18f6"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/5a4ddf18-c047-4d66-b100-17b881d40f16"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/a5e572e9-1a31-4b51-aa63-8bbb0553b631"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/afbf9328-04c5-46de-affa-68eccac4fd0d"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/733c57e4-c883-423e-a107-60b6b29cf2a2"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/874354e0-bac3-4a5d-97e5-8a425412539e"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/213b0cb9-a5f9-4565-8e51-29189eebd688"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/d2bc4a8d-9086-45bc-8dd6-2ca3ab2d7d85"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/3bf07971-0b38-4bcb-8f35-a1425eb21fd5"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/c47fc630-4498-4630-8b56-9cf7a50b3454"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/d249ef1e-28b5-4869-9eec-1d7cd8e0b2c1"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/32ae79e0-dbf1-4d5d-918b-5b1a82f50e93"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/5c4fcebb-41f4-4820-b8d8-43ee37ae2786"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/51127675-519b-4dae-b56d-06e2869f3e4f"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/580747f1-2769-4f9d-98cf-839b3561cb69"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/9a0dac34-2d74-43fa-878c-e3fe8e904c62"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/9b6afa91-b3f7-459e-81f9-bf45771b3e50"><link type="text/css" rel="stylesheet" href="blob:https://codesandbox.io/875d3890-f3f0-41be-a3cc-def86b2c553c"><style data-styled="active" data-styled-version="5.2.0"></style><script charset="utf-8" src="a_data/vendors~app~codemirror-editor~monaco-editor~sandbox.ad4e6d3c4.js"></script><script charset="utf-8" src="a_data/vendors~app~codemirror-editor~monaco-editor.bf93486bf.chunk.js"></script><link rel="stylesheet" type="text/css" href="a_data/vendors~codemirror-editor.3dbb558c.chunk.css"><script charset="utf-8" src="a_data/vendors~codemirror-editor.07574d8d1.chunk.js"></script><script charset="utf-8" src="a_data/codemirror-editor.a3814105e.chunk.js"></script><script charset="utf-8" src="a_data/codemirror-tern.e9826e49d.chunk.js"></script></head><body style="margin:0;padding:0;background-color:#191d1f;overflow:hidden"><!-- Google Tag Manager (noscript) --><noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-T3L6RFK" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript><!-- End Google Tag Manager (noscript) --><div id="root"><div class="elements__Fullscreen-vemxx9-1 bVgoum"><div class="elements__Container-tgaqm6-0 cOfkFx"><section><div class="elements__Header-sc-1ntk86q-1 gCYlQF"><svg width="9" height="6" viewBox="0 0 9 6" xmlns="http://www.w3.org/2000/svg" open="" class="elements__Icon-sc-1ntk86q-3 csnFNZ"><path d="M4.50009 6L-5.24537e-07 1.26364e-06L9 4.76837e-07L4.50009 6Z" fill="currentcolor"></path></svg><div class="elements__Title-sc-1ntk86q-2 hGmdjR">CodeSandbox</div></div><div class="elements__Body-sc-1ntk86q-0 kynCge"><div class="elements__Container-zwo3qx-0 erOQZF"><h1 title="redux-essentials-example" class="elements__Title-zwo3qx-1 QHzNw">redux-essentials-example</h1><div version="3" title="redux-essentials-example" id="vmgud" class="sc-dFRpvv fgkBWC elements__Stats-zwo3qx-3 djVwjo"><div class="sc-csTaMs cpvCtp"><svg fill="currentColor" preserveAspectRatio="xMidYMid meet" height="1em" width="1em" viewBox="0 0 40 40" style="vertical-align: middle;"><g><path d="m37.1 21.4q-3.3-5.2-8.5-7.8 1.4 2.3 1.4 5 0 4.1-2.9 7t-7.1 3-7.1-3-2.9-7q0-2.7 1.4-5.1-5.1 2.7-8.5 7.9 2.9 4.6 7.4 7.3t9.7 2.7 9.7-2.7 7.4-7.3z m-16-8.5q0-0.5-0.3-0.8t-0.8-0.3q-2.8 0-4.8 2t-2 4.8q0 0.4 0.3 0.7t0.8 0.3 0.7-0.3 0.4-0.7q0-2 1.3-3.3t3.3-1.4q0.4 0 0.8-0.3t0.3-0.7z m18.9 8.5q0 0.8-0.4 1.6-3.2 5.1-8.4 8.2t-11.2 3.1-11.2-3.1-8.4-8.2q-0.4-0.8-0.4-1.6t0.4-1.5q3.2-5.1 8.4-8.2t11.2-3.1 11.1 3.1 8.5 8.2q0.4 0.8 0.4 1.5z"></path></g></svg><span style="margin-left: 0.5em;">955.5k </span></div><div class="sc-csTaMs cpvCtp"><svg fill="currentColor" preserveAspectRatio="xMidYMid meet" height="1em" width="1em" viewBox="0 0 40 40" style="vertical-align: middle;"><g><path d="m20 33.8c15.6-12.3 15-16.7 15-20s-2.8-7.5-7.5-7.5-7.5 5-7.5 5-2.8-5-7.5-5-7.5 4.1-7.5 7.5-0.6 7.7 15 20z"></path></g></svg><span style="margin-left: 0.5em;">14 </span></div><div class="sc-csTaMs cpvCtp"><svg fill="currentColor" preserveAspectRatio="xMidYMid meet" height="1em" width="1em" viewBox="0 0 40 40" style="vertical-align: middle;"><g><path d="m35 5c0-2.8-2.2-5-5-5s-5 2.2-5 5c0 1.8 1 3.5 2.5 4.3v4.2l-7.5 8.3-7.5-8.3v-4.2c1.5-0.8 2.5-2.4 2.5-4.3 0-2.8-2.2-5-5-5s-5 2.2-5 5c0 1.8 1 3.5 2.5 4.3v6.1l10 11v4.3c-1.5 0.9-2.5 2.5-2.5 4.3 0 2.8 2.2 5 5 5s5-2.2 5-5c0-1.8-1-3.4-2.5-4.3v-4.3l10-11v-6.1c1.5-0.8 2.5-2.4 2.5-4.3z m-25-2.5c1.3 0 2.4 1.1 2.4 2.5s-1.1 2.4-2.4 2.4-2.4-1.1-2.4-2.4 1.1-2.5 2.4-2.5z m10 34.8c-1.3 0-2.4-1-2.4-2.4s1.1-2.4 2.4-2.4 2.4 1.1 2.4 2.4-1.1 2.4-2.4 2.4z m10-34.8c1.3 0 2.4 1.1 2.4 2.5s-1.1 2.4-2.4 2.4-2.4-1.1-2.4-2.4 1.1-2.5 2.4-2.5z"></path></g></svg><span style="margin-left: 0.5em;">905 </span></div></div><a href="https://codesandbox.io/s/github/reduxjs/redux-essentials-example-app/tree/checkpoint-4-entitySlices/?from-embed" target="_blank" rel="noreferrer noopener" class="elements__Button-zwo3qx-4 dkNwWh">Edit Sandbox</a></div></div></section><section><div class="elements__Header-sc-1ntk86q-1 gCYlQF"><svg width="9" height="6" viewBox="0 0 9 6" xmlns="http://www.w3.org/2000/svg" open="" class="elements__Icon-sc-1ntk86q-3 csnFNZ"><path d="M4.50009 6L-5.24537e-07 1.26364e-06L9 4.76837e-07L4.50009 6Z" fill="currentcolor"></path></svg><div class="elements__Title-sc-1ntk86q-2 hGmdjR">Files</div></div><div class="elements__Body-sc-1ntk86q-0 kynCge"><div><div class="elements__FileContainer-fo4phb-0 fUNrYM"><span class="elements__IconContainer-fo4phb-1 bvSKGG"><svg width="32" height="32" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path d="M15.6674 9.70666L15.8096 9.83333H16H26C26.2761 9.83333 26.5 10.0572 26.5 10.3333V25C26.5 25.2761 26.2761 25.5 26 25.5H6C5.72386 25.5 5.5 25.2761 5.5 25V8C5.5 7.72386 5.72386 7.5 6 7.5H13.0001C13.1228 7.5 13.2411 7.54508 13.3327 7.62667L15.6674 9.70666Z" fill="#64D2FF" stroke="#64D2FF"></path></svg></span><span class="elements__FileName-fo4phb-2 fIZoBs">public</span></div><div class="elements__FileContainer-fo4phb-0 fUNrYM"><span class="elements__IconContainer-fo4phb-1 bvSKGG"><svg width="32" height="32" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path d="M15.6674 9.70666L15.8096 9.83333H16H26C26.2761 9.83333 26.5 10.0572 26.5 10.3333V25C26.5 25.2761 26.2761 25.5 26 25.5H6C5.72386 25.5 5.5 25.2761 5.5 25V8C5.5 7.72386 5.72386 7.5 6 7.5H13.0001C13.1228 7.5 13.2411 7.54508 13.3327 7.62667L15.6674 9.70666Z" fill="#64D2FF" stroke="#64D2FF"></path></svg></span><span class="elements__FileName-fo4phb-2 fIZoBs">src</span></div><div><div class="elements__FileContainer-fo4phb-0 gzolUt"><span class="elements__IconContainer-fo4phb-1 bvSKGG"><svg width="32" height="32" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path d="M15.6674 9.70666L15.8096 9.83333H16H26C26.2761 9.83333 26.5 10.0572 26.5 10.3333V25C26.5 25.2761 26.2761 25.5 26 25.5H6C5.72386 25.5 5.5 25.2761 5.5 25V8C5.5 7.72386 5.72386 7.5 6 7.5H13.0001C13.1228 7.5 13.2411 7.54508 13.3327 7.62667L15.6674 9.70666Z" fill="#64D2FF" stroke="#64D2FF"></path></svg></span><span class="elements__FileName-fo4phb-2 fIZoBs">api</span></div><div class="elements__FileContainer-fo4phb-0 gzolUt"><span class="elements__IconContainer-fo4phb-1 bvSKGG"><svg width="32" height="32" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path d="M15.6674 9.70666L15.8096 9.83333H16H26C26.2761 9.83333 26.5 10.0572 26.5 10.3333V25C26.5 25.2761 26.2761 25.5 26 25.5H6C5.72386 25.5 5.5 25.2761 5.5 25V8C5.5 7.72386 5.72386 7.5 6 7.5H13.0001C13.1228 7.5 13.2411 7.54508 13.3327 7.62667L15.6674 9.70666Z" fill="#64D2FF" stroke="#64D2FF"></path></svg></span><span class="elements__FileName-fo4phb-2 fIZoBs">app</span></div><div class="elements__FileContainer-fo4phb-0 gzolUt"><span class="elements__IconContainer-fo4phb-1 bvSKGG"><svg width="32" height="32" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path d="M15.6674 9.70666L15.8096 9.83333H16H26C26.2761 9.83333 26.5 10.0572 26.5 10.3333V25C26.5 25.2761 26.2761 25.5 26 25.5H6C5.72386 25.5 5.5 25.2761 5.5 25V8C5.5 7.72386 5.72386 7.5 6 7.5H13.0001C13.1228 7.5 13.2411 7.54508 13.3327 7.62667L15.6674 9.70666Z" fill="#64D2FF" stroke="#64D2FF"></path></svg></span><span class="elements__FileName-fo4phb-2 fIZoBs">components</span></div><div class="elements__FileContainer-fo4phb-0 gzolUt"><span class="elements__IconContainer-fo4phb-1 bvSKGG"><svg width="32" height="32" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path d="M15.6674 9.70666L15.8096 9.83333H16H26C26.2761 9.83333 26.5 10.0572 26.5 10.3333V25C26.5 25.2761 26.2761 25.5 26 25.5H6C5.72386 25.5 5.5 25.2761 5.5 25V8C5.5 7.72386 5.72386 7.5 6 7.5H13.0001C13.1228 7.5 13.2411 7.54508 13.3327 7.62667L15.6674 9.70666Z" fill="#64D2FF" stroke="#64D2FF"></path></svg></span><span class="elements__FileName-fo4phb-2 fIZoBs">features</span></div><div class="elements__FileContainer-fo4phb-0 gGPdQa"><span class="elements__IconContainer-fo4phb-1 bvSKGG"><div class="elements__Container-sc-68w6ke-0 jXPyLW"><span height="16" width="16" class="elements__SVGIcon-sc-68w6ke-2 ikHSyg"></span></div></span><span class="elements__FileName-fo4phb-2 fIZoBs">App.js</span></div><div class="elements__FileContainer-fo4phb-0 gzolUt"><span class="elements__IconContainer-fo4phb-1 bvSKGG"><div class="elements__Container-sc-68w6ke-0 jXPyLW"><span height="16" width="16" class="elements__SVGIcon-sc-68w6ke-2 gahmKg"></span></div></span><span class="elements__FileName-fo4phb-2 fIZoBs">index.css</span></div><div class="elements__FileContainer-fo4phb-0 gzolUt"><span class="elements__IconContainer-fo4phb-1 bvSKGG"><div class="elements__Container-sc-68w6ke-0 jXPyLW"><span height="16" width="16" class="elements__SVGIcon-sc-68w6ke-2 ikHSyg"></span></div></span><span class="elements__FileName-fo4phb-2 fIZoBs">index.js</span></div><div class="elements__FileContainer-fo4phb-0 gzolUt"><span class="elements__IconContainer-fo4phb-1 bvSKGG"><div class="elements__Container-sc-68w6ke-0 jXPyLW"><span height="16" width="16" class="elements__SVGIcon-sc-68w6ke-2 ikHSyg"></span></div></span><span class="elements__FileName-fo4phb-2 fIZoBs">setupTests.js</span></div></div><div class="elements__FileContainer-fo4phb-0 fUNrYM"><span class="elements__IconContainer-fo4phb-1 bvSKGG"><div class="elements__Container-sc-68w6ke-0 jXPyLW"><span height="16" width="16" class="elements__SVGIcon-sc-68w6ke-2 hIacXB"></span></div></span><span class="elements__FileName-fo4phb-2 fIZoBs">.gitignore</span></div><div class="elements__FileContainer-fo4phb-0 fUNrYM"><span class="elements__IconContainer-fo4phb-1 bvSKGG"><div class="elements__Container-sc-68w6ke-0 jXPyLW"><span height="16" width="16" class="elements__SVGIcon-sc-68w6ke-2 hkzuhJ"></span></div></span><span class="elements__FileName-fo4phb-2 fIZoBs">README.md</span></div><div class="elements__FileContainer-fo4phb-0 fUNrYM"><span class="elements__IconContainer-fo4phb-1 bvSKGG"><div class="elements__Container-sc-68w6ke-0 jXPyLW"><span height="16" width="16" class="elements__SVGIcon-sc-68w6ke-2 iMbzpk"></span></div></span><span class="elements__FileName-fo4phb-2 fIZoBs">package.json</span></div><div class="elements__FileContainer-fo4phb-0 fUNrYM"><span class="elements__IconContainer-fo4phb-1 bvSKGG"><div class="elements__Container-sc-68w6ke-0 jXPyLW"><span height="16" width="16" class="elements__SVGIcon-sc-68w6ke-2 ikHSyg"></span></div></span><span class="elements__FileName-fo4phb-2 fIZoBs">prettier.config.js</span></div></div></div></section><section><div class="elements__Header-sc-1ntk86q-1 gCYlQF"><svg width="9" height="6" viewBox="0 0 9 6" xmlns="http://www.w3.org/2000/svg" open="" class="elements__Icon-sc-1ntk86q-3 csnFNZ"><path d="M4.50009 6L-5.24537e-07 1.26364e-06L9 4.76837e-07L4.50009 6Z" fill="currentcolor"></path></svg><div class="elements__Title-sc-1ntk86q-2 hGmdjR">Dependencies</div></div><div class="elements__Body-sc-1ntk86q-0 kynCge"><div class="elements__Container-ndjlbr-0 iZGWtZ"><div class="elements__Row-ndjlbr-1 vYOIx"><a href="https://codesandbox.io/examples/package/@mswjs/data" target="_blank" class="elements__Link-ndjlbr-2 fnxasz">@mswjs/data</a><span>^0.8.4</span></div><div class="elements__Row-ndjlbr-1 vYOIx"><a href="https://codesandbox.io/examples/package/@reduxjs/toolkit" target="_blank" class="elements__Link-ndjlbr-2 fnxasz">@reduxjs/toolkit</a><span>^1.6.1</span></div><div class="elements__Row-ndjlbr-1 vYOIx"><a href="https://codesandbox.io/examples/package/@testing-library/jest-dom" target="_blank" class="elements__Link-ndjlbr-2 fnxasz">@testing-library/jest-dom</a><span>^5.16.1</span></div><div class="elements__Row-ndjlbr-1 vYOIx"><a href="https://codesandbox.io/examples/package/@testing-library/react" target="_blank" class="elements__Link-ndjlbr-2 fnxasz">@testing-library/react</a><span>^12.1.2</span></div><div class="elements__Row-ndjlbr-1 vYOIx"><a href="https://codesandbox.io/examples/package/@testing-library/user-event" target="_blank" class="elements__Link-ndjlbr-2 fnxasz">@testing-library/user-event</a><span>^13.5.0</span></div><div class="elements__Row-ndjlbr-1 vYOIx"><a href="https://codesandbox.io/examples/package/classnames" target="_blank" class="elements__Link-ndjlbr-2 fnxasz">classnames</a><span>^2.2.6</span></div><div class="elements__Row-ndjlbr-1 vYOIx"><a href="https://codesandbox.io/examples/package/date-fns" target="_blank" class="elements__Link-ndjlbr-2 fnxasz">date-fns</a><span>^2.12.0</span></div><div class="elements__Row-ndjlbr-1 vYOIx"><a href="https://codesandbox.io/examples/package/faker" target="_blank" class="elements__Link-ndjlbr-2 fnxasz">faker</a><span>^4.1.0</span></div><div class="elements__Row-ndjlbr-1 vYOIx"><a href="https://codesandbox.io/examples/package/miragejs" target="_blank" class="elements__Link-ndjlbr-2 fnxasz">miragejs</a><span>^0.1.35</span></div><div class="elements__Row-ndjlbr-1 vYOIx"><a href="https://codesandbox.io/examples/package/mock-socket" target="_blank" class="elements__Link-ndjlbr-2 fnxasz">mock-socket</a><span>^9.0.3</span></div><div class="elements__Row-ndjlbr-1 vYOIx"><a href="https://codesandbox.io/examples/package/msw" target="_blank" class="elements__Link-ndjlbr-2 fnxasz">msw</a><span>^0.36.3</span></div><div class="elements__Row-ndjlbr-1 vYOIx"><a href="https://codesandbox.io/examples/package/react" target="_blank" class="elements__Link-ndjlbr-2 fnxasz">react</a><span>^17</span></div><div class="elements__Row-ndjlbr-1 vYOIx"><a href="https://codesandbox.io/examples/package/react-dom" target="_blank" class="elements__Link-ndjlbr-2 fnxasz">react-dom</a><span>^17</span></div><div class="elements__Row-ndjlbr-1 vYOIx"><a href="https://codesandbox.io/examples/package/react-redux" target="_blank" class="elements__Link-ndjlbr-2 fnxasz">react-redux</a><span>^7.2.4</span></div><div class="elements__Row-ndjlbr-1 vYOIx"><a href="https://codesandbox.io/examples/package/react-router-dom" target="_blank" class="elements__Link-ndjlbr-2 fnxasz">react-router-dom</a><span>^5.1.2</span></div><div class="elements__Row-ndjlbr-1 vYOIx"><a href="https://codesandbox.io/examples/package/react-scripts" target="_blank" class="elements__Link-ndjlbr-2 fnxasz">react-scripts</a><span>^4</span></div><div class="elements__Row-ndjlbr-1 vYOIx"><a href="https://codesandbox.io/examples/package/seedrandom" target="_blank" class="elements__Link-ndjlbr-2 fnxasz">seedrandom</a><span>^3.0.5</span></div><div class="elements__Row-ndjlbr-1 vYOIx"><a href="https://codesandbox.io/examples/package/txtgen" target="_blank" class="elements__Link-ndjlbr-2 fnxasz">txtgen</a><span>^2.2.4</span></div></div></div></section><section hidden=""><div class="elements__Header-sc-1ntk86q-1 gCYlQF"><svg width="9" height="6" viewBox="0 0 9 6" xmlns="http://www.w3.org/2000/svg" class="elements__Icon-sc-1ntk86q-3 iczSKT"><path d="M4.50009 6L-5.24537e-07 1.26364e-06L9 4.76837e-07L4.50009 6Z" fill="currentcolor"></path></svg><div class="elements__Title-sc-1ntk86q-2 hGmdjR">External Resources</div></div></section></div><div class="elements__Moving-vemxx9-2 jAjDUG"><div class="elements__Container-vemxx9-0 bHGJPc"><div style="flex-direction: row;" class="elements__Container-sc-17vifkg-0 cZVozK"><div class="elements__Container-sc-8b6s89-0 iSNDZR"><div class="elements__Container-sc-11wxdzz-0 ffOhGL"><a target="_blank" rel="noopener noreferrer" href="https://codesandbox.io/s/github/reduxjs/redux-essentials-example-app/tree/checkpoint-4-entitySlices/?from-embed" class="elements__Button-sc-11wxdzz-1 etDVGL">Open Sandbox</a></div><div class="SplitPane  vertical " style="display: flex; flex: 1 1 0%; height: 100%; position: absolute; outline: none; overflow: hidden; user-select: text; flex-direction: row; left: 0px; right: 0px;"><div class="Pane vertical Pane1  " style="flex: 0 0 auto; position: relative; outline: none; width: 0px;"><div class="elements__PaneContainer-sc-8b6s89-1 dSNpeq"><div class="elements__Tabs-sc-17vifkg-1 hldwup"><button class="elements__MenuInTabs-sc-17vifkg-2 gdePSr"><svg width="13" height="9" viewBox="0 0 13 9" fill="none" xmlns="http://www.w3.org/2000/svg" class="elements__MenuIcon-t6f098-7 jQyhjn"><path fill-rule="evenodd" clip-rule="evenodd" d="M12.3105 1H0.124207V0H12.3105V1ZM12.3105 4.50072H0.124207V3.50072H12.3105V4.50072ZM0.124207 8.00141H12.3105V7.00141H0.124207V8.00141Z" fill="currentcolor"></path></svg></button><div style="height: calc(100% - 1px);"><div class="elements__Container-sc-1hl7sj6-0 fYUKdU"><div class="elements__TabTitle-sc-1hl7sj6-1 kpFrzL">App.js</div><svg fill="currentColor" preserveAspectRatio="xMidYMid meet" height="1em" width="1em" viewBox="0 0 40 40" class="elements__StyledCloseIcon-sc-1hl7sj6-3-Component jqozZq" style="vertical-align: middle;"><g><path d="m10 20c0-5.5 4.5-10 10-10 5.5 0 10 4.5 10 10s-4.5 10-10 10c-5.5 0-10-4.5-10-10z"></path></g></svg></div></div></div><div style="position: relative; width: 100%; height: 100%;"><div style="height: 100%; width: 100%; position: absolute; inset: 0px;"><div class="elements__Container-sc-1pg7mlf-0 dAhIBN"><div class="elements__CodeContainer-sc-1pg7mlf-1 cEJALq"><div style="height: 100%; font-size: 14px;"><div class="CodeMirror cm-s-oceanic"><div style="overflow: hidden; position: relative; width: 3px; height: 0px;"><textarea style="position: absolute; bottom: -1em; padding: 0px; width: 1px; height: 1em; outline: none;" autocorrect="off" autocapitalize="none" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" tabindex="-1" cm-not-content="true" style="display: block; bottom: 0px; width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 1084px;"></div></div><div class="CodeMirror-hscrollbar" tabindex="-1" cm-not-content="true" style="display: block; right: 0px; left: 29px; height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 631px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 29px; margin-bottom: 0px; border-right-width: 30px; min-width: 662.2px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative;"><div class="CodeMirror-lines" role="presentation"><div style="position: relative; outline: none;" role="presentation"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"><pre class="CodeMirror-line" role="presentation"><span role="presentation"><span class="cm-keyword">import</span> { <span class="cm-def">NotificationsList</span> } <span class="cm-keyword">from</span> <span class="cm-string">'./features/notifications/NotificationsList'</span></span></pre></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"></div><div class="CodeMirror-code" role="presentation"></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent;"></div><div class="CodeMirror-gutters"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div><div class="CodeMirror-gutter CodeMirror-foldgutter"></div></div></div></div></div></div></div></div></div></div></div><span role="presentation" class="Resizer vertical "></span><div class="Pane vertical Pane2  " style="flex: 1 1 0%; position: relative; outline: none;"><div class="elements__PaneContainer-sc-8b6s89-1 dSNpeq"><div style="background: rgb(19, 19, 19); cursor: pointer;" class="sc-FRqcf dXpstt"><div class="sc-bdnylx ceiINy"><div class="sc-fXazxj geDMnu"><div class="cube"><div class="sides"><div class="top"></div><div class="right"></div><div class="bottom"></div><div class="left"></div><div class="front"></div><div class="back"></div></div><div class="play"></div></div><div class="sc-dvXXZy eqfPow">Click to Run</div></div></div></div></div></div></div></div></div></div></div></div></div><script src="a_data/vendors~app~embed~sandbox~sandbox-startup.7424373eb.chunk.js" crossorigin="anonymous"></script><script src="a_data/common-sandbox.3ebecc6b7.chunk.js" crossorigin="anonymous"></script><script src="a_data/0.2455d7681.chunk.js"></script><script src="a_data/vendors~app~embed~sandbox-startup.b754f8b0e.chunk.js" crossorigin="anonymous"></script><script src="a_data/common.ab3c7e841.chunk.js"></script><script type="text/javascript" id="">(function(f,c){function k(a,g){a.prototype[g]=function(){this._q.push([g].concat(Array.prototype.slice.call(arguments,0)));return this}}function l(a){function g(m){a[m]=function(){a._q.push([m].concat(Array.prototype.slice.call(arguments,0)))}}for(var h=0;h<n.length;h++)g(n[h])}var d=f.amplitude||{_q:[],_iq:{}},b=c.createElement("script");b.type="text/javascript";b.integrity="sha384-cukXwabQy+j/QA1+RqiXSzxhgQg5Rrn3zVszlwH3pWj/bXJxlA8Ge7NhcD6vP2Ik";b.crossOrigin="anonymous";b.async=!0;b.src="https://cdn.amplitude.com/libs/amplitude-7.1.0-min.gz.js";
b.onload=function(){f.amplitude.runQueuedFunctions||console.log("[Amplitude] Error: could not load SDK")};c=c.getElementsByTagName("script")[0];c.parentNode.insertBefore(b,c);b=function(){this._q=[];return this};c="add append clearAll prepend set setOnce unset".split(" ");for(var e=0;e<c.length;e++)k(b,c[e]);d.Identify=b;b=function(){this._q=[];return this};c=["setProductId","setQuantity","setPrice","setRevenueType","setEventProperties"];for(e=0;e<c.length;e++)k(b,c[e]);d.Revenue=b;var n="init logEvent logRevenue setUserId setUserProperties setOptOut setVersionName setDomain setDeviceId enableTracking setGlobalUserProperties identify clearUserProperties setGroup logRevenueV2 regenerateDeviceId groupIdentify onInit logEventWithTimestamp logEventWithGroups setSessionId resetSessionId".split(" ");
l(d);d.getInstance=function(a){a=(a&&0!==a.length?a:"$default_instance").toLowerCase();d._iq.hasOwnProperty(a)||(d._iq[a]={_q:[]},l(d._iq[a]));return d._iq[a]};f.amplitude=d})(window,document);var path=location.pathname+location.search;
amplitude.getInstance().init("a205ed9b06a7baf5a594bdd30293aa80",void 0,{logLevel:"ERROR",includeReferrer:!0,includeUtm:!0,apiEndpoint:"stats.codesandbox.io"},function(){var f=!1;try{f=window.location!==window.parent.location}catch(c){}setTimeout(function(){amplitude.logEvent("pageview",{path:path,isInIframe:f})})});</script><script src="a_data/vendors~embed.a4c58c49b.chunk.js"></script><script src="a_data/default~app~embed~sandbox~sandbox-startup.9bc169785.chunk.js" crossorigin="anonymous"></script><script src="a_data/default~app~embed~sandbox.f7edb1db5.chunk.js" crossorigin="anonymous"></script><script src="a_data/default~app~embed.a115a8ad8.chunk.js"></script><script src="a_data/embed.657d3ec68.js"></script><script defer="defer" src="a_data/vaafb692b2aea4879b33c060e79fe94621666317369993" integrity="sha512-0ahDYl866UMhKuYcW078ScMalXqtFJggm7TmlUtp0UlD4eQk0Ixfnm5ykXKvGJNFjLMoortdseTfsRT8oCfgGA==" data-cf-beacon="{&quot;rayId&quot;:&quot;7a54a2c92b449cd9&quot;,&quot;token&quot;:&quot;7449176f14aa420c959831edd48bd5b7&quot;,&quot;version&quot;:&quot;2023.2.0&quot;,&quot;si&quot;:100}" crossorigin="anonymous"></script>
</body></html>