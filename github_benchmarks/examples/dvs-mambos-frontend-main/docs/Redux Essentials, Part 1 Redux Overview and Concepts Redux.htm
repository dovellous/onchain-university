<!DOCTYPE html>
<html dir="ltr" class="docs-wrapper docs-doc-page docs-version-current plugin-docs plugin-id-default docs-doc-id-tutorials/essentials/part-1-overview-concepts" data-theme="light" data-rh="lang,dir,class" lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta charset="UTF-8">
<meta name="generator" content="Docusaurus v2.2.0">
<title>Redux Essentials, Part 1: Redux Overview and Concepts | Redux</title><meta data-rh="true" property="og:image" content="https://redux.js.org/img/redux-logo-landscape.png"><meta data-rh="true" name="twitter:image" content="https://redux.js.org/img/redux-logo-landscape.png"><meta data-rh="true" name="docusaurus_locale" content="en"><meta data-rh="true" name="docsearch:language" content="en"><meta data-rh="true" name="twitter:card" content="summary"><meta data-rh="true" name="docusaurus_version" content="current"><meta data-rh="true" name="docusaurus_tag" content="docs-default-current"><meta data-rh="true" name="docsearch:version" content="current"><meta data-rh="true" name="docsearch:docusaurus_tag" content="docs-default-current"><link data-rh="true" rel="icon" href="https://redux.js.org/img/favicon/favicon.ico"><link data-rh="true" rel="preconnect" href="https://yuqhc5ocw0-dsn.algolia.net/" crossorigin="anonymous"><link rel="preconnect" href="https://www.google-analytics.com/">
<script>window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)},ga.l=+new Date,ga("create","UA-130598673-1","auto"),ga("send","pageview")</script>
<script async="" src="Redux%20Essentials,%20Part%201%20Redux%20Overview%20and%20Concepts%20Redux_files/analytics.js"></script>


<link rel="search" type="application/opensearchdescription+xml" title="Redux" href="https://redux.js.org/opensearch.xml"><link rel="stylesheet" href="Redux%20Essentials,%20Part%201%20Redux%20Overview%20and%20Concepts%20Redux_files/styles.68aab04a.css">
<link rel="preload" href="Redux%20Essentials,%20Part%201%20Redux%20Overview%20and%20Concepts%20Redux_files/runtime~main.c942408f.js" as="script">
<link rel="preload" href="Redux%20Essentials,%20Part%201%20Redux%20Overview%20and%20Concepts%20Redux_files/main.aecab9b3.js" as="script">
<meta name="viewport" content="width=device-width, initial-scale=1.0" data-rh="true"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/5d5abd3d.d7668199.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/6cf0a46d.945b4e52.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/cc5eedff.76fb09ca.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/83a94416.645b5912.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/8281e42f.706502fd.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b01a8152.a9793f7f.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/f14fd549.88b64dda.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/7005c2b0.f5e47935.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b67e346f.2f0703c9.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/0df8a05e.dfd17607.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1a9771aa.5f6e8f6a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/41f6d251.3efee4af.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/5ab55e80.52304307.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/11938ad8.569e3126.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/fa5fc421.0c27899b.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/f81b1e43.90be1e54.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/052f08fe.c4dedf93.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/93a592e4.3dc3a860.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/385bf224.f7e7ff01.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/3fb85e0e.66347311.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1f172ca5.5bcbf8de.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/3573ab49.821b5b73.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/eec52e28.fe7ad114.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/4244f4d4.9c7dab28.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/0ee6ee39.7cba0cd1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/17896441.09b17157.js"><link rel="prefetch" href="https://redux.js.org/assets/js/664b7567.0f0176c9.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="prefetch" href="https://redux.js.org/assets/js/c4f5d8e4.69b6bdf4.js"><link rel="prefetch" href="https://redux.js.org/assets/js/b05b1389.8da79438.js"><link rel="prefetch" href="https://redux.js.org/assets/js/1be78505.16c2c5c1.js"><link rel="prefetch" href="https://redux.js.org/assets/js/a62804cc.15f99eaa.js"><link rel="prefetch" href="https://redux.js.org/assets/js/935f2afb.c6b5808a.js"><link rel="canonical" href="https://redux.js.org/tutorials/essentials/part-1-overview-concepts" data-rh="true"><link rel="alternate" href="https://redux.js.org/tutorials/essentials/part-1-overview-concepts" hreflang="en" data-rh="true"><link rel="alternate" href="https://redux.js.org/tutorials/essentials/part-1-overview-concepts" hreflang="x-default" data-rh="true"><meta property="og:url" content="https://redux.js.org/tutorials/essentials/part-1-overview-concepts" data-rh="true"><meta property="og:title" content="Redux Essentials, Part 1: Redux Overview and Concepts | Redux" data-rh="true"><meta name="description" content="The official Essentials tutorial for Redux: learn how to use Redux, the right way" data-rh="true"><meta property="og:description" content="The official Essentials tutorial for Redux: learn how to use Redux, the right way" data-rh="true"></head>
<body class="navigation-with-keyboard" data-rh="class" style="overflow: visible;">
<script>!function(){function t(t){document.documentElement.setAttribute("data-theme",t)}var e=function(){var t=null;try{t=localStorage.getItem("theme")}catch(t){}return t}();t(null!==e?e:"light")}()</script><div id="__docusaurus"><div role="region" aria-label="Skip to main content"><a class="skipToContent_fXgn" href="#docusaurus_skipToContent_fallback">Skip to main content</a></div><nav class="navbar navbar--fixed-top"><div class="navbar__inner"><div class="navbar__items"><button aria-label="Toggle navigation bar" aria-expanded="false" class="navbar__toggle clean-btn" type="button"><svg width="30" height="30" viewBox="0 0 30 30" aria-hidden="true"><path stroke="currentColor" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" d="M4 7h22M4 15h22M4 23h22"></path></svg></button><a class="navbar__brand" href="https://redux.js.org/"><div class="navbar__logo"><img src="Redux%20Essentials,%20Part%201%20Redux%20Overview%20and%20Concepts%20Redux_files/redux.svg" alt="Redux Logo" class="themedImage_ToTc themedImage--light_HNdA"></div><b class="navbar__title text--truncate">Redux</b></a></div><div class="navbar__items navbar__items--right"><a class="navbar__item navbar__link" href="https://redux.js.org/introduction/getting-started">Getting Started</a><a class="navbar__item navbar__link navbar__link--active" href="https://redux.js.org/tutorials/essentials/part-1-overview-concepts" aria-current="page">Tutorial</a><a aria-current="page" class="navbar__item navbar__link navbar__link--active" href="https://redux.js.org/usage/">Usage Guide</a><a aria-current="page" class="navbar__item navbar__link navbar__link--active" href="https://redux.js.org/api/api-reference">API</a><a class="navbar__item navbar__link" href="https://redux.js.org/faq">FAQ</a><a aria-current="page" class="navbar__item navbar__link navbar__link--active" href="https://redux.js.org/style-guide/">Best Practices</a><a href="https://www.github.com/reduxjs/redux" target="_blank" rel="noopener noreferrer" class="navbar__item navbar__link">GitHub<svg width="13.5" height="13.5" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_nPIU"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a><a class="navbar__item navbar__link" href="https://redux.js.org/introduction/getting-started#help-and-discussion">Need help?</a><div class="toggle_vylO colorModeToggle_DEke"><button class="clean-btn toggleButton_gllP" type="button" title="Switch between dark and light mode (currently light mode)" aria-label="Switch between dark and light mode (currently light mode)" aria-live="polite"><svg viewBox="0 0 24 24" width="24" height="24" class="lightToggleIcon_pyhR"><path fill="currentColor" d="M12,9c1.65,0,3,1.35,3,3s-1.35,3-3,3s-3-1.35-3-3S10.35,9,12,9 M12,7c-2.76,0-5,2.24-5,5s2.24,5,5,5s5-2.24,5-5 S14.76,7,12,7L12,7z M2,13l2,0c0.55,0,1-0.45,1-1s-0.45-1-1-1l-2,0c-0.55,0-1,0.45-1,1S1.45,13,2,13z M20,13l2,0c0.55,0,1-0.45,1-1 s-0.45-1-1-1l-2,0c-0.55,0-1,0.45-1,1S19.45,13,20,13z M11,2v2c0,0.55,0.45,1,1,1s1-0.45,1-1V2c0-0.55-0.45-1-1-1S11,1.45,11,2z M11,20v2c0,0.55,0.45,1,1,1s1-0.45,1-1v-2c0-0.55-0.45-1-1-1C11.45,19,11,19.45,11,20z M5.99,4.58c-0.39-0.39-1.03-0.39-1.41,0 c-0.39,0.39-0.39,1.03,0,1.41l1.06,1.06c0.39,0.39,1.03,0.39,1.41,0s0.39-1.03,0-1.41L5.99,4.58z M18.36,16.95 c-0.39-0.39-1.03-0.39-1.41,0c-0.39,0.39-0.39,1.03,0,1.41l1.06,1.06c0.39,0.39,1.03,0.39,1.41,0c0.39-0.39,0.39-1.03,0-1.41 L18.36,16.95z M19.42,5.99c0.39-0.39,0.39-1.03,0-1.41c-0.39-0.39-1.03-0.39-1.41,0l-1.06,1.06c-0.39,0.39-0.39,1.03,0,1.41 s1.03,0.39,1.41,0L19.42,5.99z M7.05,18.36c0.39-0.39,0.39-1.03,0-1.41c-0.39-0.39-1.03-0.39-1.41,0l-1.06,1.06 c-0.39,0.39-0.39,1.03,0,1.41s1.03,0.39,1.41,0L7.05,18.36z"></path></svg><svg viewBox="0 0 24 24" width="24" height="24" class="darkToggleIcon_wfgR"><path fill="currentColor" d="M9.37,5.51C9.19,6.15,9.1,6.82,9.1,7.5c0,4.08,3.32,7.4,7.4,7.4c0.68,0,1.35-0.09,1.99-0.27C17.45,17.19,14.93,19,12,19 c-3.86,0-7-3.14-7-7C5,9.07,6.81,6.55,9.37,5.51z M12,3c-4.97,0-9,4.03-9,9s4.03,9,9,9s9-4.03,9-9c0-0.46-0.04-0.92-0.1-1.36 c-0.98,1.37-2.58,2.26-4.4,2.26c-2.98,0-5.4-2.42-5.4-5.4c0-1.81,0.89-3.42,2.26-4.4C12.92,3.04,12.46,3,12,3L12,3z"></path></svg></button></div><div class="searchBox_ZlJk"><button type="button" class="DocSearch DocSearch-Button" aria-label="Search"><span class="DocSearch-Button-Container"><svg width="20" height="20" class="DocSearch-Search-Icon" viewBox="0 0 20 20"><path d="M14.386 14.386l4.0877 4.0877-4.0877-4.0877c-2.9418 2.9419-7.7115 2.9419-10.6533 0-2.9419-2.9418-2.9419-7.7115 0-10.6533 2.9418-2.9419 7.7115-2.9419 10.6533 0 2.9419 2.9418 2.9419 7.7115 0 10.6533z" stroke="currentColor" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"></path></svg><span class="DocSearch-Button-Placeholder">Search</span></span><span class="DocSearch-Button-Keys"><kbd class="DocSearch-Button-Key"><svg width="15" height="15" class="DocSearch-Control-Key-Icon"><path d="M4.505 4.496h2M5.505 5.496v5M8.216 4.496l.055 5.993M10 7.5c.333.333.5.667.5 1v2M12.326 4.5v5.996M8.384 4.496c1.674 0 2.116 0 2.116 1.5s-.442 1.5-2.116 1.5M3.205 9.303c-.09.448-.277 1.21-1.241 1.203C1 10.5.5 9.513.5 8V7c0-1.57.5-2.5 1.464-2.494.964.006 1.134.598 1.24 1.342M12.553 10.5h1.953" stroke-width="1.2" stroke="currentColor" fill="none" stroke-linecap="square"></path></svg></kbd><kbd class="DocSearch-Button-Key">K</kbd></span></button></div></div></div><div role="presentation" class="navbar-sidebar__backdrop"></div></nav><div id="docusaurus_skipToContent_fallback" class="main-wrapper mainWrapper_z2l0 docsWrapper_BCFX"><button aria-label="Scroll back to top" class="clean-btn theme-back-to-top-button backToTopButton_sjWU" type="button"></button><div class="docPage__5DB"><aside class="theme-doc-sidebar-container docSidebarContainer_b6E3"><div class="sidebar_njMd"><nav class="menu thin-scrollbar menu_SIkG"><ul class="theme-doc-sidebar-menu menu__list"><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a href="#" class="menu__link menu__link--sublist menu__link--sublist-caret" aria-expanded="false">Introduction</a></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item"><div class="menu__list-item-collapsible"><a href="#" class="menu__link menu__link--sublist menu__link--sublist-caret menu__link--active" aria-expanded="true">Tutorials</a></div><ul style="display:block;overflow:visible;height:auto" class="menu__list"><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/index">Tutorials Index</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/quick-start">Quick Start</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/typescript-quick-start">TypeScript Quick Start</a></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-2 menu__list-item"><div class="menu__list-item-collapsible"><a href="#" class="menu__link menu__link--sublist menu__link--sublist-caret menu__link--active" aria-expanded="true" tabindex="0">Redux Essentials</a></div><ul class="menu__list" style="display: block; overflow: visible; height: auto; will-change: height; transition: height 318ms ease-in-out 0s;"><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link menu__link--active" tabindex="0" href="https://redux.js.org/tutorials/essentials/part-1-overview-concepts" aria-current="page">Redux Overview and Concepts</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/essentials/part-2-app-structure">Redux Toolkit App Structure</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/essentials/part-3-data-flow">Basic Redux Data Flow</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/essentials/part-4-using-data">Using Redux Data</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/essentials/part-5-async-logic">Async Logic and Data Fetching</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/essentials/part-6-performance-normalization">Performance and Normalizing Data</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/essentials/part-7-rtk-query-basics">RTK Query Basics</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/essentials/part-8-rtk-query-advanced">RTK Query Advanced Patterns</a></li></ul></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-2 menu__list-item"><div class="menu__list-item-collapsible"><a href="#" class="menu__link menu__link--sublist menu__link--sublist-caret" aria-expanded="true" tabindex="0">Redux Fundamentals</a></div><ul class="menu__list" style="display: block; overflow: visible; height: auto; will-change: height; transition: height 318ms ease-in-out 0s;"><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/fundamentals/part-1-overview">Redux Overview</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/fundamentals/part-2-concepts-data-flow">Redux Concepts and Data Flow</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/fundamentals/part-3-state-actions-reducers">State, Actions, and Reducers</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/fundamentals/part-4-store">Store</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/fundamentals/part-5-ui-react">UI and React</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/fundamentals/part-6-async-logic">Async Logic and Data Fetching</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/fundamentals/part-7-standard-patterns">Standard Redux Patterns</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/fundamentals/part-8-modern-redux">Modern Redux with Redux Toolkit</a></li></ul></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/tutorials/videos">Videos</a></li></ul></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a href="#" class="menu__link menu__link--sublist menu__link--sublist-caret" aria-expanded="false">Using Redux</a></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a href="#" class="menu__link menu__link--sublist menu__link--sublist-caret" aria-expanded="false">Understanding Redux</a></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a href="#" class="menu__link menu__link--sublist menu__link--sublist-caret" aria-expanded="false">FAQ</a></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a href="#" class="menu__link menu__link--sublist menu__link--sublist-caret" aria-expanded="false">Style Guide</a></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a href="#" class="menu__link menu__link--sublist menu__link--sublist-caret" aria-expanded="false">API Reference</a></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item"><div class="menu__list-item-collapsible"><a href="#" class="menu__link menu__link--sublist menu__link--sublist-caret" aria-expanded="true">Redux Toolkit</a></div><ul class="menu__list" style="display: block; overflow: visible; height: auto; will-change: height; transition: height 190ms ease-in-out 0s;"><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="https://redux.js.org/redux-toolkit/overview">Redux Toolkit: Overview</a></li></ul></li></ul></nav></div></aside><main class="docMainContainer_gTbr"><div class="container padding-top--md padding-bottom--lg"><div class="row"><div class="col docItemCol_VOVn"><div class="docItemContainer_Djhp"><article><nav class="theme-doc-breadcrumbs breadcrumbsContainer_Z_bl" aria-label="Breadcrumbs"><ul class="breadcrumbs" itemscope="" itemtype="https://schema.org/BreadcrumbList"><li class="breadcrumbs__item"><a aria-label="Home page" class="breadcrumbs__link" href="https://redux.js.org/"><svg viewBox="0 0 24 24" class="breadcrumbHomeIcon_OVgt"><path d="M10 19v-5h4v5c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-7h1.7c.46 0 .68-.57.33-.87L12.67 3.6c-.38-.34-.96-.34-1.34 0l-8.36 7.53c-.34.3-.13.87.33.87H5v7c0 .55.45 1 1 1h3c.55 0 1-.45 1-1z" fill="currentColor"></path></svg></a></li><li class="breadcrumbs__item"><span class="breadcrumbs__link">Tutorials</span><meta itemprop="position" content="1"></li><li class="breadcrumbs__item"><span class="breadcrumbs__link">Redux Essentials</span><meta itemprop="position" content="2"></li><li itemscope="" itemprop="itemListElement" itemtype="https://schema.org/ListItem" class="breadcrumbs__item breadcrumbs__item--active"><span class="breadcrumbs__link" itemprop="name">Redux Overview and Concepts</span><meta itemprop="position" content="3"></li></ul></nav><div class="tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo"><button type="button" class="clean-btn tocCollapsibleButton_TO0P">On this page</button></div><div class="theme-doc-markdown markdown"><header><h1>Redux Essentials, Part 1: Redux Overview and Concepts</h1></header><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>What You'll Learn</div><div class="admonitionContent_S0QG"><ul class=""><li>What Redux is and why you might want to use it</li><li>Key Redux terms and concepts</li><li>How data flows through a Redux app</li></ul></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a class="hash-link" href="#introduction" title="Direct link to heading">​</a></h2><p>Welcome to the Redux Essentials tutorial! <strong>This
 tutorial will introduce you to Redux and teach you how to use it the 
right way, using our latest recommended tools and best practices</strong>.
 By the time you finish, you should be able to start building your own 
Redux applications using the tools and patterns you've learned here.</p><p>In Part 1 of this tutorial, we'll cover the key concepts and terms you need to know to use Redux, and in <a href="https://redux.js.org/tutorials/essentials/part-2-app-structure">Part 2: Redux App Structure</a> we'll examine a basic React + Redux app to see how the pieces fit together.</p><p>Starting in <a href="https://redux.js.org/tutorials/essentials/part-3-data-flow">Part 3: Basic Redux Data Flow</a>,
 we'll use that knowledge to build a small social media feed app with 
some real-world features, see how those pieces actually work in 
practice, and talk about some important patterns and guidelines for 
using Redux.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-read-this-tutorial">How to Read This Tutorial<a class="hash-link" href="#how-to-read-this-tutorial" title="Direct link to heading">​</a></h3><p>This page will focus on showing you <em>how</em>
 to use Redux the right way, and explain just enough of the concepts so 
that you can understand how to build Redux apps correctly.</p><p>We've tried to keep these explanations beginner-friendly, but we do need to make some assumptions about what you know already:</p><div class="theme-admonition theme-admonition-important alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>Prerequisites</div><div class="admonitionContent_S0QG"><ul class=""><li>Familiarity with <a href="https://internetingishard.com/" target="_blank" rel="noopener noreferrer">HTML &amp; CSS</a>.</li><li>Familiarity with <a href="https://www.taniarascia.com/es6-syntax-and-feature-overview/" target="_blank" rel="noopener noreferrer">ES6 syntax and features</a></li><li>Knowledge of React terminology: <a href="https://reactjs.org/docs/introducing-jsx.html" target="_blank" rel="noopener noreferrer">JSX</a>, <a href="https://reactjs.org/docs/state-and-lifecycle.html" target="_blank" rel="noopener noreferrer">State</a>, <a href="https://reactjs.org/docs/components-and-props.html" target="_blank" rel="noopener noreferrer">Function Components, Props</a>, and <a href="https://reactjs.org/docs/hooks-intro.html" target="_blank" rel="noopener noreferrer">Hooks</a></li><li>Knowledge of <a href="https://javascript.info/promise-basics" target="_blank" rel="noopener noreferrer">asynchronous JavaScript</a> and <a href="https://javascript.info/fetch" target="_blank" rel="noopener noreferrer">making AJAX requests</a></li></ul></div></div><p><strong>If
 you're not already comfortable with those topics, we encourage you to 
take some time to become comfortable with them first, and then come back
 to learn about Redux</strong>. We'll be here when you're ready!</p><p>You should make sure that you have the React and Redux DevTools extensions installed in your browser:</p><ul class=""><li>React DevTools Extension:<ul class=""><li><a href="https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=en" target="_blank" rel="noopener noreferrer">React DevTools Extension for Chrome</a></li><li><a href="https://addons.mozilla.org/en-US/firefox/addon/react-devtools/" target="_blank" rel="noopener noreferrer">React DevTools Extension for Firefox</a></li></ul></li><li>Redux DevTools Extension:<ul class=""><li><a href="https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd?hl=en" target="_blank" rel="noopener noreferrer">Redux DevTools Extension for Chrome</a></li><li><a href="https://addons.mozilla.org/en-US/firefox/addon/reduxdevtools/" target="_blank" rel="noopener noreferrer">Redux DevTools Extension for Firefox</a></li></ul></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-redux">What is Redux?<a class="hash-link" href="#what-is-redux" title="Direct link to heading">​</a></h2><p>It
 helps to understand what this "Redux" thing is in the first place. What
 does it do? What problems does it help me solve? Why would I want to 
use it?</p><p><strong>Redux is a pattern and library for managing and updating application state, using events called "actions".</strong>
 It serves as a centralized store for state that needs to be used across
 your entire application, with rules ensuring that the state can only be
 updated in a predictable fashion.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="why-should-i-use-redux">Why Should I Use Redux?<a class="hash-link" href="#why-should-i-use-redux" title="Direct link to heading">​</a></h3><p>Redux helps you manage "global" state - state that is needed across many parts of your application.</p><p><strong>The
 patterns and tools provided by Redux make it easier to understand when,
 where, why, and how the state in your application is being updated, and
 how your application logic will behave when those changes occur</strong>.
 Redux guides you towards writing code that is predictable and testable,
 which helps give you confidence that your application will work as 
expected.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="when-should-i-use-redux">When Should I Use Redux?<a class="hash-link" href="#when-should-i-use-redux" title="Direct link to heading">​</a></h3><p>Redux
 helps you deal with shared state management, but like any tool, it has 
tradeoffs. There are more concepts to learn, and more code to write. It 
also adds some indirection to your code, and asks you to follow certain 
restrictions. It's a trade-off between short term and long term 
productivity.</p><p>Redux is more useful when:</p><ul class=""><li>You have large amounts of application state that are needed in many places in the app</li><li>The app state is updated frequently over time</li><li>The logic to update that state may be complex</li><li>The app has a medium or large-sized codebase, and might be worked on by many people</li></ul><p><strong>Not
 all apps need Redux. Take some time to think about the kind of app 
you're building, and decide what tools would be best to help solve the 
problems you're working on.</strong></p><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>Want to Know More?</div><div class="admonitionContent_S0QG"><p>If you're not sure whether Redux is a good choice for your app, these resources give some more guidance:</p><ul class=""><li><strong><a href="https://changelog.com/posts/when-and-when-not-to-reach-for-redux" target="_blank" rel="noopener noreferrer">When (and when not) to reach for Redux</a></strong></li><li><strong><a href="https://blog.isquaredsoftware.com/2017/05/idiomatic-redux-tao-of-redux-part-1/" target="_blank" rel="noopener noreferrer">The Tao of Redux, Part 1 - Implementation and Intent</a></strong></li><li><strong><a href="https://redux.js.org/faq/general#when-should-i-use-redux">Redux FAQ: When should I use Redux?</a></strong></li><li><strong><a href="https://medium.com/@dan_abramov/you-might-not-need-redux-be46360cf367" target="_blank" rel="noopener noreferrer">You Might Not Need Redux</a></strong></li></ul></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="redux-libraries-and-tools">Redux Libraries and Tools<a class="hash-link" href="#redux-libraries-and-tools" title="Direct link to heading">​</a></h3><p>Redux is a small standalone JS library. However, it is commonly used with several other packages:</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="react-redux">React-Redux<a class="hash-link" href="#react-redux" title="Direct link to heading">​</a></h4><p>Redux can integrate with any UI framework, and is most frequently used with React. <a href="https://react-redux.js.org/" target="_blank" rel="noopener noreferrer"><strong>React-Redux</strong></a>
 is our official package that lets your React components interact with a
 Redux store by reading pieces of state and dispatching actions to 
update the store.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="redux-toolkit">Redux Toolkit<a class="hash-link" href="#redux-toolkit" title="Direct link to heading">​</a></h4><p><a href="https://redux-toolkit.js.org/" target="_blank" rel="noopener noreferrer"><strong>Redux Toolkit</strong></a>
 is our recommended approach for writing Redux logic. It contains 
packages and functions that we think are essential for building a Redux 
app. Redux Toolkit builds in our suggested best practices, simplifies 
most Redux tasks, prevents common mistakes, and makes it easier to write
 Redux applications.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="redux-devtools-extension">Redux DevTools Extension<a class="hash-link" href="#redux-devtools-extension" title="Direct link to heading">​</a></h4><p>The <a href="https://github.com/reduxjs/redux-devtools/tree/main/extension" target="_blank" rel="noopener noreferrer"><strong>Redux DevTools Extension</strong></a>
 shows a history of the changes to the state in your Redux store over 
time. This allows you to debug your applications effectively, including 
using powerful techniques like "time-travel debugging".</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="redux-terms-and-concepts">Redux Terms and Concepts<a class="hash-link" href="#redux-terms-and-concepts" title="Direct link to heading">​</a></h2><p>Before we dive into some actual code, let's talk about some of the terms and concepts you'll need to know to use Redux.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="state-management">State Management<a class="hash-link" href="#state-management" title="Direct link to heading">​</a></h3><p>Let's
 start by looking at a small React counter component. It tracks a number
 in component state, and increments the number when a button is clicked:</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword" style="color: rgb(249, 38, 114);">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color: rgb(230, 216, 116);">Counter</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token comment" style="color: rgb(198, 202, 210);">// State: a counter value</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">[</span><span class="token plain">counter</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> setCounter</span><span class="token punctuation" style="color: rgb(248, 248, 242);">]</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">useState</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token number" style="color: rgb(174, 129, 255);">0</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token comment" style="color: rgb(198, 202, 210);">// Action: code that causes an update to the state when something happens</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token function-variable function" style="color: rgb(230, 216, 116);">increment</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token function" style="color: rgb(230, 216, 116);">setCounter</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">prevCounter</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> prevCounter </span><span class="token operator" style="color: rgb(248, 248, 242);">+</span><span class="token plain"> </span><span class="token number" style="color: rgb(174, 129, 255);">1</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token comment" style="color: rgb(198, 202, 210);">// View: the UI definition</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">return</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">div</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">      Value: </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain">counter</span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain-text"> </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;</span><span class="token tag" style="color: rgb(249, 38, 114);">button</span><span class="token tag" style="color: rgb(249, 38, 114);"> </span><span class="token tag attr-name" style="color: rgb(166, 226, 46);">onClick</span><span class="token tag script language-javascript script-punctuation punctuation" style="color: rgb(248, 248, 242);">=</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token tag script language-javascript" style="color: rgb(249, 38, 114);">increment</span><span class="token tag script language-javascript punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text">Increment</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">button</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain-text">    </span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&lt;/</span><span class="token tag" style="color: rgb(249, 38, 114);">div</span><span class="token tag punctuation" style="color: rgb(248, 248, 242);">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>It is a self-contained app with the following parts:</p><ul class=""><li>The <strong>state</strong>, the source of truth that drives our app;</li><li>The <strong>view</strong>, a declarative description of the UI based on the current state</li><li>The <strong>actions</strong>, the events that occur in the app based on user input, and trigger updates in the state</li></ul><p>This is a small example of <strong>"one-way data flow"</strong>:</p><ul class=""><li>State describes the condition of the app at a specific point in time</li><li>The UI is rendered based on that state</li><li>When something happens (such as a user clicking a button), the state is updated based on what occurred</li><li>The UI re-renders based on the new state</li></ul><p><img loading="lazy" alt="One-way data flow" src="Redux%20Essentials,%20Part%201%20Redux%20Overview%20and%20Concepts%20Redux_files/one-way-data-flow-04fe46332c1ccb3497ecb04b94e55b97.png" class="img_ev3q" width="1280" height="866"></p><p>However, the simplicity can break down when we have <strong>multiple components that need to share and use the same state</strong>, especially if those components are located in different parts of the application. Sometimes this can be solved by <a href="https://reactjs.org/docs/lifting-state-up.html" target="_blank" rel="noopener noreferrer">"lifting state up"</a> to parent components, but that doesn't always help.</p><p>One
 way to solve this is to extract the shared state from the components, 
and put it into a centralized location outside the component tree. With 
this, our component tree becomes a big "view", and any component can 
access the state or trigger actions, no matter where they are in the 
tree!</p><p>By defining and separating the concepts involved in state 
management and enforcing rules that maintain independence between views 
and states, we give our code more structure and maintainability.</p><p>This
 is the basic idea behind Redux: a single centralized place to contain 
the global state in your application, and specific patterns to follow 
when updating that state to make the code predictable.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="immutability">Immutability<a class="hash-link" href="#immutability" title="Direct link to heading">​</a></h3><p>"Mutable" means "changeable". If something is "immutable", it can never be changed.</p><p>JavaScript
 objects and arrays are all mutable by default. If I create an object, I
 can change the contents of its fields. If I create an array, I can 
change the contents as well:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> obj </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"> </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">a</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token number" style="color: rgb(174, 129, 255);">1</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">b</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token number" style="color: rgb(174, 129, 255);">2</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token comment" style="color: rgb(198, 202, 210);">// still the same object outside, but the contents have changed</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">obj</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">b</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token number" style="color: rgb(174, 129, 255);">3</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> arr </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">[</span><span class="token string" style="color: rgb(166, 226, 46);">'a'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'b'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">]</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token comment" style="color: rgb(198, 202, 210);">// In the same way, we can change the contents of this array</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">arr</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">push</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token string" style="color: rgb(166, 226, 46);">'c'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">arr</span><span class="token punctuation" style="color: rgb(248, 248, 242);">[</span><span class="token number" style="color: rgb(174, 129, 255);">1</span><span class="token punctuation" style="color: rgb(248, 248, 242);">]</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'d'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This is called <em>mutating</em> the object or array. It's the same object or array reference in memory, but now the contents inside the object have changed.</p><p><strong>In order to update values immutably, your code must make <em>copies</em> of existing objects/arrays, and then modify the copies</strong>.</p><p>We
 can do this by hand using JavaScript's array / object spread operators,
 as well as array methods that return new copies of the array instead of
 mutating the original array:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> obj </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">a</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token comment" style="color: rgb(198, 202, 210);">// To safely update obj.a.c, we have to copy each piece</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">c</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token number" style="color: rgb(174, 129, 255);">3</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">b</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token number" style="color: rgb(174, 129, 255);">2</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> obj2 </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token comment" style="color: rgb(198, 202, 210);">// copy obj</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token spread operator" style="color: rgb(248, 248, 242);">...</span><span class="token plain">obj</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token comment" style="color: rgb(198, 202, 210);">// overwrite a</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">a</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token comment" style="color: rgb(198, 202, 210);">// copy obj.a</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token spread operator" style="color: rgb(248, 248, 242);">...</span><span class="token plain">obj</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">a</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token comment" style="color: rgb(198, 202, 210);">// overwrite c</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">c</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token number" style="color: rgb(174, 129, 255);">42</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> arr </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">[</span><span class="token string" style="color: rgb(166, 226, 46);">'a'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'b'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">]</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token comment" style="color: rgb(198, 202, 210);">// Create a new copy of arr, with "c" appended to the end</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> arr2 </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> arr</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">concat</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token string" style="color: rgb(166, 226, 46);">'c'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token comment" style="color: rgb(198, 202, 210);">// or, we can make a copy of the original array:</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> arr3 </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> arr</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">slice</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token comment" style="color: rgb(198, 202, 210);">// and mutate the copy:</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">arr3</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">push</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token string" style="color: rgb(166, 226, 46);">'c'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>Redux expects that all state updates are done immutably</strong>. We'll look at where and how this is important a bit later, as well as some easier ways to write immutable update logic.</p><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>Want to Know More?</div><div class="admonitionContent_S0QG"><p>For more info on how immutability works in JavaScript, see:</p><ul class=""><li><a href="https://daveceddia.com/javascript-references/" target="_blank" rel="noopener noreferrer">A Visual Guide to References in JavaScript</a></li><li><a href="https://daveceddia.com/react-redux-immutability-guide/" target="_blank" rel="noopener noreferrer">Immutability in React and Redux: The Complete Guide</a></li></ul></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="terminology">Terminology<a class="hash-link" href="#terminology" title="Direct link to heading">​</a></h3><p>There are some important Redux terms that you'll need to be familiar with before we continue:</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="actions">Actions<a class="hash-link" href="#actions" title="Direct link to heading">​</a></h4><p>An <strong>action</strong> is a plain JavaScript object that has a <code>type</code> field. <strong>You can think of an action as an event that describes something that happened in the application</strong>.</p><p>The <code>type</code> field should be a string that gives this action a descriptive name, like <code>"todos/todoAdded"</code>. We usually write that type string like <code>"domain/eventName"</code>,
 where the first part is the feature or category that this action 
belongs to, and the second part is the specific thing that happened.</p><p>An
 action object can have other fields with additional information about 
what happened. By convention, we put that information in a field called <code>payload</code>.</p><p>A typical action object might look like this:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> addTodoAction </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">type</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'todos/todoAdded'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">payload</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'Buy milk'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="action-creators">Action Creators<a class="hash-link" href="#action-creators" title="Direct link to heading">​</a></h4><p>An <strong>action creator</strong>
 is a function that creates and returns an action object. We typically 
use these so we don't have to write the action object by hand every 
time:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token function-variable function" style="color: rgb(230, 216, 116);">addTodo</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token parameter">text</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">return</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">type</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'todos/todoAdded'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">payload</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> text</span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="reducers">Reducers<a class="hash-link" href="#reducers" title="Direct link to heading">​</a></h4><p>A <strong>reducer</strong> is a function that receives the current <code>state</code> and an <code>action</code> object, decides how to update the state if necessary, and returns the new state: <code>(state, action) =&gt; newState</code>. <strong>You can think of a reducer as an event listener which handles events based on the received action (event) type.</strong></p><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_S0QG"><p>"Reducer" functions get their name because they're similar to the kind of callback function you pass to the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce" target="_blank" rel="noopener noreferrer"><code>Array.reduce()</code></a> method.</p></div></div><p>Reducers must <em>always</em> follow some specific rules:</p><ul class=""><li>They should only calculate the new state value based on the <code>state</code> and <code>action</code> arguments</li><li>They are not allowed to modify the existing <code>state</code>. Instead, they must make <em>immutable updates</em>, by copying the existing <code>state</code> and making changes to the copied values.</li><li>They must not do any asynchronous logic, calculate random values, or cause other "side effects"</li></ul><p>We'll talk more about the rules of reducers later, including why they're important and how to follow them correctly.</p><p>The logic inside reducer functions typically follows the same series of steps:</p><ul class=""><li>Check to see if the reducer cares about this action<ul class=""><li>If so, make a copy of the state, update the copy with new values, and return it</li></ul></li><li>Otherwise, return the existing state unchanged</li></ul><p>Here's a small example of a reducer, showing the steps that each reducer should follow:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> initialState </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"> </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">value</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token number" style="color: rgb(174, 129, 255);">0</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">function</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">counterReducer</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">state </span><span class="token parameter operator" style="color: rgb(248, 248, 242);">=</span><span class="token parameter"> initialState</span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token parameter"> action</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token comment" style="color: rgb(198, 202, 210);">// Check to see if the reducer cares about this action</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">if</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">action</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">type</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">===</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'counter/increment'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token comment" style="color: rgb(198, 202, 210);">// If so, make a copy of `state`</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">return</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token spread operator" style="color: rgb(248, 248, 242);">...</span><span class="token plain">state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token comment" style="color: rgb(198, 202, 210);">// and update the copy with the new value</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">      </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">value</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">value</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">+</span><span class="token plain"> </span><span class="token number" style="color: rgb(174, 129, 255);">1</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token comment" style="color: rgb(198, 202, 210);">// otherwise return the existing state unchanged</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">return</span><span class="token plain"> state</span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Reducers can use any kind of logic inside to decide what the new state should be: <code>if/else</code>, <code>switch</code>, loops, and so on.</p><details class="detailed-explanation"><summary><h4>Detailed Explanation: Why Are They Called 'Reducers?'</h4></summary><p>The <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce" target="_blank" rel="noopener noreferrer"><code>Array.reduce()</code></a>
 method lets you take an array of values, process each item in the array
 one at a time, and return a single final result. You can think of it as
 "reducing the array down to one value".</p><p><code>Array.reduce()</code> takes a callback function as an argument, which will be called one time for each item in the array. It takes two arguments:</p><ul class=""><li><code>previousResult</code>, the value that your callback returned last time</li><li><code>currentItem</code>, the current item in the array</li></ul><p>The first time that the callback runs, there isn't a <code>previousResult</code> available, so we need to also pass in an initial value that will be used as the first <code>previousResult</code>.</p><p>If
 we wanted to add together an array of numbers to find out what the 
total is, we could write a reduce callback that looks like this:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> numbers </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">[</span><span class="token number" style="color: rgb(174, 129, 255);">2</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> </span><span class="token number" style="color: rgb(174, 129, 255);">5</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> </span><span class="token number" style="color: rgb(174, 129, 255);">8</span><span class="token punctuation" style="color: rgb(248, 248, 242);">]</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token function-variable function" style="color: rgb(230, 216, 116);">addNumbers</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">previousResult</span><span class="token parameter punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token parameter"> currentItem</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token console class-name">console</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">log</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"> previousResult</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> currentItem </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">return</span><span class="token plain"> previousResult </span><span class="token operator" style="color: rgb(248, 248, 242);">+</span><span class="token plain"> currentItem</span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> initialValue </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token number" style="color: rgb(174, 129, 255);">0</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> total </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> numbers</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">reduce</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">addNumbers</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> initialValue</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token comment" style="color: rgb(198, 202, 210);">// {previousResult: 0, currentItem: 2}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token comment" style="color: rgb(198, 202, 210);">// {previousResult: 2, currentItem: 5}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token comment" style="color: rgb(198, 202, 210);">// {previousResult: 7, currentItem: 8}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token console class-name">console</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">log</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">total</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token comment" style="color: rgb(198, 202, 210);">// 15</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Notice that this <code>addNumbers</code> "reduce callback" function doesn't need to keep track of anything itself. It takes the <code>previousResult</code> and <code>currentItem</code> arguments, does something with them, and returns a new result value.</p><p><strong>A Redux reducer function is exactly the same idea as this "reduce callback" function!</strong> It takes a "previous result" (the <code>state</code>), and the "current item" (the <code>action</code> object), decides a new state value based on those arguments, and returns that new state.</p><p>If we were to create an array of Redux actions, call <code>reduce()</code>, and pass in a reducer function, we'd get a final result the same way:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> actions </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">[</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"> </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">type</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'counter/increment'</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"> </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">type</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'counter/increment'</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"> </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">type</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'counter/increment'</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">]</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> initialState </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"> </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">value</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token number" style="color: rgb(174, 129, 255);">0</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> finalResult </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> actions</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">reduce</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">counterReducer</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span><span class="token plain"> initialState</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token console class-name">console</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">log</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">finalResult</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token comment" style="color: rgb(198, 202, 210);">// {value: 3}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We can say that <strong>Redux reducers reduce a set of actions (over time) into a single state</strong>. The difference is that with <code>Array.reduce()</code> it happens all at once, and with Redux, it happens over the lifetime of your running app.</p></details><h4 class="anchor anchorWithStickyNavbar_LWe7" id="store">Store<a class="hash-link" href="#store" title="Direct link to heading">​</a></h4><p>The current Redux application state lives in an object called the <strong>store</strong> .</p><p>The store is created by passing in a reducer, and has a method called <code>getState</code> that returns the current state value:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword module" style="color: rgb(249, 38, 114);">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token imports"> configureStore </span><span class="token imports punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"> </span><span class="token keyword module" style="color: rgb(249, 38, 114);">from</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'@reduxjs/toolkit'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> store </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">configureStore</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"> </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">reducer</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> counterReducer </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token console class-name">console</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">log</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">store</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">getState</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token comment" style="color: rgb(198, 202, 210);">// {value: 0}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="dispatch">Dispatch<a class="hash-link" href="#dispatch" title="Direct link to heading">​</a></h4><p>The Redux store has a method called <code>dispatch</code>. <strong>The only way to update the state is to call <code>store.dispatch()</code> and pass in an action object</strong>. The store will run its reducer function and save the new state value inside, and we can call <code>getState()</code> to retrieve the updated value:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">store</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">dispatch</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"> </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">type</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'counter/increment'</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token console class-name">console</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">log</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">store</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">getState</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token comment" style="color: rgb(198, 202, 210);">// {value: 1}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>You can think of dispatching actions as "triggering an event"</strong>
 in the application. Something happened, and we want the store to know 
about it. Reducers act like event listeners, and when they hear an 
action they are interested in, they update the state in response.</p><p>We typically call action creators to dispatch the right action:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token function-variable function" style="color: rgb(230, 216, 116);">increment</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token keyword control-flow" style="color: rgb(249, 38, 114);">return</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">    </span><span class="token literal-property property" style="color: rgb(249, 38, 114);">type</span><span class="token operator" style="color: rgb(248, 248, 242);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(166, 226, 46);">'counter/increment'</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain">store</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">dispatch</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token function" style="color: rgb(230, 216, 116);">increment</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token console class-name">console</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">log</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">store</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">getState</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token comment" style="color: rgb(198, 202, 210);">// {value: 2}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="selectors">Selectors<a class="hash-link" href="#selectors" title="Direct link to heading">​</a></h4><p><strong>Selectors</strong>
 are functions that know how to extract specific pieces of information 
from a store state value. As an application grows bigger, this can help 
avoid repeating logic as different parts of the app need to read the 
same data:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #f8f8f2; --prism-background-color: #272822;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> </span><span class="token function-variable function" style="color: rgb(230, 216, 116);">selectCounterValue</span><span class="token plain"> </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token parameter">state</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(248, 248, 242);">=&gt;</span><span class="token plain"> state</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token property-access">value</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token keyword" style="color: rgb(249, 38, 114);">const</span><span class="token plain"> currentValue </span><span class="token operator" style="color: rgb(248, 248, 242);">=</span><span class="token plain"> </span><span class="token function" style="color: rgb(230, 216, 116);">selectCounterValue</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">store</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">getState</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token console class-name">console</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token method function property-access" style="color: rgb(230, 216, 116);">log</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token plain">currentValue</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(248, 248, 242);"><span class="token plain"></span><span class="token comment" style="color: rgb(198, 202, 210);">// 2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="redux-application-data-flow">Redux Application Data Flow<a class="hash-link" href="#redux-application-data-flow" title="Direct link to heading">​</a></h3><p>Earlier, we talked about "one-way data flow", which describes this sequence of steps to update the app:</p><ul class=""><li>State describes the condition of the app at a specific point in time</li><li>The UI is rendered based on that state</li><li>When something happens (such as a user clicking a button), the state is updated based on what occurred</li><li>The UI re-renders based on the new state</li></ul><p>For Redux specifically, we can break these steps into more detail:</p><ul class=""><li>Initial setup:<ul class=""><li>A Redux store is created using a root reducer function</li><li>The store calls the root reducer once, and saves the return value as its initial <code>state</code></li><li>When
 the UI is first rendered, UI components access the current state of the
 Redux store, and use that data to decide what to render. They also 
subscribe to any future store updates so they can know if the state has 
changed.</li></ul></li><li>Updates:<ul class=""><li>Something happens in the app, such as a user clicking a button</li><li>The app code dispatches an action to the Redux store, like <code>dispatch({type: 'counter/increment'})</code></li><li>The store runs the reducer function again with the previous <code>state</code> and the current <code>action</code>, and saves the return value as the new <code>state</code></li><li>The store notifies all parts of the UI that are subscribed that the store has been updated</li><li>Each UI component that needs data from the store checks to see if the parts of the state they need have changed.</li><li>Each component that sees its data has changed forces a re-render with the new data, so it can update what's shown on the screen</li></ul></li></ul><p>Here's what that data flow looks like visually:</p><p><img loading="lazy" alt="Redux data flow diagram" src="Redux%20Essentials,%20Part%201%20Redux%20Overview%20and%20Concepts%20Redux_files/ReduxDataFlowDiagram-49fa8c3968371d9ef6f2a1486bd40a26.gif" class="img_ev3q" width="1440" height="1080"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-youve-learned">What You've Learned<a class="hash-link" href="#what-youve-learned" title="Direct link to heading">​</a></h2><p>Redux does have a number of new terms and concepts to remember. As a reminder, here's what we just covered:</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>Summary</div><div class="admonitionContent_S0QG"><ul class=""><li><strong>Redux is a library for managing global application state</strong><ul class=""><li>Redux is typically used with the React-Redux library for integrating Redux and React together</li><li>Redux Toolkit is the recommended way to write Redux logic</li></ul></li><li><strong>Redux uses a "one-way data flow" app structure</strong><ul class=""><li>State describes the condition of the app at a point in time, and UI renders based on that state</li><li>When something happens in the app:<ul class=""><li>The UI dispatches an action</li><li>The store runs the reducers, and the state is updated based on what occurred</li><li>The store notifies the UI that the state has changed</li></ul></li><li>The UI re-renders based on the new state</li></ul></li><li><strong>Redux uses several types of code</strong><ul class=""><li><em>Actions</em> are plain objects with a <code>type</code> field, and describe "what happened" in the app</li><li><em>Reducers</em> are functions that calculate a new state value based on previous state + an action</li><li>A Redux <em>store</em> runs the root reducer whenever an action is <em>dispatched</em></li></ul></li></ul></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a class="hash-link" href="#whats-next" title="Direct link to heading">​</a></h2><p>We've seen each of the individual pieces of a Redux app. Next, continue on to <a href="https://redux.js.org/tutorials/essentials/part-2-app-structure">Part 2: Redux Toolkit App Structure</a>, where we'll look at a full working example to see how the pieces fit together.</p></div><footer class="theme-doc-footer docusaurus-mt-lg"><div class="theme-doc-footer-edit-meta-row row"><div class="col"><a href="https://github.com/reduxjs/redux/edit/master/docs/tutorials/essentials/part-1-overview-concepts.md" target="_blank" rel="noreferrer noopener" class="theme-edit-this-page"><svg fill="currentColor" height="20" width="20" viewBox="0 0 40 40" class="iconEdit_Z9Sw" aria-hidden="true"><g><path d="m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z"></path></g></svg>Edit this page</a></div><div class="col lastUpdated_vwxv"><span class="theme-last-updated">Last updated on <b><time datetime="2023-03-06T20:32:33.000Z">Mar 6, 2023</time></b></span></div></div></footer></article><nav class="pagination-nav docusaurus-mt-lg" aria-label="Docs pages navigation"><a class="pagination-nav__link pagination-nav__link--prev" href="https://redux.js.org/tutorials/typescript-quick-start"><div class="pagination-nav__sublabel">Previous</div><div class="pagination-nav__label">TypeScript Quick Start</div></a><a class="pagination-nav__link pagination-nav__link--next" href="https://redux.js.org/tutorials/essentials/part-2-app-structure"><div class="pagination-nav__sublabel">Next</div><div class="pagination-nav__label">Redux Toolkit App Structure</div></a></nav></div></div><div class="col col--3"><div class="tableOfContents_bqdL thin-scrollbar theme-doc-toc-desktop"><ul class="table-of-contents table-of-contents__left-border"><li><a href="#introduction" class="table-of-contents__link toc-highlight">Introduction</a><ul><li><a href="#how-to-read-this-tutorial" class="table-of-contents__link toc-highlight">How to Read This Tutorial</a></li></ul></li><li><a href="#what-is-redux" class="table-of-contents__link toc-highlight">What is Redux?</a><ul><li><a href="#why-should-i-use-redux" class="table-of-contents__link toc-highlight">Why Should I Use Redux?</a></li><li><a href="#when-should-i-use-redux" class="table-of-contents__link toc-highlight">When Should I Use Redux?</a></li><li><a href="#redux-libraries-and-tools" class="table-of-contents__link toc-highlight">Redux Libraries and Tools</a></li></ul></li><li><a href="#redux-terms-and-concepts" class="table-of-contents__link toc-highlight">Redux Terms and Concepts</a><ul><li><a href="#state-management" class="table-of-contents__link toc-highlight">State Management</a></li><li><a href="#immutability" class="table-of-contents__link toc-highlight">Immutability</a></li><li><a href="#terminology" class="table-of-contents__link toc-highlight">Terminology</a></li><li><a href="#redux-application-data-flow" class="table-of-contents__link toc-highlight">Redux Application Data Flow</a></li></ul></li><li><a href="#what-youve-learned" class="table-of-contents__link toc-highlight">What You've Learned</a></li><li><a href="#whats-next" class="table-of-contents__link toc-highlight">What's Next?</a></li></ul></div></div></div></div></main></div></div><footer class="footer"><div class="container container-fluid"><div class="row footer__links"><div class="col footer__col"><div class="footer__title">Docs</div><ul class="footer__items clean-list"><li class="footer__item"><a class="footer__link-item" href="https://redux.js.org/introduction/getting-started">Getting Started</a></li><li class="footer__item"><a class="footer__link-item" type="doc" href="https://redux.js.org/usage">Usage Guide</a></li><li class="footer__item"><a class="footer__link-item" href="https://redux.js.org/tutorials/essentials/part-1-overview-concepts">Tutorial</a></li><li class="footer__item"><a class="footer__link-item" href="https://redux.js.org/faq">FAQ</a></li><li class="footer__item"><a class="footer__link-item" type="doc" href="https://redux.js.org/api/api-reference">API Reference</a></li></ul></div><div class="col footer__col"><div class="footer__title">Community</div><ul class="footer__items clean-list"><li class="footer__item"><a href="https://discord.gg/0ZcbPKXt5bZ6au5t" target="_blank" rel="noopener noreferrer" class="footer__link-item">Reactiflux Discord<svg width="13.5" height="13.5" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_nPIU"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a></li><li class="footer__item"><a href="http://stackoverflow.com/questions/tagged/redux" target="_blank" rel="noopener noreferrer" class="footer__link-item">Stack Overflow<svg width="13.5" height="13.5" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_nPIU"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a></li><li class="footer__item"><a class="footer__link-item" href="https://redux.js.org/introduction/getting-started#help-and-discussion">Feedback</a></li></ul></div><div class="col footer__col"><div class="footer__title">More</div><ul class="footer__items clean-list"><li class="footer__item"><a href="https://github.com/reduxjs/redux" target="_blank" rel="noopener noreferrer" class="footer__link-item">GitHub<svg width="13.5" height="13.5" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_nPIU"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a></li><li class="footer__item">
                <a href="https://www.netlify.com/">
                  <img src="Redux%20Essentials,%20Part%201%20Redux%20Overview%20and%20Concepts%20Redux_files/netlify-color-accent.svg" alt="Deployed by Netlify">
                </a>
              </li></ul></div></div><div class="footer__bottom text--center"><div class="margin-bottom--sm"><a href="https://redux.js.org/" rel="noopener noreferrer" class="footerLogoLink_BH7S"><img src="Redux%20Essentials,%20Part%201%20Redux%20Overview%20and%20Concepts%20Redux_files/redux.svg" alt="Redux Logo" class="themedImage_ToTc themedImage--light_HNdA footer__logo"></a></div><div class="footer__copyright">Copyright © 2015–2023 Dan Abramov and the Redux documentation authors.</div></div></div></footer></div>
<script src="Redux%20Essentials,%20Part%201%20Redux%20Overview%20and%20Concepts%20Redux_files/runtime~main.c942408f.js"></script>
<script src="Redux%20Essentials,%20Part%201%20Redux%20Overview%20and%20Concepts%20Redux_files/main.aecab9b3.js"></script>

</body></html>